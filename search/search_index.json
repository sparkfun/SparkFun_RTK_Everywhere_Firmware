{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>This is just a placeholder file for the webpage re-direct. All the content for this section is actually in the <code>introduction.md</code> file.</p>"},{"location":"accuracy_verification/","title":"Accuracy Verification","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Facet in the field</p> <p>You\u2019ve got an incredibly powerful GNSS receiver in your hands. How do you verify that you can get really accurate location readings? It's a bit of work but it's a lot of fun and you'll learn a tremendous amount about surveying along the way.</p> <p>This is, admittedly, a very US-centric tutorial. We hope that it will provide some of the tools and basic guidance to be replicated in other countries. If you have additional sources for GPS/GNSS surveyed monuments in your own country, consider adding them to this document!</p> <p>This is a replication and confirmation of the procedure done by RTKLibExplorer in 2018. We modified it to demonstrate a similar process but using u-blox hardware and with a few updates.</p> <p>The process goes like this:</p> <ul> <li>Find a local monument</li> <li>Convert the coordinates</li> <li>Take measurements</li> <li>Calculate differences</li> </ul>"},{"location":"accuracy_verification/#get-used-to-rtk","title":"Get Used to RTK","text":"<p>RTK Fix Mode</p> <p>Before we can consider doing anything in the field, we need to get really comfortable using the RTK product. Verify you can get your device into RTK Fix mode. This includes setting up a permanent base and/or using a service like PointOne Nav to provide the correction data to the RTK product. Before planning a trip to the field get used to using the RTK product in Rover mode with NTRIP corrections being passed in to the device.</p>"},{"location":"accuracy_verification/#locate-gps-monument","title":"Locate GPS Monument","text":"<p>A common metal surveyor's mark</p> <p>Locate a GPS monument. These are the little metal caps, placed by surveyors, embedded into the sidewalk and roads around populated areas. While monuments are fairly common, we need a monument whose location is precisely known.</p> <p></p> <p>Boulder has a large number of monuments</p> <p>Thankfully, in the USA the National Geodetic Survey has an incredible database of public monuments. Enter your location into the NGS Data Explorer to find the nearest monument.</p> <p></p> <p>Boulder's GPS monuments</p> <p>While the Data Explorer will show many marks, turn off all but the GPS marks. These were surveyed with extreme precision and have published coordinates.</p>"},{"location":"accuracy_verification/#convert-monument-location","title":"Convert Monument Location","text":"<p>Monument near SparkFun</p> <p>Find a GPS monument that is easiest for you to get to, click on it, and open the datasheet. You'll see a large amount of text and data for that specific location.</p> <p></p> <p>Position in both NAD83 and ECEF</p> <p>My respect for the surveying industry grows daily, but that doesn't mean they are free from competing and confusing standards. What you need to know is that the SparkFun RTK product line outputs coordinates in the WGS84 coordinate system by default and can output ECEF as well. Most of the coordinates by the NGS are NAD83 which has about a 1.5-meter difference from the WGS84 coordinate system. No big deal for general mapping but it'll throw a wrench in your testing if you're not careful.</p> <p>The SparkFun example monument is at:</p> <ul> <li>Latitude: 40 05 14.86880 (NAD83 in 2012)</li> <li>Longitude: -105 09 01.68689 (NAD83 in 2012)</li> <li>Elliptical Height: 1613.737 meters (NAD83 in 2012)</li> </ul>"},{"location":"accuracy_verification/#convert-nad83-to-today","title":"Convert NAD83 to Today","text":"<p>So we know the NAD83 Lat/Long of our monument, right? Not quite.</p> <p></p> <p>Example plate movement map</p> <p>The earth is not static and the tectonic plates have this annoying habit of moving. Note that the coordinates from our datasheet are from 6/27/2012. Ten years of movement can affect millimeter measurements.</p> <p></p> <p>Plate tectonic time machine</p> <p>Thankfully the NGS has a tool called Horizontal Time-Dependent Positioning. This allows both the conversion between coordinate systems and adjusting a given location to a given start and end time. Use the tool to convert the NAD83 coordinates of your monument from the time they were taken (June 27, 2012, in our example) to WGS84(G2139) coordinates on today's date. If you convert the location for your monument on a Tuesday and visit it 5 days later, the coordinates should still be perfectly fine. This tool is needed both for the coordinate change (NAD83 to WGS84) and for long (months or years) periods between when the monument was surveyed.</p> <p></p> <p>Monument converted to WGS84 corrected to 2022</p> <p>Once we enter all the pertinent data, we receive a nice output showing us our modern-day WGS84 coordinates! Also, note the X/Y/Z ECEF coordinates.</p> <p>The SparkFun example monument is at:</p> <ul> <li>Latitude: 40 05 14.88667 (WGS84 in 2022)</li> <li>Longitude: -105 09 01.74023 (WGS84 in 2022)</li> <li>Elliptical Height: 1612.873 meters (WGS84 in 2022)</li> </ul> <p>And in ECEF (this will be handy in a minute):</p> <ul> <li>X: -1277423.441 m (ECEF in 2022)</li> <li>Y: -4717810.159 m (ECEF in 2022)</li> <li>Z: 4086459.331 m (ECEF in 2022)</li> </ul>"},{"location":"accuracy_verification/#convert-from-hhmmss-to-decimal","title":"Convert from HH:MM:SS to Decimal","text":"<p>Conversion to Decimal</p> <p>The NGS coordinates are in the hour/minute/second format (ie, 40 05 14.86880). We need decimal format when we're in the field viewing locations in SW Maps. We recommend the LatLong.net converter, but there are many options. Make sure the tools, converters, and calculators you use maintain 8 decimal places.</p> <p>The SparkFun example monument is at:</p> <ul> <li>Latitude: 40.08746852 (WGS84 in 2022)</li> <li>Longitude: -105.15048340 (WGS84 in 2022)</li> <li>Elliptical Height: 1613.737 meters (WGS84 in 2022)</li> </ul> <p>These are the coordinates we hope to see using SW Maps once we get out into the field. Write down your monument coordinates so that you have some idea of how close your unit is to the ideal in real-time.</p>"},{"location":"accuracy_verification/#field-trip","title":"Field Trip!","text":"<p>Cheap tripod above the monument</p> <p>Not a bad view!</p> <p>You will need to decide how cheap you want your setup to be. I went too cheap; my tripod doesn\u2019t have a hook on the bottom so the string with a bolt (I didn\u2019t even have a plumb bob) to center above the marker was not central to the Facet. The height measurement from the mark to the ARP (bottom of the Facet) was done with a tape measure, in other words, not very accurate. But it works!</p> <p>Find the monument and locate your Facet (or RTK Surveyor, Express, Express Plus, Facet L-Band, etc) over the monument. Using a tape measure or other tool, measure the distance from the top of the monument to the bottom of the Facet. In this example, it was 45 \u00be\u201d or 1162mm. Obviously, millimeters matter here but don't let 'perfection' be the enemy of 'done'.</p> <p></p> <p>L-Band Facet ARP</p> <p>Locate the ARP of your given RTK product (53mm for units using the TOP106 Antenna, 61mm for Facet, 69mm for Facet L-Band). Add your ARP to the height above the monument you measured previously. In this example 1416 + 69 = 1.485m. Enter that total height into SW Maps as the \u2018Instrument Height\u2019. This will allow the software to subtract the antenna location height from the current 3D location to gain the location of the point where the plumb bob (or bolt) below your apparatus is located.</p> <p>With your instrument height determined, connect to the RTK product, begin sending RTCM corrections (either over NTRIP or radio link) and enter RTK Fix.</p>"},{"location":"accuracy_verification/#record-readings","title":"Record Readings","text":"<p>SW Maps screenshot of monument location</p> <p>We can see the approximate location of the monument in the above location.</p> <p></p> <p>Screenshot of a point in time</p> <p>Note</p> <p>Note the significant figures of the Lat/Long, result in 8 decimal places.</p> <p>Screenshots are an easy way to record lat/long/alt but SW Maps (and other GIS software) allows the averaging of a position. Choose your own adventure. For our example, we took screenshots/snapshots of the location. Some surveyors hold a position for multiple minutes to get a point; we can do the same in under a second.</p> <p></p> <p>Comparison of three RTK correction sources</p> <p>Off the shelf, we regularly see 300 down to 150mm horizontal positional accuracy using any RTK product with a good L1/L2 antenna. This is shown in the picture above as the circle with 'No Corrections'.</p> <p>With corrections turned on, the benefit of an RTK fix is obvious. The two surveyed points overlap each other so closely they are nearly indistinguishable. The SparkFun base station is documented here and has a location accuracy of approximately 8.4mm. Using a base station is more accurate (as we will see) but L-Band corrections will also get you incredibly similar accuracy with a lot less hassle.</p>"},{"location":"accuracy_verification/#why-doesnt-it-match-the-image","title":"Why doesn\u2019t it match the image?","text":"<p>Actual location vs image</p> <p>Your location bubble may not fall directly over the pixels representing the monument. Why? Imagine you are a satellite 50 miles above the earth\u2019s surface. Now take a photo that is many megapixels. Now align all those pixels within a few millimeters of reality. Google maps (and all terrestrial imagery as an industry) does an incredible job of aligning the surface imagery but it is not perfect, and it is certainly not millimeter accurate. Do not assume the google maps image is where your monument actually exists.</p>"},{"location":"accuracy_verification/#spreadsheet-party","title":"Spreadsheet Party","text":"<p>We\u2019ve established the monument\u2019s location, we\u2019ve captured the location of the RTK Facet, and they are different, but by how much? Calculating the difference between Lat/Long coordinates is not trivial. We\u2019ve found converting to the ECEF coordinate system is the easiest way to calculate the difference between GPS coordinates.</p> <p></p> <p>Convert LLA to ECEF</p> <p>Enter your lat, long, and altitude coordinates into an LLA to ECEF converter. We found the Sysense calculator to work very well. How do we know it\u2019s accurate? Take the original coordinates from the NGS Datasheet, and use the calculator to convert them to ECEF. They are identical.</p> <p></p> <p>ECEF difference between monument and readings</p> <p>Feel free to look at and make a copy of the SparkFun example spreadsheet. ECEF is a wonderfully simplistic frame of reference; the comparison between two points is simply X/Y/Z in meters. We can use the Pythagorean theorem to calculate the 3D variance. In our example, it is 52mm using corrections from a fixed base, and 189mm for an L-Band corrected base.</p> <p>52mm off a professional mark is a clear indicator we are very close to the limit of our equipment. The sheer amount of geoscience, coordinate math, and relativistic physics that very smart people have contributed to enable any part of this experiment is awe-inspiring. It gave me great satisfaction and reassurance that our base at SparkFun HQ is set up well, and that, in the hands of a professional, the RTK product line is quite capable of providing very accurate readings.</p>"},{"location":"accuracy_verification/#how-do-i-get-14mm","title":"How do I get 14mm?!","text":"<ul> <li>Use the best equipment. Our mechanical setup was rickety and cheap. Use a surveyor\u2019s bipod setup, with a bubble level, and a prism pole to accurately level the RTK receiver and measure the distance to the monument.</li> <li>Use an antenna that is NGS calibrated to obtain accurate ARPs. The SparkFun TOP106 antenna has been calibrated and we are in the process of calibrating the RTK Facet and RTK Facet L-Band.</li> <li>Use an accurate base. A temporary or \u2018survey-in\u2019 base will not be accurate. The base needs 24 hours of logging with a PPP analysis.</li> <li>Be within 10km of your base. A baseline that is more than 10km will introduce inaccuracies to the RTK fix readings.</li> <li>Correction services are not as accurate as a fixed base. While services such as Skylark and PointPerfect are convenient, they use models to estimate the overall isotropic disturbance. A local, fixed base will outperform a correction service.</li> <li>Take an average of points. All the points taken in this example were single snapshots. Average a few seconds' worth of readings.</li> </ul> <p>This was a lot of fun and a good excuse to get outdoors. We hope you enjoy finding some new points in your world.</p>"},{"location":"configure_with_bluetooth/","title":"Configure with Bluetooth","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Configuration menu via Bluetooth</p> <p>Bluetooth-based configuration provides a quick and easy way to navigate the serial menus as if you were connected over a USB cable. For regular users, this is often the preferred configuration method.</p> <p>The RTK device will be a discoverable Bluetooth device (both BT SPP and BLE are supported). For information about Bluetooth pairing, please see Connecting Bluetooth.</p>"},{"location":"configure_with_bluetooth/#entering-bluetooth-echo-mode","title":"Entering Bluetooth Echo Mode","text":"<p>Send the <code>+++</code> characters to enter Bluetooth Echo Mode</p> <p>Once connected, the RTK device will report a large amount of NMEA data over the link. To enter Bluetooth Echo Mode send the characters <code>+++</code>.</p> <p>Note</p> <p>There must be a 2 second gap between any serial sent from a phone to the RTK device, and any escape characters. In almost all cases this is not a problem. Just be sure it's been 2 seconds since an NTRIP source has been turned off and attempting to enter Bluetooth Echo Mode.</p> <p></p> <p>The GNSS Messages menu shown over Bluetooth Echo Mode</p> <p>Once in Bluetooth Echo Mode, any character sent from the RTK unit will be shown in the Bluetooth app, and any character sent from the connected device (cell phone, laptop, etc) will be received by the RTK device. This allows the opening of the config menu as well as the viewing of all regular system output.</p> <p>For more information about the Serial Config menu please see Configure with Serial.</p> <p></p> <p>Exit from the Serial Config Menu</p> <p>Bluetooth can also be used to view system status and output. Simply exit the config menu using option 'x' and the system output can be seen.</p>"},{"location":"configure_with_bluetooth/#exit-bluetooth-echo-mode","title":"Exit Bluetooth Echo Mode","text":"<p>To exit Bluetooth Echo Mode simply disconnect Bluetooth. In the Bluetooth Serial Terminal app, this is done by pressing the 'two plugs' icon in the upper right corner.</p> <p></p> <p>Menu option 'b' for exiting Bluetooth Echo Mode</p> <p>Alternatively, if you wish to stay connected over Bluetooth but need to exit Bluetooth Echo Mode, use the 'b' menu option from the main menu.</p>"},{"location":"configure_with_bluetooth/#serial-bluetooth-terminal-settings","title":"Serial Bluetooth Terminal Settings","text":"<p>Here we provide some settings recommendations to make the terminal navigation of the RTK device a bit easier.</p> <p></p> <p>Terminal Settings with Timestamps disabled</p> <p>Disable timestamps to make the window a bit wider, allowing the display of longer menu items without wrapping.</p> <p></p> <p>Clear on send and echo off</p> <p>Clearing the input box when sending is very handy as well as turning off local echo.</p>"},{"location":"configure_with_cli/","title":"Configure with CLI","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Entering Command line mode</p> <p>For advanced applications, the RTK device can be queried and configured using a command line interface (CLI). This mode can be entered from the main serial menu using '+' or over Bluetooth by sending 10 dashes ('----------'). To exit CLI, type <code>exit</code> or use the <code>$SPEXE,EXIT*77</code> command.</p> <p>The commands and their responses are implemented as an extension to the standard NMEA format. This allows the use of the same parser to parse NMEA sentences and the SparkFun commands/replies.</p> <p>Each command or response sentence begins with the talker id $SP.</p> <p>The commands end with a * followed by a two hex character checksum, and then a  line terminator. The checksum is in accordance with the NMEA-0183 standard."},{"location":"configure_with_cli/#checking-for-an-active-command-interface","title":"Checking For an Active Command Interface","text":"<p>The client can check whether the command interface is active by sending the following command.</p> <pre><code>$SPCMD*49&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>If the command interface is active, the receiver will respond with the following within 2 seconds.</p> <pre><code>$SPCMD,OK*61&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>If the expected response is not received, the client may attempt to send the escape sequence again to enter the command interface.</p>"},{"location":"configure_with_cli/#getting-configuration-values","title":"Getting Configuration Values","text":"<p>To get a setting value, the client sends the following.</p> <pre><code>$SPGET,[setting name]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The receiver responds with</p> <pre><code>$SPGET,[setting name],[setting value]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>If there was an error in getting the setting value, such as the setting name being unavailable, the receiver responds with the following error message.</p> <pre><code>$SPGET,[setting name],,ERROR,[Verbose error description]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Example</p> <p>For example, to get the elevation mask:</p> <p>Send:</p> <pre><code>$SPGET,elvMask*32&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Receive:</p> <pre><code>$SPGET,elvMask,15*1A&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>If a setting is a string, the setting will be surrounded in quotes. Any internal quotes will be escaped.</p> <p>Send:</p> <pre><code>$SPGET,ntripClientCasterUserPW*35\n</code></pre> <p>Receive:</p> <pre><code>$SPGET,ntripClientCasterUserPW,\"pwWith\\\"quote\"*38\n</code></pre> <p>Setting the Configuration Values</p> <p>To set a configuration value, the client sends the following.</p> <pre><code>$SPSET,[setting name],[new value]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The receiver responds with</p> <pre><code>$SPSET,[setting name],[new value],OK*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>If there was an error in setting the value, such as the setting name being unknown, the receiver responds with the following error message. The previous value is optional and will be blank in case the setting name is not found.</p> <pre><code>$SPSET,[setting name],[optional: current value],ERROR,[Verbose error description]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Example</p> <p>For example, to set the elevation mask:</p> <p>Send:</p> <pre><code>$SPSET,elvMask,15*0E&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Receive:</p> <pre><code>$SPSET,elvMask,15,OK*26&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Using the $SPSET command only sets the configuration value in the firmware memory. The settings are not applied until an APPLY action is executed.</p> <p>Settings containing strings must be surrounded by quotes:</p> <p>Send:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"MyPass\"*08\n</code></pre> <p>Receive:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"MyPass\",OK*20\n</code></pre> <p>Below, quotes are allowed within the string but must be escaped. Response will also be escaped, but the device will store the setting with escape characters removed:</p> <p>Send:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"pwWith\\\"quote\"*2C\n</code></pre> <p>Receive:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"pwWith\\\"quote\",OK*04\n</code></pre> <p>ntripClientCasterUserPW will be set to: <code>pwWith\"quote</code></p> <p>Below, commas are allowed within the string but must be between two quotes:</p> <p>Send:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"complex,password\"*5E\n</code></pre> <p>Receive:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"complex,password\",OK*76\n</code></pre> <p>ntripClientCasterUserPW will be set to: <code>complex,password</code></p> <p>Below is a combination of an internal escaped quote, and comma within a setting:</p> <p>Send:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"a55G\\\"e,e#\"*5A\n</code></pre> <p>Receive:</p> <pre><code>$SPSET,ntripClientCasterUserPW,\"a55G\\\"e,e#\",OK*72\n</code></pre> <p>ntripClientCasterUserPW set to: <code>a55G\"e,e#</code></p>"},{"location":"configure_with_cli/#receiver-actions","title":"Receiver Actions","text":"<p>The $SPEXE command can be used to execute various actions on the receiver.</p> <pre><code>$SPEXE,[action name]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The receiver responds with the following.</p> <pre><code>$SPEXE,[action name],OK*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The response is sent before carrying out the action if it involves a reboot or exit. It is sent after carrying out the action if the receiver will remain in command mode.</p> <p>If the receiver is unable to carry out the action, the following error message is returned.</p> <pre><code>$SPEXE,[action name],ERROR*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The following actions shall be implemented.</p> <ul> <li><code>APPLY</code>: applies the currently stored settings, rebooting if necessary.</li> <li><code>SAVE</code>: Saves current settings to NVM</li> <li><code>EXIT</code>: Exits the command interface</li> <li><code>REBOOT</code>: Restarts the receiver firmware without applying settings.</li> <li><code>LIST</code>: List all firmware configuration fields.</li> </ul>"},{"location":"configure_with_cli/#list-action","title":"LIST Action","text":"<p>Executing the list action will return a list of the configuration values.</p> <p>Send:</p> <pre><code>$SPEXE,LIST*75&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The response is in the form of multiple $SPLST sentences, followed by an acknowledgement of the $SPEXE command.</p> <p>The $SPLST sentences shall have the following structure:</p> <pre><code>$SPLST,[setting name],[data type],[current value]*FF&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>The data type contains whether the field is a char[n], int, bool, or float.</p> <p>Example</p> <p>Example response:</p> <pre><code>$SPLST,enableSD,bool,true*6A&lt;CR&gt;&lt;LF&gt;\n$SPLST,enableDisplay,bool,true*27&lt;CR&gt;&lt;LF&gt;\n$SPLST,maxLogTime_minutes,int,1*01&lt;CR&gt;&lt;LF&gt;\n$SPLST,maxLogLength_minutes,int,10*38&lt;CR&gt;&lt;LF&gt;\n$SPLST,observationSeconds,int,10*37&lt;CR&gt;&lt;LF&gt;\n$SPLST,observationPositionAccuracy,float,0.5*59&lt;CR&gt;&lt;LF&gt;\n.\n.\n.\n$SPEXE,LIST,OK*5D&lt;CR&gt;&lt;LF&gt;\n</code></pre>"},{"location":"configure_with_ethernet/","title":"Configure with Ethernet","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>During Ethernet configuration, the RTK device will present a webpage that is viewable from a desktop/laptop connected to the local network.</p> <p></p> <p>SparkFun RTK Ethernet Configuration Interface</p>"},{"location":"configure_with_ethernet/#rtk-evk","title":"RTK EVK","text":"<p>To get into Ethernet configuration follow these steps:</p> <ol> <li>Power on the RTK EVK and connect it to your Ethernet network using the supplied cable</li> <li> <p>Once the device has started, put the RTK EVK into Ethernet config mode by clicking the Mode button on the front panel. The first click opens the mode menu, successive clicks select the next menu option. Keep clicking until Cfg Eth is highlighted, then do a quick double-click to select it. Note that it is only possible to put the EVK into this mode via the Mode button, requiring physical access to the EVK. Remote configuration is only possible after putting the EVK into this mode.</p> <p> SparkFun RTK EVK Mode Menu </p> </li> <li> <p>The RTK EVK will reboot into a dedicated Configure-Via-Ethernet mode</p> </li> <li> <p>By default, the RTK EVK uses DHCP, obtaining its IP address from your DHCP server. The IP address is displayed on the OLED display. You can use a fixed IP address if desired. See Ethernet Menu for more details.</p> <p> SparkFun RTK EVK Config Ethernet </p> </li> <li> <p>Open a browser (Chrome is preferred) on your computer and type the EVK's IP address into the address bar. The web config page will open.</p> <p> SparkFun RTK Ethernet Configuration Interface </p> </li> </ol>"},{"location":"configure_with_ethernet/#file-manager","title":"File Manager","text":"<p>On devices that support an external SD card, a file manager is shown if an SD card is detected. This is a handy way to download files to a local device (cell phone or laptop) as well as delete any unneeded files. The SD size and free space are shown. Files may be uploaded to the SD card if needed.</p> <p>Additionally, clicking on the top checkbox will select all files for easy removal of a large number of files.</p>"},{"location":"configure_with_ethernet/#saving-and-exit","title":"Saving and Exit","text":"<p>Once settings are input, please press \u2018Save Configuration\u2019. This will validate any settings, show any errors that need adjustment, and send the settings to the unit. The page will remain active until the user presses \u2018Exit and Reset\u2019 at which point the unit will exit Ethernet configuration and return to whichever mode was selected in the System Configuration tab System Initial State drop-down (Base, Rover or NTP).</p> <p>It is also possible to exit Configure-Via-Ethernet mode by: clicking the Mode button on the front panel; or by opening the serial menu and selecting 'r'.</p>"},{"location":"configure_with_serial/","title":"Configure with Serial","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Note</p> <p>Any serial menu that is shown below can also be accessed over Bluetooth. This makes any configuration of a device much easier in the field. Please see Configure With Bluetooth for more information.</p> <p>To configure an RTK device using serial attach a USB C cable to the device.</p>"},{"location":"configure_with_serial/#rtk-torch","title":"RTK Torch","text":"<p>The USB Connector on the RTK Torch</p> <p>Pull back the silicone cover and insert a USB C and power on the device. Once the device is powered on, open the <code>Device Manager</code> in Windows and look under the Ports branch to see what COM port the device is assigned to.</p> <p></p> <p>SparkFun RTK Torch Two Enumerated Ports</p> <p>Configuring the RTK device is done over the USB-Enhanced-SERIAL-B CH342 COM port via the serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings.</p> <p>Don't See 'USB-Enhanced-SERIAL-B CH342'?</p> <p>If you've never connected a CH34x device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.</p>"},{"location":"configure_with_serial/#terminal-window","title":"Terminal Window","text":"<p>Open a terminal window at 115200bps; you should see various status messages every second. Press any key to open the configuration menu. Not sure how to use a terminal? Check out our Serial Terminal Basics tutorial.</p> <p>Note that some Windows terminal programs (e.g. Tera Term) may reboot the RTK device when the terminal connection is closed. You can disconnect the USB cable first to prevent this from happening.</p> <p></p> <p>The Main Menu</p> <p>Pressing any button will display the Main menu. The Main menu will display the current firmware version and the Bluetooth broadcast name.</p> <p>Note</p> <p>When powered on, the RTK device will broadcast itself as either [Platform] Rover-XXXX or [Platform] Base-XXXX depending on which state it is in. The Platform is 'Torch', 'EVK', etc.</p> <p>Pressing '1' or 's' for example, will open those submenus.</p> <p>The menus will timeout after 10 minutes of inactivity, so if you do not press a key the device will exit the menu and return to reporting status messages.</p> <p></p> <p>Configuration menu via Bluetooth</p> <p>Note</p> <p>Bluetooth-based configuration is supported. Please see Configure With Bluetooth for more information.</p>"},{"location":"configure_with_serial/#system-report","title":"System Report","text":"<p>Sending the <code>~</code> character to the device over the serial port will trigger a system status report. This is a custom NMEA-style sentence, complete with CRC.</p> <p></p> <p>Terminal showing System Status</p> <p>Example</p> <p>Below is an example system status report sentence:</p> <p>$GNTXT,01,01,05,202447.00,270522,0.380,29,40.090355193,-105.184764700,1560.56,3,0,86*7    1</p> <ul> <li>$GNTXT : Start of custom NMEA sentence    </li> <li>01 : Number of sentences  </li> <li>01 : Sentence number  </li> <li>05 : Sentence type ID (5 is for System Status messages)   </li> <li>202447.00 : Current hour, minute, second, milliseconds    </li> <li>270522 : Current day, month, year </li> <li>0.380 : Current horizontal positional accuracy (m)    </li> <li>29 : Satellites in view   </li> <li>40.090355193 : Latitude   </li> <li>-105.184764700 : Longitude    </li> <li>1560.56 : Altitude    </li> <li>3 : Fix type (0 = no fix, 2 = 2D fix, 3 = 3D fix, 4 = 3D + Dead Reackoning, 5 = Time) </li> <li>0 : Carrier solution (0 = No RTK, 1 = RTK Float, 2 = RTK Fix)</li> <li>86 : Battery level (% remaining)</li> <li>*71 : The completion of the sentence and a CRC</li> </ul> <p>Note</p> <p>This is a custom NMEA sentence, can vary in length, and may exceed the maximum permitted sentence length of 61 characters.</p>"},{"location":"configure_with_settings_file/","title":"Configure with Settings File","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>SparkFun RTK Settings File</p> <p>All device settings are stored both in internal memory and an SD card (if supported and if one is detected). The device will load the latest settings at each power on. If there is a discrepancy between the internal settings and an external settings file then the external settings file will be used. This allows a collection of RTK products to be identically configured using one 'golden' settings file loaded onto an SD card.</p> <p>All system configuration can be done by editing the SFE_[Platform]_Settings_0.txt file (example shown above) where [Platform] is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). This file is created when a microSD card is installed.</p> <p>Danger</p> <p>The settings are clear text but there are no safety guards against setting illegal states. It is not recommended to use this method unless You Know What You're Doing\u00ae.</p> <p>Keep in mind:</p> <ul> <li>Not all devices have an SD card slot (ie, RTK Torch) and therefore do not support this configuration method.</li> <li>The settings file contains hundreds of settings.</li> <li> <p>The SD card file \"SFE_EVK_Settings_0.txt\" is used for Profile 1, SD card file \"SFE_EVK_Settings_1.txt\" is used for Profile 2, etc.</p> <p>Note</p> <p>The <code>Settings_0</code> is for Profile 1, <code>Settings_1</code> is for Profile 2, <code>Settings_2</code> is for Profile 3...</p> </li> <li> <p>When switching to a new profile, the settings file on the SD card with all settings will be created or updated. The internal settings will not be updated until you switch to the profile. Additionally, the file for a particular profile will not be created on the SD card until you switch to that profile.</p> </li> <li>It is not necessary that the settings file on the SD card have all of the settings.</li> </ul> <p>Example</p> <p>For example, if you only wanted to set up two wireless networks for Profile 2, you could create a file named <code>SFE_Express_Settings_1.txt</code> that only contained the following settings:</p> <pre><code>profileName=a name you choose\nenableTcpServer=1\nwifiNetwork0SSID=your SSID name 1\nwifiNetwork0Password=your SSID password 1\nwifiNetwork1SSID=your SSID name 2\nwifiNetwork1Password=your SSID password 2\nwifiConfigOverAP=0\n</code></pre> <p>These settings on the SD card will overwrite the settings in the RTK Express internal memory. Once you select this profile on your RTK Express, the SD card file will be overwritten with all of the merged settings.</p>"},{"location":"configure_with_settings_file/#forcing-a-factory-reset","title":"Forcing a Factory Reset","text":"<p>If the device has been configured into an unknown state the device can be reset to factory defaults. Power down the RTK device and remove the SD card. Using a computer and an SD card reader, open the SFE_[Platform]_Settings_0.txt file where [Platform] is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). Modify the sizeOfSettings value to -1 and save the file to the SD card. Reinsert the SD card into the RTK unit and power up the device. Upon power up, the device will display 'Factory Reset' while it clears the settings.</p> <p>Note</p> <p>A device may have multiple profiles, ie multiple settings files (SFE_EVK_Settings_0.txt, SFE_EVK_Settings_1.txt, etc). All settings files found on the SD card must be modified to guarantee the factory reset.</p>"},{"location":"configure_with_ucenter/","title":"Configure with u-center","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>On devices that have a u-blox GNSS receiver, the ZED-F9P GNSS module can be configured independently using the u-center software from u-blox by connecting a USB cable to the Config u-blox USB connector. Settings can be saved to the module between power cycles. For more information please see SparkFun\u2019s Getting Started with u-center by u-blox.</p> <p>However, because the ESP32 does considerable configuration of the ZED-F9P at power on it is not recommended to modify the settings of the ZED-F9P using u-center. Nothing will break but your changes will likely be overwritten at the next power cycle.</p>"},{"location":"configure_with_wifi/","title":"Configure with WiFi","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>SparkFun RTK WiFi Configuration Interface</p> <p>During WiFi configuration, the RTK device will present a webpage that is viewable from either a desktop/laptop with WiFi or a cell phone. For advanced configurations, a desktop is recommended. For quick in-field changes, a cell phone works great.</p> <p></p> <p>Desktop vs Phone display size configuration</p>"},{"location":"configure_with_wifi/#rtk-torch","title":"RTK Torch","text":"<p>To get into WiFi configuration follow these steps:</p> <ol> <li>Power on the RTK Torch</li> <li>Once the device has started press the Power Button twice within 1 second (double tap).</li> <li>The display will beep twice indicating it is waiting for incoming connections.</li> <li>Connect to WiFi network named \u2018RTK Config\u2019.</li> <li>You should be automatically re-directed to the config page but if you are not, open a browser (Chrome is preferred) and type rtk.local into the address bar.</li> </ol> <p></p> <p>Browser with rtk.local</p> <p>Continue with Connecting to WiFi network.</p>"},{"location":"configure_with_wifi/#rtk-evk","title":"RTK EVK","text":"<p>To get into WiFi configuration follow these steps:</p> <ol> <li>Ensure the WiFi / Bluetooth antenna is attached, then connect the RTK EVK to a power source.</li> <li> <p>Once the device has started, put the RTK EVK into WiFi config mode by clicking the Mode button on the front panel. The first click opens the mode menu, successive clicks select the next menu option. Keep clicking until Cfg WiFi is highlighted, then do a quick double-click to select it.</p> <p>  SparkFun RTK EVK Mode Menu  </p> </li> <li> <p>The display will change, showing that the EVK is in WiFi configuration mode.</p> </li> <li>Connect to WiFi network named \u2018RTK Config\u2019.</li> <li> <p>You should be automatically re-directed to the config page but if you are not, open a browser (Chrome is preferred) and type rtk.local into the address bar.</p> <p>  Browser with rtk.local  </p> </li> </ol>"},{"location":"configure_with_wifi/#rtk-postcard","title":"RTK Postcard","text":"<p>To get into WiFi configuration follow these steps:</p> <ol> <li>Connect the RTK Postcard to a power source.</li> <li> <p>Once the device has started, put the RTK Postcard into WiFi config mode by clicking down on the directional pad. The first click opens the mode menu, successive clicks select the next menu option. Keep clicking until Cfg WiFi is highlighted, then press the center of the directional pad to select it.</p> <p>  SparkFun RTK EVK Mode Menu  </p> </li> <li> <p>The display will change, showing that the device is in WiFi configuration mode.</p> </li> <li>Connect to WiFi network named \u2018RTK Config\u2019.</li> <li> <p>You should be automatically re-directed to the config page but if you are not, open a browser (Chrome is preferred) and type rtk.local into the address bar.</p> <p>  Browser with rtk.local  </p> </li> </ol>"},{"location":"configure_with_wifi/#connecting-to-wifi-network","title":"Connecting to WiFi Network","text":"<p>The WiFi network RTK Config as seen from a cellphone</p> <p>Note</p> <p>Upon connecting, your phone may warn you that this WiFi network has no internet. That's ok. Stay connected to the network and open a browser. If you still have problems turn off Mobile Data so that the phone does not default to cellular for internet connectivity and instead connects to the RTK Device.</p> <p></p> <p>Connected to the RTK WiFi Setup Page</p> <p>Clicking on the category tab will open or close that section. Clicking on an \u2018i\u2019 will give you a brief description of the options within that section.</p> <p></p> <p>This unit has firmware version 1.0 and a UM980 GNSS receiver</p> <p>Note</p> <p>The firmware for the RTK device and the firmware for the GNSS receiver is shown at the top of the page. This can be helpful when troubleshooting or requesting new features.</p>"},{"location":"configure_with_wifi/#file-manager","title":"File Manager","text":"<p>On devices that support an external SD card, a file manager is shown if an SD card is detected. This is a handy way to download files to a local device (cell phone or laptop) as well as delete any unneeded files. The SD size and free space are shown. Files may be uploaded to the SD card if needed.</p> <p>Additionally, clicking on the top checkbox will select all files for easy removal of a large number of files.</p>"},{"location":"configure_with_wifi/#saving-and-exit","title":"Saving and Exit","text":"<p>Once settings are input, please press \u2018Save Configuration\u2019. This will validate any settings, show any errors that need adjustment, and send the settings to the unit. The page will remain active until the user presses \u2018Exit and Reset\u2019 at which point the unit will exit WiFi configuration and return to whichever mode was selected in the System Configuration tab System Initial State drop-down (Base, Rover or NTP).</p>"},{"location":"connecting_bluetooth/","title":"Connecting Bluetooth","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>SparkFun RTK devices transmit full NMEA sentences over Bluetooth serial port profile (SPP) at 2Hz and 115200bps. This means that nearly any GIS application that can receive NMEA data over a serial port (almost all do) can be used with SparkFun RTK devices. As long as your end system can open a serial port over Bluetooth (also known as SPP) your system can retrieve industry-standard NMEA positional data. The following steps show how to connect an external tablet, or cell phone to the RTK device so that any serial port-based GIS application can be used.</p> <p>Note</p> <p>BLE is also supported and can be used in place of Bluetooth SPP. See Bluetooth Protocols for more information.</p>"},{"location":"connecting_bluetooth/#android","title":"Android","text":"<p>Pairing with the 'Torch Rover-DFAE' over Bluetooth</p> <p>Open Android's system settings and find the 'Bluetooth' or 'Connected devices' options. Scan for devices and pair with the device in the list that matches the Bluetooth MAC address on your RTK device.</p> <p>When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Torch, Facet, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps.</p> <p></p> <p>Bluetooth MAC address B022 is shown in the upper left corner</p> <p>Note</p> <p>For devices with a built-in display, B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range.</p>"},{"location":"connecting_bluetooth/#enable-mock-location","title":"Enable Mock Location","text":"<p>Most GIS applications will gracefully handle the Bluetooth connection to the RTK device and provide an NTRIP Client for getting the RTCM corrections so this section can be skipped. If, in the rare case, a GIS app does not allow NTRIP corrections, Mock Locations can be enabled under Android. Then a data provider like Lefebure or GNSS Master can be used to act as a middle-man.</p> <p>Before proceeding, it is recommended to have the mock location provider app already installed. So if you haven't already, consider installing Lefebure, GNSS Master, etc.</p> <p>To enable Mock Locations, Developer Mode in Android must be enabled. It is best to google the most recent procedure for this but the following procedure should work:</p> <ol> <li> <p>Open Android settings</p> <p> </p> </li> <li> <p>Open About phone</p> <p> </p> </li> <li> <p>Scroll to the bottom and click on Build number five or more times. The device will prompt as more taps are required.</p> </li> </ol> <p>Once Developer Mode is enabled:</p> <ol> <li> <p>Open Android settings</p> <p> </p> </li> <li> <p>Open System</p> <p> </p> </li> <li> <p>Open Developer options</p> <p> </p> </li> <li> <p>Scroll all the way to the bottom of a very long list of developer options.</p> </li> <li> <p>Select the app to use for Mock Location. This is usually Lefebure or GNSS Master but can be tailored as needed.</p> </li> </ol>"},{"location":"connecting_bluetooth/#apple-ios","title":"Apple iOS","text":"<p>Please see iOS GIS Software for information about how to connect to individual GIS apps. Some require a BLE connection and some require a WiFi hotspot connection.</p> <p>More information is available on the System Menu for switching between Bluetooth SPP and BLE.</p>"},{"location":"connecting_bluetooth/#windows","title":"Windows","text":"<p>Open settings and navigate to Bluetooth. Click Add device.</p> <p></p> <p>Adding Bluetooth Device</p> <p>Click Bluetooth 'Mice, Keyboards, ...'</p> <p></p> <p>Viewing available Bluetooth Devices</p> <p>Click on the RTK device. When powered on, the RTK product will broadcast itself as either '[Platform] Rover-5556' or '[Platform] Base-5556' depending on which state it is in. [Platform] is Facet, Express, Surveyor, etc. Discover and pair with this device from your phone or tablet. Once paired, open SW Maps.</p> <p></p> <p>Bluetooth MAC address B022 is shown in the upper left corner</p> <p>Note</p> <p>For devices with a built-in display, B022 is the last four digits of your unit's MAC address and will be unique to the device in front of you. This is helpful in case there are multiple RTK devices within Bluetooth range.</p> <p></p> <p>Bluetooth Connection Success</p> <p>The device will begin pairing. After a few seconds, Windows should report that you are ready to go.</p> <p></p> <p>Bluetooth COM ports</p> <p>The device is now paired and a series of COM ports will be added under 'Device Manager'.</p> <p></p> <p>NMEA received over the Bluetooth COM port</p> <p>If necessary, you can open a terminal connection to one of the COM ports. Because the Bluetooth driver creates multiple COM ports, it's impossible to tell which is the serial stream so it's easiest to just try each port until you see a stream of NMEA sentences (shown above). You're all set! Be sure to close out the terminal window so that other software can use that COM port.</p>"},{"location":"contribute/","title":"Fix That Typo!","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <p></p> <p>The edit button at the top of every page</p> <p>Does something not make sense? Find a typo? Hit the edit button and make it better. If a section is confusing please open an issue and let us know.</p> <p>These pages are contained in the docs folder of the SparkFun RTK Everywhere Firmware repository. Fork this repo, make changes to the markdown, then create a pull request with your changes, and enjoy making the words worlds world a better place.</p>"},{"location":"correction_sources/","title":"Correction Sources","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>To get millimeter accuracy we need to provide the RTK unit with correction values. Corrections, often called RTCM, help the RTK unit refine its position calculations. RTCM (Radio Technical Commission for Maritime Services) can be obtained from a variety of sources but they fall into three buckets: Commercial, Public, and Civilian Reference Stations.</p>"},{"location":"correction_sources/#commercial-reference-networks","title":"Commercial Reference Networks","text":"<p>These companies set up a large number of reference stations that cover entire regions and countries, but charge a monthly fee. They are often easy to use but can be expensive.</p> <ul> <li> <p>PointPerfect ($8/month) - US, EU, as well as parts of Australia, Brazil, and South Korea.</p> <p>Note</p> <p>This is an SSR service.</p> </li> <li> <p>Onocoy ($25/month) - US, EU, Australia, and many other partial areas</p> </li> <li>PointOneNav ($50/month) - US, EU, Australia, South Korea</li> <li>Skylark ($29 to $69/month) - US, EU, Japan, Australia</li> <li>SensorCloud RTK ($100/month) partial US, EU</li> <li>Premium Positioning (~$315/month) partial EU</li> <li>KeyNetGPS ($375/month) North Eastern US</li> <li>Hexagon/Leica ($500/month) - partial US, EU</li> </ul>"},{"location":"correction_sources/#public-reference-stations","title":"Public Reference Stations","text":"<p>State Wide Network of Continuously Operating Reference Stations (CORS)</p> <p>Be sure to check if your state or country provides corrections for free. Many do! Currently, there are 21 states in the USA that provide this for free as a department of transportation service. Search \u2018Wisconsin CORS\u2019 as an example. Similarly, in France, check out CentipedeRTK. There are several public networks across the globe, be sure to google around!</p>"},{"location":"correction_sources/#civilian-reference-stations","title":"Civilian Reference Stations","text":"<p>The base station at SparkFun</p> <p>You can set up your own correction source. This is done with a 2nd GNSS receiver that is stationary, often called a Base Station. There is just the one-time upfront cost of the Base Station hardware. See the Creating a Permanent Base document for more information.</p>"},{"location":"correction_sources/#osr-vs-ssr","title":"OSR vs SSR","text":"<p>Not all companies providing correction services use the same type of corrections. There are two types: OSR and SSR.</p> <p></p> <p>State Wide Network of Continuously Operating Reference Stations (CORS)</p> <p>Observation Space Representation (OSR) is the classic type of corrections network. This is a collection of base stations located at regular intervals across a geographic area. Corrections coming from this type of network provide the highest RTK accuracy (14mm or less is common when located within 10km of a base station) with the minimum convergence time (the time you have to wait before the GNSS receiver can achieve RTK Fix). Normal convergence time for an OSR is a few seconds. However, because a CORS has to be placed every few 10km, these type of networks are expensive to install and maintain. An OSR network is prone to holes or gaps in the network where a base station is not sufficiently close to maintain RTK Fix. Imagine an autonomous semi-trailer truck driving across hundreds or thousands of miles; an OSR network is extremely difficult to set up that maintains the full coverage needed for highly kinetic applications.</p> <p>PointOne Nav, and Skylark Nx RTK are examples of an OSR.</p> <p></p> <p>PointPerfect Coverage map including L-Band and IP delivery methods</p> <p>State Space Representation (SSR) covers huge areas, sometimes entire continents. SSR combines the readings from a handful of base stations and creates a model for the region. This model extrapolates the needed corrections for a given area. These corrections are 'good enough' for many applications. Because SSR requires far fewer base stations, they are often a much lower-cost service. The RTK Fix accuracy is lower (20mm is possible but 30-60mm is common), and the convergence time increases considerably. Convergence time for an SSR can be 180 seconds or more.</p> <p>The PointPerfect and Skylark Cx are examples of an SSR.</p>"},{"location":"correction_sources/#galileo-has","title":"Galileo HAS","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>The European Union launched a free correction service called High Accuracy Service or HAS starting in 2023. The service is delivered over the E6 frequency. In general, this service will greatly improve accuracy to receivers but is lower accuracy than an OSR or SSR-based RTK Fix. Additionally, a receiver can take up to 5 minutes to benefit from these corrections (convergence time is larger), as opposed to OSR (seconds) or SSR (~180 seconds) to achieve maximum accuracy. But HAS is free! And available with very little additional configuration.</p> <p>Various SparkFun RTK products support this new GNSS band (E6). In general, the RTK Torch will need UM980 firmware 118333 or newer. See how to Update the UM980 Firmware for instructions. HAS/E6 is enabled by default and can be disabled in the GNSS Menu if desired.</p>"},{"location":"correction_transport/","title":"Correction Transport","text":"<p>Once a correction source is chosen, the correction data must be transported from the base to the rover. The RTCM serial data is approximately 530 bytes per second. This section describes the various methods to move correction data from a base to one or more rovers.</p> <p>RTK calculations require RTCM data to be delivered approximately once per second. If RTCM data is lost or not received by a rover, RTK Fix can still be maintained for many seconds before the device will enter RTK Float mode. If a transport method experiences congestion (ie, cellular latency, Serial Radios dropping packets, etc) the rover(s) can continue in RTK Fix mode even if correction data is not available for multiple seconds.</p>"},{"location":"correction_transport/#wifi","title":"WiFi","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Any SparkFun RTK device can be set up as an NTRIP Server. This means the device will connect to local WiFi and broadcast its correction data to the internet. The data is delivered to something called an NTRIP Caster. Any number of rovers can then access this data using something called an NTRIP Client. Nearly every GIS application has an NTRIP Client built into it so this makes it very handy.</p> <p>WiFi broadcasting is the most common transport method of getting RTCM correction data to the internet and to rovers via NTRIP Clients.</p> <p></p> <p>RTK product showing corrections being downloaded over WiFi in NTRIP Client mode</p> <p>Similarly, any SparkFun RTK device can be set up as an NTRIP Client. The RTK device will connect to the local WiFi and begin downloading the RTCM data from the given NTRIP Caster and RTK Fix will be achieved. This is useful only if the Rover remains in RF range of a WiFi access point. Because of the limited range, we recommend using a cell phone's hotspot feature rather than a stationary WiFi access point for NTRIP Clients.</p>"},{"location":"correction_transport/#cellular-via-cellphone","title":"Cellular - Via Cellphone","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Using a cell phone is the most common way of transporting correction data from the internet to a rover. This method uses the cell phone's built-in internet connection to obtain data from an NTRIP Caster and then pass those corrections over Bluetooth to the RTK device.</p> <p>Shown above are SW Map's NTRIP Client Settings. Nearly all GIS applications have an NTRIP Client built in so we recommend leveraging the device you already own to save money. Additionally, a cell phone gives your rover incredible range: a rover can obtain RTCM corrections anywhere there is cellular coverage.</p> <p>Cellular can even be used in Base mode. We have seen some very inventive users use an old cell phone as a WiFi access point. The base unit is configured as an NTRIP Server with the cellphone's WiFi AP credentials. The base performs a survey-in, connects to the WiFi, and the RTCM data is pushed over WiFi, over cellular, to an NTRIP Caster.</p>"},{"location":"correction_transport/#cellular-built-in","title":"Cellular - Built-In","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>The RTK EVK has built-in cellular via a u-blox LARA-R6001D. However, the RTK Everywhere firmware does not yet support cellular. Adding it is on our roadmap. Stay tuned for updates! Meanwhile, we do have a stand-alone EVK code example which will connect to PointPerfect localized distribution via cellular:</p> <ul> <li>EVK example 8_5_PointPerfect_MQTT</li> <li>EVK example 8_6_PointPerfect_MQTT_WiFi_ETH_Cellular</li> </ul>"},{"location":"correction_transport/#l-band","title":"L-Band","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>What if you are in the field, far away from WiFi, cellular, radio, or any other data connection? Look to the sky!</p> <p>A variety of companies provide GNSS RTK corrections broadcast from satellites over a spectrum called L-Band. L-Band is any frequency from 1 to 2 GHz. These frequencies have the ability to penetrate clouds, fog, and other natural weather phenomena making them particularly useful for location applications.</p> <p>These corrections are not as accurate as a fixed base station, and the corrections can require a monthly subscription fee, but you cannot beat the ease of use!</p> <p>L-Band reception requires specialized RF receivers capable of demodulating the satellite transmissions. The RTK EVK has a built-in NEO-D9S corrections receiver. The RTK Everywhere firmware supports this and will tune the NEO-D9S to the correct frequency if you are in the US or EU. The PointPerfect L-Band corrections are encrypted and require a subscription and valid keys in order to work. The EVK comes with a one month free subscription to PointPerfect L-Band + IP, providing built-in support for L-Band corrections and IP corrections via Ethernet or WiFi.</p>"},{"location":"correction_transport/#serial-radios","title":"Serial Radios","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Serial radios, sometimes called telemetry radios, provide what is essentially a serial cable between the base and rover devices. Transmission distance, frequency, maximum data rate, configurability, and price vary widely, but all behave functionally the same. SparkFun recommends the HolyBro 100mW and the SparkFun LoRaSerial 1W radios for RTK use.</p> <p></p> <p>On SparkFun RTK products that have an external radio port, a 4-pin to 6-pin cable is included that will allow you to connect the HolyBro branded radio or the SparkFun LoRaSerial radios to a base and rover RTK device.</p> <p></p> <p>The RTK EVK has screw cage terminals providing access to the ZED-F9P UART2 TX2 and RX2 pins. 3.3V power is provided too, but not 5V. For 5V radios, you may need an additional power source.</p> <p>These radios attach nicely to the back or bottom of an RTK device.</p> <p>The benefit of a serial telemetry radio link is that you do not need to configure anything; simply plug two radios onto two RTK devices and turn them on.</p> <p>The downside to serial telemetry radios is that they generally have a much shorter range (often slightly more than a 1-kilometer functional range) than a cellular link can provide.</p>"},{"location":"correction_transport/#ethernet","title":"Ethernet","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Ethernet-equipped RTK devices send and receive correction data via Ethernet.</p> <p>Please see Ethernet Menu for more details.</p>"},{"location":"displays/","title":"Displays","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>A variety of RTK devices utilize a 0.96\" or 1.3\" high-contrast OLED display. While small, the display packs various situational data that can be helpful in the field. This section describes each possible display state.</p> <p></p> <p>Rover mode on the RTK EVK's 1.3\" OLED display</p>"},{"location":"displays/#power-onoff","title":"Power On/Off","text":"<p>RTK Facet Startup and Shutdown Screens</p> <p>Press and hold the power button until the display illuminates to turn on the device. Similarly, press and hold the power button to turn off the device.</p> <p>The device's firmware version is shown during the Power On display.</p>"},{"location":"displays/#force-power-off","title":"Force Power Off","text":"<p>In the event that a device becomes unresponsive, the device can be completely powered off by holding the power button for 10 seconds or more. The force-power-off method is hardware-based and will therefore work regardless of what firmware the device may be running.</p> <p></p> <p>If the power state of a device is not known (for example, because a display may be malfunctioning) the device can be connected to USB. If one or more COM ports enumerate, the device is on (shown above). If no COM ports are seen, the device is fully powered off.</p>"},{"location":"displays/#rover-fix","title":"Rover Fix","text":"<p>Rover with location fix</p> <p></p> <p>RTK EVK with location fix and Ethernet connected</p> <p>Upon power up the device will enter either Rover mode or Base mode. Above, the Rover mode is displayed.</p> <ul> <li>MAC: The MAC address of the internal Bluetooth module. This is helpful knowledge when attempting to connect to the device from your phone. This will change to a Bluetooth symbol once connected.</li> <li>HPA: Horizontal positional accuracy is an estimate of how accurate the current positional readings are. This number will decrease rapidly after the first power-up and settle around 0.3m depending on your antenna and view of the sky. When RTK fix is achieved this icon will change to a double circle and the HPA number will decrease even further to as low as 0.014m.</li> <li>SIV: Satellites in view is the number of satellites used for the fix calculation. This symbol will blink before a location fix is generated and become solid when the device has a good location fix. SIV is a good indicator of how good of a view the antenna has. This number will vary but anything above 10 is adequate. We've seen as high as 31.</li> <li>Model: This icon will change depending on the selected dynamic model: Portable (default) Pedestrian, Sea, Bike, Stationary, etc.</li> <li>Log: This icon will remain animated while the log file is increasing. This is a good visual indication that you have an SD card inserted and RTK Facet can successfully record to it. There are three logging icons <ul> <li>Standard (three lines) is shown when the standard 5 NMEA messages are being logged</li> <li>PPP (capital P) is shown when the standard 5 NMEA + RAWX and SFRBX messages are recorded. This is most often used for post process positioning (PPP) and 12 to 24-hour logs for fixed permanent bases.</li> <li>Custom (capital C) is shown when a custom set of messages are being recorded (not standard, and not PPP).</li> </ul> </li> <li>IP Address: On the RTK EVK 1.3\" OLED, the full Ethernet or WiFi IP Address is shown at the bottom left of the display.</li> </ul>"},{"location":"displays/#rover-rtk-fix","title":"Rover RTK Fix","text":"<p>Rover with RTK Fix and Bluetooth connected</p> <p></p> <p>RTK EVK with RTK Fix and Ethernet connected</p> <p>Once NTRIP is enabled on your phone or RTCM data is being streamed into the Radio port the device will gain an RTK Fix. You should see the HPA drop to 14mm with a double circle bulls-eye as shown above.</p>"},{"location":"displays/#base-survey-in","title":"Base Survey-In","text":"<p>RTK device in Survey-In Mode</p> <p>Pressing the Setup button will change the device to Base mode. If the device is configured for Survey-In base mode, a flag icon will be shown and the survey will begin. The mean standard deviation will be shown as well as the time elapsed. For most Survey-In setups, the survey will complete when both 60 seconds have elapsed and a mean of 5m or less is obtained.</p>"},{"location":"displays/#base-transmitting","title":"Base Transmitting","text":"<p>RTK Facet in Fixed Transmit Mode</p> <p>Once the survey-in is complete the device enters RTCM Transmit mode. The number of RTCM transmissions is displayed. By default, this is one per second.</p> <p>The Fixed Base mode is similar but uses a structure icon (shown above) to indicate a fixed base.</p>"},{"location":"displays/#base-transmitting-ntrip","title":"Base Transmitting NTRIP","text":"<p>If the NTRIP server is enabled the device will first attempt to connect over WiFi. The WiFi icon will blink until a WiFi connection is obtained. If the WiFi icon continually blinks be sure to check your SSID and PW for the local WiFi.</p> <p></p> <p>RTK Facet in Transmit Mode with NTRIP</p> <p>Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once successful the display will show 'Casting' along with a solid WiFi icon. The number of successful RTCM transmissions will increase every second.</p> <p>Note</p> <p>During NTRIP transmission WiFi is turned on and Bluetooth is turned off. You should not need to know the location information of the base so Bluetooth should not be needed. If necessary, USB can be connected to the USB port to view detailed location and ZED-F9P configuration information.</p>"},{"location":"displays/#l-band","title":"L-Band","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation.</p> <p></p> <p>Display showing 14 days until L-Band Keys Expire</p> <p>The unit will display various messages to aid the user in obtaining keys as needed.</p> <p></p> <p>Three-pronged satellite dish indicating L-Band reception</p> <p></p> <p>Three-pronged satellite dish indicating L-Band reception on RTK EVK</p> <p>Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution.</p>"},{"location":"displays/#antenna-detection","title":"Antenna Detection","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>On devices that support it, open circuit and short circuit detection is available on the GNSS antenna connection.</p> <p></p> <p>RTK EVK with the GNSS antenna disconnected (open circuit)</p> <p></p> <p>RTK EVK with a GNSS antenna cable fault (short circuit)</p>"},{"location":"embeddedsystem_connection/","title":"Output to an Embedded System","text":"<p>Many applications using the RTK products will use a 3rd party GIS application or mobile app like SW Maps and receive the data over Bluetooth. For RTK devices that have an external connection, a user can obtain the NMEA data over serial directly.</p>"},{"location":"embeddedsystem_connection/#usb","title":"USB","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Most SparkFun RTK devices have a USB port for programming and status reports. This USB port can also be configured to output full NMEA/RTCM output that can be used to create a wired connection to an embedded system. See Output GNSS Data over USB for more information.</p>"},{"location":"embeddedsystem_connection/#data-port","title":"DATA Port","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>For this example, we will connect the output from the DATA port of an RTK Facet to a USB to Serial adapter so that we can view the serial data over a terminal connection.</p> <p>The DATA port on the RTK Facet can be configured to output a variety of different signals including NMEA Serial data. Be sure to check out the Ports Menu section to be sure your device is configured to output NMEA.</p> <p>Connect the included 4-pin JST to breadboard cable to the DATA port. The cable has the following pinout:</p> <ul> <li>Red - 3.3V</li> <li>Green - TX (output from the RTK device)</li> <li>Orange - RX (input into the RTK device)</li> <li>Black - GND</li> </ul> <p></p> <p>Open a terminal at 115200bps and you should see NMEA sentences:</p> <p></p> <p>The Data connector on all RTK products is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source, so if your embedded device has its own power do not connect the red wire.</p> <p>Warning</p> <p>All data in and out of RTK products is 3.3V. Exposing these pins to 5V or higher voltage logic will damage the device.</p> <p>The parsing of NMEA sentences is straightforward and left to the reader. There are ample NMEA parsing libraries available in C++, Arduino, Python, and many more languages.</p>"},{"location":"embeddedsystem_connection/#external-terminals","title":"External Terminals","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>On devices that support it, external screw terminals provide direct access to the GNSS TX and RX signals via the 3.5mm screw terminal I/O header:</p> <p></p> <ul> <li>TX2 : u-blox ZED-F9P UART2 transmit: 3.3V OUTPUT</li> <li>RX2 : u-blox ZED-F9P UART2 receive: 3.3V INPUT</li> </ul> <p>Please see the EVK Hookup Guide for more details.</p>"},{"location":"firmware_compile/","title":"Compiling Source","text":"<p>This is information about how to compile the RTK Everywhere firmware from source. This is for advanced users who would like to modify the functionality of the RTK products.</p>"},{"location":"firmware_compile/#windows","title":"Windows","text":"<p>The SparkFun RTK Everywhere Firmware is compiled using Arduino CLI (currently v0.35.3). To compile:</p> <ol> <li>Install Arduino CLI.</li> <li> <p>Install the ESP32 core for Arduino:</p> <pre><code>arduino-cli core install esp32:esp32@3.0.1\n</code></pre> <p>Note</p> <p>Use v3.0.1 of the core.</p> <p>Note</p> <p>We use the 'ESP32 Dev Module' for pin numbering.</p> </li> <li> <p>Obtain each of the libraries listed in the workflow either by using git or the Arduino CLI library manager. Be sure to obtain the version of the library reflected in the workflow. Be sure to include the external libraries (You may have to enable external library support in the CLI).</p> </li> <li>RTK Everywhere uses a custom partition file. Download the RTKEverywhere.csv file.</li> <li> <p>Add RTKEverywhere.csv partition table to the Arduino partitions folder. It should look something like</p> <pre><code>C:\\Users\\\\[user name]\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.0.1\\tools\\partitions\\RTKEverywhere.csv\n</code></pre> <p>This will increase the program partitions, as well as the SPIFFs partition to utilize the full 16MB of flash.</p> </li> <li> <p>Compile using the following command</p> <pre><code>arduino-cli compile 'Firmware/RTK_Everywhere' --build-property build.partitions=RTKEverywhere --build-property upload.maximum_size=3145728 --fqbn esp32:esp32:esp32:FlashSize=16M,PSRAM=enabled\n</code></pre> </li> <li> <p>Once compiled, upload to the device using the following command where <code>[COM_PORT]</code> is the COM port on which the RTK device is located (ie <code>COM42</code>).</p> <pre><code>arduino-cli upload -p [COM_PORT] --fqbn esp32:esp32:esp32:UploadSpeed=512000,FlashSize=16M 'Firmware/RTK_Everywhere'\n</code></pre> </li> </ol> <p>If you are seeing the error:</p> <p>text section exceeds available space ...</p> <p>You have either not replaced the partition file correctly or failed to include the 'upload.maximum_size' argument in your compile command. See steps 4 through 6 above.</p> <p>Note</p> <p>There are a variety of compile guards (COMPILE_WIFI, COMPILE_AP, etc) at the top of RTK_Everywhere.ino that can be commented out to remove them from compilation. This will greatly reduce the firmware size and allow for faster development of functions that do not rely on these features (serial menus, system configuration, logging, etc).</p>"},{"location":"firmware_compile/#ubuntu-2004","title":"Ubuntu 20.04","text":""},{"location":"firmware_compile/#virtual-machine","title":"Virtual Machine","text":"<p>Execute the following commands to create the Linux virtual machine:</p> <ol> <li>Using a browser, download the Ubuntu 20.04 Desktop image</li> <li>virtualbox<ol> <li>Click on the new button</li> <li>Specify the machine Name, e.g.: Sparkfun_RTK_20.04</li> <li>Select Type: Linux</li> <li>Select Version: Ubuntu (64-bit)</li> <li>Click the Next&gt; button</li> <li>Select the memory size: 7168</li> <li>Click the Next&gt; button</li> <li>Click on Create a virtual hard disk now</li> <li>Click the Create button</li> <li>Select VDI (VirtualBox Disk Image)</li> <li>Click the Next&gt; button</li> <li>Select Dynamically allocated</li> <li>Click the Next&gt; button</li> <li>Select the disk size: 128 GB</li> <li>Click the Create button</li> <li>Click on Storage</li> <li>Click the empty CD icon</li> <li>On the right-hand side, click the CD icon</li> <li>Click on Choose a disk file...</li> <li>Choose the ubuntu-20.04... iso file</li> <li>Click the Open button</li> <li>Click on Network</li> <li>Under 'Attached to:' select Bridged Adapter</li> <li>Click the OK button</li> <li>Click the Start button</li> </ol> </li> <li>Install Ubuntu 20.04</li> <li>Log into Ubuntu</li> <li>Click on Activities</li> <li>Type terminal into the search box</li> <li> <p>Optionally install the SSH server</p> <ol> <li> <p>In the terminal window</p> <ol> <li>sudo apt install -y net-tools openssh-server</li> <li> <p>ifconfig</p> <p>Write down the IP address</p> </li> </ol> </li> <li> <p>On the PC</p> <ol> <li>ssh-keygen -t rsa -f ~/.ssh/Sparkfun_RTK_20.04</li> <li>ssh-copy-id -o IdentitiesOnly=yes -i ~/.ssh/Sparkfun_RTK_20.04  &lt;username&gt;@&lt;IP address&gt;</li> <li>ssh -Y &lt;username&gt;@&lt;IP address&gt;</li> </ol> </li> </ol> </li> </ol>"},{"location":"firmware_compile/#build-environment","title":"Build Environment","text":"<p>Execute the following commands to create the build environment for the SparkFun RTK Everywhere Firmware:</p> <ol> <li>sudo adduser $USER dialout</li> <li> <p>sudo shutdown -r 0</p> <p>Reboot to ensure that the dialout privilege is available to the user</p> </li> <li> <p>sudo apt update</p> </li> <li>sudo apt install -y  git  gitk  git-cola  minicom  python3-pip</li> <li>sudo pip3 install pyserial</li> <li>mkdir ~/SparkFun</li> <li>mkdir ~/SparkFun/esptool</li> <li>cd ~/SparkFun/esptool</li> <li>git clone https://github.com/espressif/esptool .</li> <li>cd ~/SparkFun</li> <li> <p>nano serial-port.sh</p> <p>Insert the following text into the file:</p> <pre><code>#!/bin/bash\n#   serial-port.sh\n#\n#   Shell script to read the serial data from the RTK Express ESP32 port\n#\n#   Parameters:\n#       1:  ttyUSBn\n#\nsudo minicom -b 115200 -8 -D /dev/$1 &lt; /dev/tty\n</code></pre> </li> <li> <p>chmod +x serial-port.sh</p> </li> <li> <p>nano new-firmware.sh</p> <p>Insert the following text into the file:</p> <pre><code>#!/bin/bash\n#   new-firmware.sh\n#\n#   Shell script to load firmware into the RTK Express via the ESP32 port\n#\n#   Parameters:\n#      1: ttyUSBn\n#      2: Firmware file\n#\nsudo python3 ~/SparkFun/RTK_Binaries/Uploader_GUI/esptool.py --chip esp32 --port /dev/$1 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect \\\n0x1000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor.ino.bootloader.bin \\\n0x8000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor_Partitions_16MB.bin \\\n0xe000   ~/SparkFun/RTK_Binaries/bin/boot_app0.bin \\\n0x10000  $2\n</code></pre> </li> <li> <p>chmod +x new-firmware.sh</p> </li> <li> <p>nano new-firmware-4mb.sh</p> <p>Insert the following text into the file:</p> <pre><code>#!/bin/bash\n#   new-firmware-4mb.sh\n#\n#   Shell script to load firmware into the 4MB RTK Express via the ESP32 port\n#\n#   Parameters:\n#      1: ttyUSBn\n#      2: Firmware file\n#\nsudo python3 ~/SparkFun/RTK_Binaries/Uploader_GUI/esptool.py --chip esp32 --port /dev/$1 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect \\\n0x1000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor.ino.bootloader.bin \\\n0x8000   ~/SparkFun/RTK_Binaries/bin/RTK_Surveyor_Partitions_4MB.bin \\\n0xe000   ~/SparkFun/RTK_Binaries/bin/boot_app0.bin \\\n0x10000  $2\n</code></pre> </li> <li> <p>chmod +x new-firmware-4mb.sh</p> <p>Get the SparkFun RTK Everywhere Firmware sources</p> </li> <li> <p>mkdir ~/SparkFun/RTK</p> </li> <li>cd ~/SparkFun/RTK</li> <li> <p>git clone https://github.com/sparkfun/SparkFun_RTK_Everywhere_Firmware .</p> <p>Get the SparkFun RTK binaries</p> </li> <li> <p>mkdir ~/SparkFun/RTK_Binaries</p> </li> <li>cd ~/SparkFun/RTK_Binaries</li> <li> <p>git clone https://github.com/sparkfun/SparkFun_RTK_Everywhere_Firmware_Binaries.git .</p> <p>Install the Arduino IDE</p> </li> <li> <p>mkdir ~/SparkFun/arduino</p> </li> <li>cd ~/SparkFun/arduino</li> <li>wget https://downloads.arduino.cc/arduino-1.8.15-linux64.tar.xz</li> <li>tar -xvf ./arduino-1.8.15-linux64.tar.xz</li> <li>cd arduino-1.8.15/</li> <li> <p>sudo ./install.sh</p> <p>Add the ESP32 support</p> </li> <li> <p>Arduino</p> <ol> <li>Click on File in the menu bar</li> <li>Click on Preferences</li> <li>Go down to the Additional Boards Manager URLs text box</li> <li>Only if the textbox already has a value, go to the end of the value or values and add a comma</li> <li>Add the link: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json</li> <li>Note the value in Sketchbook location</li> <li>Click the OK button</li> <li>Click on File in the menu bar</li> <li>Click on Quit</li> </ol> <p>Get the required external libraries, then add to the Sketchbook location from above</p> </li> <li> <p>cd   ~/Arduino/libraries</p> </li> <li>mkdir AsyncTCP</li> <li>cd AsyncTCP/</li> <li>git clone https://github.com/me-no-dev/AsyncTCP.git .</li> <li>cd ..</li> <li>mkdir ESPAsyncWebServer</li> <li>cd ESPAsyncWebServer</li> <li> <p>git clone https://github.com/me-no-dev/ESPAsyncWebServer .</p> <p>Connect the Config ESP32 port of the RTK to a USB port on the computer</p> </li> <li> <p>ls /dev/ttyUSB*</p> <p>Enable the libraries in the Arduino IDE</p> </li> <li> <p>Arduino</p> <ol> <li>From the menu, click on File</li> <li>Click on Open...</li> <li>Select the ~/SparkFun/RTK/Firmware/RTK_Surveyor/RTK_Surveyor.ino file</li> <li>Click on the Open button</li> </ol> <p>Select the ESP32 development module</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Board</li> <li>Click on Board Manager\u2026</li> <li>Click on esp32</li> <li>Select version 2.0.2</li> <li>Click on the Install button in the lower right</li> <li>Close the Board Manager...</li> <li>From the menu, click on Tools</li> <li>Click on Board</li> <li>Click on ESP32 Arduino</li> <li>Click on ESP32 Dev Module</li> </ol> <p>Load the required libraries</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Manage Libraries\u2026</li> <li> <p>For each of the following libraries:</p> <ol> <li>Locate the library</li> <li>Click on the library</li> <li>Select the version listed in the compile-rtk-firmware.yml file for the main or the release_candidate branch</li> <li>Click on the Install button in the lower right</li> </ol> <p>Library List:</p> <ul> <li>ArduinoJson</li> <li>ESP32Time</li> <li>ESP32-OTA-Pull</li> <li>ESP32_BleSerial</li> <li>Ethernet</li> <li>JC_Button</li> <li>MAX17048 - Used for \u201cTest Sketch/Batt_Monitor\u201d</li> <li>PubSubClient</li> <li>SdFat</li> <li>SparkFun LIS2DH12 Arduino Library</li> <li>SparkFun MAX1704x Fuel Gauge Arduino Library</li> <li>SparkFun Qwiic OLED Graphics Library</li> <li>SparkFun u-blox GNSS v3</li> <li>SparkFun_WebServer_ESP32_W5500</li> </ul> </li> <li> <p>Click on the Close button</p> </li> </ol> <p>Select the terminal port</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Port, Select the port that was displayed in step 38 above</li> <li>Select /dev/ttyUSB0</li> <li>Click on Upload Speed</li> <li>Select 230400</li> </ol> <p>Setup the partitions for the 16 MB flash</p> <ol> <li>From the menu, click on Tools</li> <li>Click on Flash Size</li> <li>Select 16MB</li> <li>From the menu, click on Tools</li> <li>Click on Partition Scheme</li> <li>Click on 16M Flash (3MB APP/9MB FATFS)</li> <li>From the menu click on File</li> <li>Click on Quit</li> </ol> </li> <li> <p>cd ~/SparkFun/RTK/</p> </li> <li>cp  Firmware/app3M_fat9M_16MB.csv  ~/.arduino15/packages/esp32/hardware/esp32/2.0.2/tools/partitions/app3M_fat9M_16MB.csv</li> </ol>"},{"location":"firmware_update/","title":"Updating RTK Device Firmware","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>The RTK Devices run a variety of firmware. Please see the device specific pages for more information about the update methods:</p>"},{"location":"firmware_update/#rtk-torch","title":"RTK Torch","text":"<ul> <li>Updating ESP32 Firmware</li> <li>Updating UM980 Firmware</li> <li>Updating STM32 Firmware</li> </ul>"},{"location":"firmware_update/#rtk-evk","title":"RTK EVK","text":"<ul> <li>Updating ESP32 Firmware</li> <li>Updating u-blox Firmware</li> </ul>"},{"location":"firmware_update_esp32/","title":"Updating ESP32 Firmware","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>The ESP32 firmware is the main firmware in all RTK devices. The firmware version number is displayed in a variety of places:</p> <ul> <li>Power On (if a display is supported)</li> <li>Serial Config Menu</li> <li>WiFi Config</li> </ul> <p></p> <p>RTK Express with firmware v3.0</p> <p>During power-on, on devices that have a display, the firmware version will be shown.</p> <p></p> <p>Main Menu showing RTK Firmware v1.0</p> <p>The firmware is displayed when the main menu is opened over a serial connection.</p> <p></p> <p>WiFi Config page showing device firmware v2.7 and ZED-F9P firmware HPG 1.32</p> <p>The firmware is shown at the top of the WiFi config page.</p> <p>From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded over WiFi using the OTA method.</p> <ul> <li>OTA Method: Connect over WiFi to SparkFun to download the latest firmware over-the-air. This can be done using the serial menu or while in WiFi AP Config Mode. Requires a local WiFi network.</li> <li>GUI Method: Use the Windows, Linux, MacOS or Python GUI and a USB cable. (The Python package has been tested on Raspberry Pi)</li> <li>SD Method: Load the firmware on an SD card, then use a serial terminal with the Firmware Upgrade menu</li> <li>WiFi Method: Load the firmware over WiFi when the device is in WiFi AP Config Mode</li> <li>CLI Method: Use the command line batch_program.bat</li> </ul> <p>The OTA method is generally recommended. For more information see here.</p> <p>Remember, all SparkFun RTK devices are open source hardware meaning you have total access to the firmware and hardware. Be sure to check out each repo for the latest firmware and hardware information.</p>"},{"location":"firmware_update_esp32/#updating-firmware-over-the-air","title":"Updating Firmware Over-The-Air","text":"<p>Updating the firmware via WiFi config page</p> <p></p> <p>Updating the firmware via Firmware serial menu</p> <p>Firmware can be updated in the System Configuration section of the WiFi Config page, or over the Firmware menu of the serial interface. This makes checking and upgrading a unit very easy.</p> <p>Additionally, users may opt to check for Beta firmware. This is the latest firmware that may have new features and is meant for testing. Beta firmware is not recommended for units deployed into the field as it may not be stable.</p> <p>Automatic release firmware update is supported over WiFi. Enabling this feature is done using the serial firmware menu. The polling period is specified in minutes and defaults to once a day. The automatic firmware update only checks for and installs the current SparkFun released firmware versions over top of any:</p> <ul> <li>Older released versions (continual upgrade)</li> <li>Beta firmware versions (newer or older, restore to released version)</li> <li>Locally built versions (newer or older, restore to released version)</li> </ul>"},{"location":"firmware_update_esp32/#updating-firmware-using-the-uploader-gui","title":"Updating Firmware Using The Uploader GUI","text":"<p>RTK Firmware GUI</p> <p>This GUI makes it easy to point and click your way through a firmware update. There are versions for Windows, Linux, MacOS and a Python package installer.</p> <p>The latest GUI release can be downloaded here.</p> <p>Download the latest RTK firmware binary file located on the releases page or from the binaries repo.</p> <p>To Use</p> <ul> <li>Attach the RTK device to your computer using a USB cable.</li> <li>Turn the RTK device on.</li> <li> <p>On Windows, open the Device Manager to confirm which COM port the device is operating on. On other platforms, check <code>/dev</code>.</p> <p>  Device Manager showing 'USB-Serial CH340' port on COM27  </p> </li> <li> <p>Get the latest binary file located on the releases page or from the binaries repo.</p> </li> <li>Run RTKUploader.exe (it takes a few seconds to start)</li> <li>Click Browse and select the binary file to upload</li> <li>Select the COM port previously seen in the Device Manager</li> <li>Click Upload Firmware</li> </ul> <p>Once complete, the device will reset and power down.</p> <p>If your RTK 'freezes' after the update, press <code>Reset ESP32</code> to get it going again.</p>"},{"location":"firmware_update_esp32/#updating-firmware-from-the-sd-card","title":"Updating Firmware From the SD Card","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>On devices that support it, the firmware can be loaded from an SD card.</p> <p></p> <p>Firmware update taking place</p> <p>Download the latest binary file located on the releases page or from the binaries repo.</p> <p>The firmware upgrade menu will only display files that have the \"RTK_Surveyor_Firmware*.bin\" file name format so don't change the file names once loaded onto the SD card. Select the firmware you'd like to load and the system will proceed to load the new firmware, then reboot.</p> <p>Note</p> <p>The firmware is called <code>RTK_Surveyor_Firmware_vXX.bin</code> even though there are various RTK products (Facet, Express, Surveyor, etc). We united the different platforms into one. The RTK Firmware runs on all our RTK products.</p>"},{"location":"firmware_update_esp32/#force-firmware-loading","title":"Force Firmware Loading","text":"<p>In the rare event that a unit is not staying on long enough for new firmware to be loaded into a COM port, the RTK Firmware (as of version 1.2) has an override function. If a file named RTK_Surveyor_Firmware_Force.bin is detected on the SD card at boot that file will be used to overwrite the current firmware, and then be deleted. This update path is generally not recommended. Use the GUI or WiFi OTA methods as the first resort.</p>"},{"location":"firmware_update_esp32/#updating-firmware-from-wifi","title":"Updating Firmware From WiFi","text":"<p>Note</p> <p>Firmware versions 1.1 to 1.9 have an issue that severely limits firmware upload over WiFi and is not recommended; use the GUI method instead. Firmware versions v1.10 and beyond support direct firmware updates via WiFi.</p> <p>Firmware may be uploaded to the unit by clicking on 'Upload BIN', selecting the binary such as 'RTK_Surveyor_Firmware_v3_x.bin' and pressing upload. The unit will automatically reset once the firmware upload is complete.</p>"},{"location":"firmware_update_esp32/#updating-firmware-from-cli","title":"Updating Firmware From CLI","text":"<p>The command-line interface is also available. You\u2019ll need to download the RTK Firmware Binaries repo. This repo contains the binaries but also various supporting tools including esptool.exe and the three binaries required along with the firmware (bootloader, partitions, and app0).</p>"},{"location":"firmware_update_esp32/#windows","title":"Windows","text":"<p>Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at. The easiest way to do this is to open the Device Manager:</p> <p></p> <p>CH340 is on COM6 as shown in Device Manager</p> <p>Tip</p> <p>If the COM port is not showing be sure the unit is turned On. If an unknown device is appearing, you\u2019ll need to install drivers for the CH340. Once you know the COM port, open a command prompt (Windows button + r then type \u2018cmd\u2019).</p> <p></p> <p>batch_program.bat running esptool</p> <p>Once the correct COM is identified, run 'batch_program.bat' along with the binary file name and COM port. For example batch_program.bat RTK_Surveyor_Firmware_v2_0.bin COM6. COM6 should be replaced by the COM port you identified earlier.</p> <p>The batch file runs the following commands:</p> <pre><code>esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor_Partitions_16MB.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin\n</code></pre> <p>Where COM6 is replaced with the COM port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load.</p> <p>Note</p> <p>Some users have reported the 921600bps baud rate does not work. Decrease this to 115200 as needed.</p> <p>Upon completion, your RTK device will reset and power down.</p>"},{"location":"firmware_update_esp32/#macos-linux","title":"macOS / Linux","text":"<p>Get esptool.py. Connect a USB A to C cable from your computer to the ESP32 port on the RTK device. Turn the unit on. Now identify the COM port the RTK enumerated at.</p> <p>Tip</p> <p>If the COM port is not showing be sure the unit is turned On. If an unknown device is appearing, you\u2019ll need to install drivers for the CH340. Once you know the COM port, run the following command:</p> <p>py esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 ./bin/RTK_Surveyor.ino.bootloader.bin 0x8000 ./bin/RTK_Surveyor_Partitions_16MB.bin 0xe000 ./bin/boot_app0.bin 0x10000 ./RTK_Surveyor_Firmware_vxx.bin</p> <p>Where /dev/ttyUSB0 is replaced with the port that the RTK product enumerated at and RTK_Surveyor_Firmware_vxx.bin is the firmware you would like to load.</p> <p>Note</p> <p>Some users have reported the 921600bps baud rate does not work. Decrease this to 115200 as needed.</p> <p>Upon completion, your RTK device will reset.</p>"},{"location":"firmware_update_lg290p/","title":"Updating LG290P Firmware","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>The LG290P is the GNSS receiver used on the RTK Postcard. The following describes how to update the firmware on the LG290P.</p> <ol> <li>Download the latest LG290P firmware. As of writing, the LG290P firmware is v4. See the RTK Postcard repo for the latest firmware.</li> <li> <p>Download and install QGNSS. QGNSS is the software created by Quectel to configure and view output from Quectel GNSS modules. </p> <p>  Select the COM port and baud rate  </p> </li> <li> <p>Select the COM port for Port B of the CH342 and set the baud rate to 460800, then press 'OK'</p> <p>  Open the Firmware Download window  </p> <p>  Starting the Firmware Update Process  </p> </li> <li> <p>Select the firmware to upload and press the start arrow. The update process will wait 20 seconds for the LG290P to be reset before timing out.</p> <p>  Resetting LG290P  </p> </li> <li> <p>Reset the LG290P. From the main menu navigate to System 's'-&gt;Hardware 'h'-&gt;LG290P reset for firmware update '13'. This will reset the LG290P and allow the bootlader to begin. If more than 20 seconds have gone by, restart the upgrade process in QGNSS and then reset the LG290P again.</p> </li> <li> <p>The update process takes a little over a minute. Once completed, close QGNSS and power cycle the RTK Postcard.</p> <p>  UM980 Firmware version shown in System Menu  </p> </li> <li> <p>Upon power-up, the firmware will be updated. Open the System Menu to confirm the firmware version.</p> </li> </ol>"},{"location":"firmware_update_stm32/","title":"Updating STM32 Firmware","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>The STM32WLE firmware runs the 915MHz LoRa radio inside the RTK Torch.</p> <p></p> <p>RTK Torch LoRa radio firmware version 2.0.2</p> <p>The firmware version number is displayed in the radio menu. If the device does not show this menu option the ESP32 firmware will need to be updated first.</p> <p>Firmware updates to the STM32WLE can only be done over the serial interface. Follow these steps to update the LoRa radio firmware on the RTK Torch.</p> <p></p> <ol> <li>Download and install STM32CubeProgrammer. While it is available for Windows/Linux/iOS, ST makes it rather difficult to get this software. We're sorry!</li> <li> <p>Download the latest STM32 LoRa binary from the RTK Everywhere Firmware Binaries repo. As of writing, this is RTK_Torch_STM32_LoRa_v2_0_2.bin.</p> <p> </p> </li> <li> <p>Open the main menu and select System (s), Hardware Debug (h), STM32 direct connect (17).</p> <p> </p> </li> <li> <p>The device will automatically reset and show instructions. The device is now operating in pass-through mode at 57600bps, and ready to be programmed. If needed, to exit this pass-through mode, press and release the main power button.</p> </li> <li> <p>Close the terminal connection. This will likely cause the device to reset - that is ok.</p> <p> </p> </li> <li> <p>Open STM32CubeProgrammer. Select UART (blue box) as the programming interface. Set the Baudrate to 57600, No parity, RTS and DTR set to high.</p> <p> </p> </li> <li> <p>Avoid Read Unprotected. Do not enable. This setting writes to fuse bits and if there is a problem with serial communication, it can lead to an inoperable bootloader. The device can be repaired but only at SparkFun (we have to use an ST-Link to reprogram the fuse bits over the SWD interface).</p> </li> <li> <p>Select the COM port associated with COM-B of the RTK device. Not sure? Read here. Once selected, click Connect.</p> <p> </p> </li> <li> <p>Once connected, select Erasing &amp; programming on the left side menu.</p> <p> </p> </li> <li> <p>Above, select the binary file and click Start Programming.</p> <p> </p> </li> <li> <p>After a few seconds, programming will complete.</p> <p> </p> </li> <li> <p>Click disconnect to close the port.</p> </li> <li> <p>Now press and release the power button on the Torch. The device will beep indicating it has exited pass-through mode. You can now use your device normally.</p> <p> </p> </li> <li> <p>To confirm the version, open the Radio menu and enable the radio. Above, version 2.0.2 is seen.</p> </li> </ol>"},{"location":"firmware_update_ublox/","title":"Updating u-blox Firmware","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>The u-blox ZED-F9P is the GNSS receiver inside the RTK EVK. The RTK EVK also contains the u-blox NEO-D9S for receiving L-Band corrections. The following describes how to update the firmware on the ZED-F9P and NEO-D9S modules.</p> <p>The firmware loaded onto the ZED-F9P and NEO-D9S receivers is written by u-blox and can vary depending on the manufacture date. The RTK Firmware (that runs on the ESP32) is designed to flexibly work with any u-blox firmware. Upgrading the ZED-F9x/NEO-D9S is a good thing to consider but is not crucial to the use of RTK products.</p> <p>Not sure what firmware is loaded onto your RTK product? Open the System Menu to display the module's current firmware version.</p> <p>The firmware on u-blox devices can be updated using a Windows-based GUI or u-center. A CLI method is also possible using the <code>ubxfwupdate.exe</code> tool provided with u-center. Additionally, u-blox offers the source for the ubxfwupdate tool that is written in C. It is currently released only under an NDA so contact your local u-blox Field Applications Engineer if you need a different method.</p>"},{"location":"firmware_update_ublox/#update-using-windows-gui","title":"Update Using Windows GUI","text":"<p>SparkFun RTK u-blox Firmware Update Tool</p> <p>The SparkFun RTK u-blox Firmware Update Tool is a simple Windows GUI and python script that runs the ubxfwupdate.exe tool. This allows users to directly update module firmware without the need for u-center. Additionally, this tool queries the module to verify that the firmware type matches the module. Because the RTK Facet L-Band contains two u-blox modules that both appear as identical serial ports, it can be difficult and perilous to know which port to load firmware. This tool prevents ZED-F9P firmware from being accidentally loaded onto a NEO-D9S receiver and vice versa.</p> <p>The SparkFun RTK u-blox Firmware Update Tool will only run on Windows as it relies upon u-blox's <code>ubxfwupdate.exe</code>. The full, integrated executable for Windows is available here.</p> <ul> <li>Attach the RTK device's USB port to your computer using a USB cable</li> <li>Turn the RTK device on</li> <li> <p>Open Device Manager to confirm which COM port the device is operating on</p> <p>  Device Manager showing USB Serial port on COM14  </p> </li> <li> <p>Get the latest binary firmware file from the ZED Firmware, NEO Firmware folder, or the u-blox website</p> </li> <li>Run RTK_u-blox_Update_GUI.exe (it takes a few seconds to start)</li> <li>Click the Firmware File Browse and select the binary file for the update</li> <li>Select the COM port previously seen in the Device Manager</li> <li>Click Update Firmware</li> </ul> <p>Once complete, the u-blox module will restart.</p>"},{"location":"firmware_update_ublox/#update-using-u-center","title":"Update Using u-center","text":"<p>If you're familiar with u-center a tutorial with step-by-step instructions for locating the firmware version as well as changing the firmware can be found in How to Upgrade Firmware of a u-blox Receiver.</p>"},{"location":"firmware_update_ublox/#zed-f9p-firmware-changes","title":"ZED-F9P Firmware Changes","text":"<p>This module is used in the RTK EVK. It is capable of both Rover and base modes.</p> <p>Most of these binaries can be found in the ZED Firmware/ZED-F9P folder.</p> <p>All field testing and device-specific performance parameters were obtained with ZED-F9P v1.30.</p> <ul> <li>v1.32 has a few SPARTN protocol-specific improvements. See release notes. This firmware is required for use with the NEO-D9S and the decryption of PMP messages.</li> <li>v1.30 has a few RTK and receiver performance improvements, I<sup>2</sup>C communication improvements, and most importantly support for SPARTN PMP packets. See release notes.</li> <li>v1.13 has a few RTK and receiver performance improvements but introduces a bug that causes the RTK Status LED to fail when SBAS is enabled. See release notes.</li> <li>v1.12 has the benefit of working with SBAS and an operational RTK status signal (the LED illuminates correctly). See release notes.</li> </ul>"},{"location":"firmware_update_ublox/#neo-d9s-firmware-changes","title":"NEO-D9S Firmware Changes","text":"<p>This module is used in the Facet L-Band to receive encrypted PMP messages over ~1.55GHz broadcast via a geosynchronous Inmarsat.</p> <p>This binary file can be found in the NEO Firmware folder.</p> <ul> <li>v1.04 Initial release.</li> </ul> <p>As of writing, no additional releases of the NEO-D9S firmware have been made.</p>"},{"location":"firmware_update_um980/","title":"Updating UM980 Firmware","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>The UM980 is the GNSS receiver inside the RTK Torch. The following describes how to update the firmware on the UM980.</p> <ol> <li>Download the latest UM980 firmware. As of writing, the UM980 firmware is v11833. See the RTK Torch repo for the latest firmware.</li> <li> <p>Download and install UPrecise. UPrecise is the software created by Unicore to configure and view output from Unicore GNSS modules. v2 of the software can be downloaded here but newer versions may be available.</p> <p>  Entering direct connect via Serial Configuration  </p> </li> <li> <p>Put the device into passthrough mode. From the main menu navigate to System 's'-&gt;Hardware 'h'-&gt;UM980 Direct Connect '13'. This will put the device into a pass-through mode, but with special character monitoring that allows the UM980 to be reset when bootloading is detected. Close the terminal connection so that UPrecise can connect to the COM port.</p> <p>  Startup message showing passthrough mode  </p> <p>Note</p> <p>The RTK device will stay in this passthrough mode until the external power button is pressed and released. The device will beep when exiting passthrough mode.</p> <p>  Connect button and connection settings in UPrecise  </p> </li> <li> <p>Select the COM port and set the baud rate to 115200, then press 'Connect'</p> <p>  Receiver Upgrade Button  </p> </li> <li> <p>Once connected, press the Receiver Upgrade button.</p> <p>  Firmware selection window  </p> </li> <li> <p>Select the latest firmware file that was previously downloaded (See the RTK Torch repo for the latest firmware). Then press Start.</p> <p>  Firmware update process  </p> </li> <li> <p>The update process can take multiple minutes. Once completed, close UPrecise, and power cycle the RTK Torch.</p> <p>  UM980 Firmware version shown in System Menu  </p> </li> <li> <p>Upon power-up, the firmware will be updated. Open the System Menu to confirm the firmware version.</p> </li> </ol>"},{"location":"gis_software_android/","title":"Android","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>While we recommend SW Maps for Android, there are a variety of 3rd party apps available for GIS and surveying for Android, iOS, and Windows. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data into the software of your choice.</p>"},{"location":"gis_software_android/#arcgis-field-maps","title":"ArcGIS Field Maps","text":"<p>ArcGIS Field Maps by Esri is a popular GIS app. Unfortunately it does not have a built in NTRIP Client to allow high precision corrections down to the RTK device. To enable high-precision, a mock location and an intermediary app such as GNSS Master or Lefebure is needed.</p> <p>Once a mock location provider is setup, open Field Maps.</p> <p></p> <p>Select World Imagery.</p> <p></p> <p>ArcGIS Field Maps with 12mm accuracy</p> <p>Field Maps will use the device's internal location as its default location provider. With GNSS Master or Lefebure providing the mock location to the phone, Field Maps will have a super precise GNSS location and data collection can begin.</p>"},{"location":"gis_software_android/#arcgis-quickcapture","title":"ArcGIS QuickCapture","text":"<p>ArcGIS QuickCapture by Esri is a popular GIS app. Unfortunately it does not allow Bluetooth connections to 3rd party RTK devices. To enable a connection to a SparkFun RTK device, a mock location and an intermediary app such as GNSS Master or Lefebure is needed.</p> <p>Once a mock location provider is setup, open QuickCapture.</p> <p></p> <p>For the purposes of this demonstration, click Continue without signing in.</p> <p></p> <p>Select the + then Browse Projects.</p> <p></p> <p>Select a project.</p> <p></p> <p>From the BioBlitz project screen we can see we have a GPS accuracy of less than 1 ft. The RTK device has RTK fix and is providing extremely accurate (better than 20mm or 1\") positional data.</p> <p>Click the map icon in the upper right.</p> <p></p> <p>The location of the receiver is shown on a map. With GNSS Master or Lefebure providing the mock location to the phone, QuickCapture will have a very precise GNSS location and data collection can begin.</p>"},{"location":"gis_software_android/#arcgis-survey123","title":"ArcGIS Survey123","text":"<p>ArcGIS Survey123 by Esri is a popular GIS app. Unfortunately it does not allow Bluetooth connections to 3rd party RTK devices. To enable a connection to a SparkFun RTK device, a mock location and an intermediary app such as GNSS Master or Lefebure is needed.</p> <p>Once a mock location provider is setup, open Survey123.</p> <p></p> <p>For the purposes of this demonstration, click Continue without signing in.</p> <p></p> <p>Select the satellite icon in the upper right corner.</p> <p></p> <p>If the mock location provider app is running, you should see the Lat/Lon/Alt from the RTK device. In the above image, RTK Fix is achieved with 0.033ft (10mm) accuracy. Click on the map icon.</p> <p></p> <p>The location of the receiver is shown on a map. With GNSS Master or Lefebure providing the mock location to the phone, Survey123 will have a very precise GNSS location and data collection can begin.</p>"},{"location":"gis_software_android/#diamond-maps","title":"Diamond Maps","text":"<p>Diamond Maps is a great solution for utilities and municipalities. $20/month GIS software with many great features. Get the Android app here.</p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>From the Home Screen, click on the 'hamburger' settings button in the top left corner.</p> <p></p> <p>Select GPS Status.</p> <p></p> <p>Click on the Select a GPS Source box and select the RTK device that was previously paired with.</p> <p></p> <p>Once a receiver is selected, its status will be shown in the GPS Setup window. Additionally, an NTRIP Client is available for corrections.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p></p> <p>From this window, an NTRIP Client can be configured. Enter your NTRIP Caster information then click on START. Click Close to exit out to the main window.</p> <p></p> <p>0.03ft accuracy shown in green</p> <p>Closing the GPS Source window will show the map as well as the relative accuracy in feet.</p>"},{"location":"gis_software_android/#field-genius","title":"Field Genius","text":"<p>Field Genius for Android is another good solution, albeit a lot more expensive than free.</p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>From the Main Menu open <code>Select Instrument</code>.</p> <p></p> <p>Click the 'Add Profile' button.</p> <p></p> <p>Click <code>GNSS Rover</code> and select NMEA as the Make. Set your Profile Name to something memorable like 'SparkFun RTK' then click the 'Create' button.</p> <p></p> <p>Click on 'SET UP COMMUNICATION'.</p> <p></p> <p>From the Bluetooth communication page, click the 'Search' button.</p> <p></p> <p>You will be shown a list of paired devices. Select the RTK device you'd like to connect to then click 'Connect'. The RTK device will connect and the MAC address shown on the RTK device OLED will change to the Bluetooth icon indicating a link is open.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p></p> <p>We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. Your phone can be the radio link! Click on 'SET UP CORRECTIONS'.</p> <p></p> <p>Click on 'RTK via Internet' then 'SET UP INTERNET', then 'Done'.</p> <p></p> <p>Click on 'SET UP DATA SOURCE'.</p> <p></p> <p>Click 'Add New Source'.</p> <p></p> <p>Enter your NTRIP Caster credentials and click 'DONE'.</p> <p>What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p> <p>Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Checkout Creating a Permanent Base. If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster.</p> <p></p> <p>Click 'My NTRIP1' then 'Done' and 'Connect'.</p> <p>You will then be presented with a list of Mount Points. Select the mount point you'd like to use then click 'Select' then 'Confirm'.</p> <p>Select 'Done' then from the main menu select 'Survey' to begin using the device.</p> <p></p> <p>Now you can begin using the SparkFun RTK device with Field Genius.</p>"},{"location":"gis_software_android/#gnss-master","title":"GNSS Master","text":"<p>GNSS Master is a great utility when a given GIS app does not have an NTRIP Client or a way to connect over Bluetooth. GNSS Master connects to a RTK device over Bluetooth (or Bluetooth BLE) as well as any correction source (NTRIP, PointPerfect, even USB Serial), and then acts as the phone's location using Mock Location.</p> <p>Note</p> <p>Most GIS apps will not need GNSS Master or Mock Location enabled and this section can be skipped.</p> <p>Read how to Enable Mock Location.</p> <p></p> <p>From the GNSS Master main screen, select GNSS Receiver Connection.</p> <p></p> <p>Pick the RTK device to connect to from the list, then click Connect. The Data Rate should increase indicating data flowing from the RTK device to the GNSS Master app. Click the back button to return to the main screen.</p> <p></p> <p>Select Correction Input to setup an NTRIP Client.</p> <p></p> <p>This is one of the powerful features of GNSS Master - multiple connections can be entered. This is helpful if you regularly switch between locations or NTRIP Casters and your GIS software only allows entry of a single NTRIP source. GNSS Master supports corrections from NTRIP Casters but also PointPerfect and a direct serial connection to a GNSS receiver. This can be really helpful in advanced setups.</p> <p></p> <p>Enter your NTRIP Client information then click SAVE.</p> <p></p> <p>Once connected the Data Rate should increase above 0 bytes per second. Return to the home screen by hitting the back button.</p> <p></p> <p>Enable mock location. If GNSS Master throws an error, re-enable GNSS Master as your Mock Location provider in Developer Options.</p> <p>Once enabled, any GIS app that selects 'Internal' or 'Phone Location' as its source will instead be fed the high precision NMEA being generated by the RTK device connected over Bluetooth.</p>"},{"location":"gis_software_android/#lefebure","title":"Lefebure","text":"<p>Lefebure NTRIP Client is the original app for getting correction from an NTRIP caster and down over Bluetooth. It's an oldie but a goodie.</p> <p>Note</p> <p>Most GIS apps will not need Lefebure or Mock Location enabled and this section can be skipped.</p> <p>The problem is that if Lefebure is connected to the RTK device providing RTCM corrections over Bluetooth, then other GIS applications cannot use the same Bluetooth connection at the same time. That's where mock locations save the day. Lefebure can be setup to take over or 'mock' the GPS location being reported by the phone. Nearly all GIS apps can use the phone's GPS location. So if the phone's location is magically super precise, then Lefebure can be the NTRIP Client and data provide, and your GIS app is none the wiser, and uses the phone's location.</p> <p>Read how to Enable Mock Location.</p> <p></p> <p>Once mock locations are enabled, click on the Settings gear in the top left corner.</p> <p></p> <p>If needed, an NTRIP Client can be setup to provide corrections over Bluetooth to the RTK device.</p> <p></p> <p>Enter the Caster information and hit the back button.</p> <p></p> <p>Select Receiver Settings.</p> <p></p> <p>Select the RTK device that has been paired over Bluetooth. Also enable Mock Locations. Hit the back button to return to the main screen.</p> <p></p> <p>Press the Connect button. The app will connect to the NTRIP Caster. Now, any GIS app that selects 'Internal' or 'Phone Location' as its source will instead be fed the high precision NMEA being generated by the RTK device connected over Bluetooth.</p>"},{"location":"gis_software_android/#qfield","title":"QField","text":"<p>QField is a free GIS Android app that runs QGIS.</p> <p></p> <p>The 'Reset to Surveying Defaults' button</p> <p>First, configure the RTK device to output only NMEA messages. QField currently does not correctly parse other messages such as RAWX or RTCM so these will interfere with communication if they are enabled.</p> <p>These RTK device settings can be found under the Messages menu through the WiFi config page or through the Serial Config menu.</p> <p></p> <p>Create an account and project on QFieldCloud. This project will be synchronized and viewable on the QField app.</p> <p></p> <p>Refresh Projects button</p> <p>Once the project is created, press the Refresh projects list button to update the list. Then select your project.</p> <p></p> <p>'Hamburger' menu in upper right corner</p> <p>Press the icon in the top left corner of the app to open the project settings.</p> <p></p> <p>Project settings</p> <p>From the project settings menu, press the gear icon to open the device settings dropdown menu.</p> <p></p> <p>Project settings submenu</p> <p>From the submenu, select 'Settings'.</p> <p></p> <p>Positioning Menu</p> <p>Select the Positioning Menu. Then, with your RTK device on and in normal mode (not AP Config) press the Scan button in the QField app to update the dropdown list of available Bluetooth devices. If your device is not detected, be sure you've paired your cellphone or laptop with Bluetooth.</p> <p>Once connected exit out of the menus and see position information within your project.</p>"},{"location":"gis_software_android/#survey-master","title":"Survey Master","text":"<p>Survey Master by ComNam / SinoGNSS is an Android-based option. The download location can vary so google 'Survey Master ComNav Download' if the link above fails. Download the zip file, send the APK file to a phone and install the program.</p> <p></p> <p>By default, a wizard will guide you through the setup. The Project step will ask you for the name of the project, the datum, etc.</p> <p></p> <p>Next select your connection.</p> <p></p> <p>For the Device Model select 'NMEA Device'.</p> <p></p> <p>If you are just getting started, use one of the default antenna types. If you are attempting to get sub-centimeter accuracy, enter the parameters of your antenna and add it. Above are the NGS-certified parameters for the TOP106 antenna.</p> <p></p> <p>Click the 'Target Device' option to get a list of available Bluetooth devices. Make sure your RTK product is on and you should see the device. In this example 'Express Rover-B022' was chosen.</p> <p>To finish, click 'Connect'. You should see the Bluetooth MAC address on your RTK product change to the Bluetooth icon indicating a connection is established.</p> <p></p> <p>Next is configuring the 'Work mode' of the device. The step is where we set up our NTRIP correction source.</p> <p></p> <p>Click 'Add' to create a new work mode.</p> <p></p> <p>Shown above, we configure the NTRIP Client. Survey Master calls this the 'SinoGNSS' Protocol. Click on the three bars to the right of 'Server' to enter a new NTRIP connection.</p> <p></p> <p>Here you can add different NTRIP Caster providers. If you're using RTK2Go be sure to enter your contact email into the user name.</p> <p></p> <p>Return to the 'Datalink type' window and select the Server you just entered. Re-enter the server address and port for your NTRIP Caster. Once complete, click on the down-pointing arrow. This will ping the Caster and obtain the mount point table. Select your mount point.</p> <p></p> <p>Select the newly created work mode and press the 'Apply' button.</p> <p></p> <p>Survey Master will attempt to connect to your specified RTK corrections source (NTRIP Caster). Upon success, you will be located on the Project menu.</p> <p>Survey Master expects many more NMEA sentences than most GIS software. We must enable some additional messages on the RTK device to correctly communicate with Survey Master.</p> <p></p> <p>Note above: There are 9 enabled messages and GSV is set to '1'.</p> <p>Connect to the RTK device either over WiFi AP config or via Serial. Above is shown the serial method.</p> <p>Open a terminal at 115200bps and press a key to open the serial configuration menu. Press '2' for GNSS Messages, press '1' for NMEA messages, now be sure to enable 9 messages to a rate of 1:</p> <ul> <li>GGA</li> <li>GLL</li> <li>GRS</li> <li>GSA</li> <li>GST</li> <li>GSV</li> <li>RMC</li> <li>VTG</li> <li>ZDA</li> </ul> <p>Once complete, press x until you exit the serial menus. Now we may return to Survey Master.</p> <p></p> <p>Click on the 'Survey' menu and then 'Topo Survey'. Above we can see a device with RTK float, and 117mm horizontal positional accuracy.</p> <p>Known Issue</p> <p>Survey Master parses the GxGSV sentence improperly and will only indicate GPS satellites even though the fix solution is using all satellites.</p> <p> </p> <p>To verify the NMEA sentences are being delivered correctly, Survey Master has a built-in tool. Select the Device-&gt;Rover-&gt;More-&gt;'H-Terminal'.</p>"},{"location":"gis_software_android/#surpad","title":"SurPad","text":"<p>SurPad is an Android app available as a free trial for 30-days. It's loaded as an APK (rather than through Google Play).</p> <p>Be sure your RTK device has been paired over Bluetooth to your phone.</p> <p></p> <p>SurPad Home Screen</p> <p>Create a project and get to the home screen. Shown above, click on the GNSS receiver icon.</p> <p></p> <p>SurPad connecting over Bluetooth</p> <p>Set the Device manufacturer to Other, Device type to RTK(NMEA0183), and Communication Mode to Bluetooth. Select the SparkFun RTK device that you would like to connect to on the Paired Devices list and then click Connect.</p> <p>Once connected to the device a Debug button will appear. This is one of the nice features of SurPad: Running debug will allow you to inspect the NMEA coming across the link.</p> <p>Once done, press the back arrow (top left corner) to return to the home screen.</p> <p></p> <p>SurPad Point Survey map</p> <p>Above: From the home screen press the Survey button at the bottom, then Point Survey to bring up the map.</p> <p>In the top left corner, press the green hamburger + cell phone icon. This will open the NTRIP settings.</p> <p></p> <p>SurPad Data Link NTRIP Configuration</p> <p>Change the Connect Mode from TCP Client to NTRIP. If you are unable to edit or change the Connect Mode from TCP Client be sure the TCP Client is stopped by pressing the Stop button in the lower left corner (located in the same spot as the highlighted Start).</p> <p></p> <p>SurPad NTRIP Connection</p> <p>Enter the information for your NTRIP caster. In the above example, we are connected to the SparkFun base station on RTK2Go. For RTK2Go you will need to enter a valid email address for a user name but a password is not required.</p> <p>Click on Start and you should see the 'Receive data' progress bar (highlighted above) increase each second indicating a connection. Once complete, press 'Apply' to return to the map.</p> <p></p> <p>SurPad with RTK Fix</p> <p>Above: After a few moments, the RTK device should move to RTK Float, then RTK Fix. You can see the age of the RTCM data in the upper bar, along with the horizontal (23mm) and vertical (31mm) accuracy estimates. Now you can begin taking points.</p>"},{"location":"gis_software_android/#survpc","title":"SurvPC","text":"<p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>Equip Sub Menu</p> <p>Select the Equip sub menu then <code>GPS Rover</code></p> <p></p> <p>Select NMEA GPS Receiver</p> <p>From the drop down, select <code>NMEA GPS Receiver</code>.</p> <p></p> <p>Select Model: DGPS</p> <p>Select DGPS if you'd like to connect to an NTRIP Caster. If you are using the RTK Facet L-Band, or do not need RTK fix type precision, leave the model as Generic.</p> <p></p> <p>Bluetooth Settings Button</p> <p>From the <code>Comms</code> submenu, click the Blueooth settings button.</p> <p></p> <p>SurvPC Bluetooth Devices</p> <p>Click <code>Find Device</code>.</p> <p></p> <p>List of Paired Bluetooth Devices</p> <p>You will be shown a list of devices that have been paired. Select the RTK device you want to connect to.</p> <p></p> <p>Connect to Device</p> <p>Click the <code>Connect Bluetooth</code> button, shown in red in the top right corner. The software will begin a connection to the RTK device. You'll see the MAC address on the RTK device changes to the Bluetooth icon indicating it's connected.</p> <p>If SurvPC detects NMEA, it will report a successful connection.</p> <p></p> <p>Receiver Submenu</p> <p>You are welcome to enter the ARP (antenna reference point) and surveying stick length for your particular setup.</p> <p>NTRIP Client</p> <p>Note</p> <p>If you are using a radio to connect Base to Rover, or if you are using the RTK Facet L-Band you do not need to set up NTRIP; the device will achieve RTK fixes and output extremely accurate location data by itself. But if L-Band corrections are not available, or you are not using a radio link, the NTRIP Client can provide corrections to this Rover.</p> <p></p> <p>RTK Submenu</p> <p>If you selected 'DGPS' as the Model type, the RTK submenu will be shown. This is where you give the details about your NTRIP Caster such as your mount point, user name/pw, etc. For more information about creating your own NTRIP mount point please see Creating a Permanent Base</p> <p>Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK device. Within a few seconds, the RTK device will go from ~300mm accuracy to 14mm. Pretty nifty, no?</p> <p>What's an NTRIP Caster? In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p> <p>Don't have access to an NTRIP Caster? You can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base. If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station](https://learn.sparkfun.com/tutorials/how-to-build-a-diy-gnss-reference-station). If you'd just like a service, Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Remember, you can always use a 2nd RTK device in Base mode to provide RTCM correction data but it will be less accurate than a fixed position caster.</p> <p>Once everything is connected up, click the Green check in the top right corner.</p> <p></p> <p>Storing Points</p> <p>Now that we have a connection, you can use the device, as usual, storing points and calculating distances.</p> <p></p> <p>SurvPC Skyplot</p> <p>Opening the Skyplot will allow you to see your GNSS details in real-time.</p> <p>If you are a big fan of SurvPC please contact your sales rep and ask them to include SparkFun products in their Manufacturer drop-down list.</p>"},{"location":"gis_software_android/#sw-maps","title":"SW Maps","text":"<p>The best mobile app that we\u2019ve found is the powerful, free, and easy-to-use SW Maps by Softwel. It is compatible with Android and iOS, either phone or tablet with Bluetooth. What makes SW Maps truly powerful is its built-in NTRIP client. This is a fancy way of saying that we\u2019ll be showing you how to get RTCM correction data over the cellular network.</p> <p>Be sure your device is paired over Bluetooth.</p> <p></p> <p>List of available Bluetooth devices</p> <p>From SW Map's main menu, select Bluetooth GNSS. This will display a list of available Bluetooth devices. Select the Rover or Base you just paired with. If you are taking height measurements (altitude) in addition to position (lat/long) be sure to enter the height of your antenna off the ground including any ARP offsets of your antenna (this should be printed on the side).</p> <p>Click on 'CONNECT' to open a Bluetooth connection. Assuming this process takes a few seconds, you should immediately have a location fix.</p> <p></p> <p>SW Maps with RTK Fix</p> <p>You can open the GNSS Status sub-menu to view the current data.</p> <p>NTRIP Client</p> <p>If you\u2019re using a serial radio to connect a Base to a Rover for your correction data, or if you're using the RTK Facet L-Band with built-in corrections, you can skip this part.</p> <p>We need to send RTCM correction data from the phone back to the RTK device so that it can improve its fix accuracy. This is the amazing power of the SparkFun RTK products and SW Maps. Your phone can be the radio link! From the main SW Maps menu select NTRIP Client. Not there? Be sure the 'SparkFun RTK' instrument was automatically selected connecting. Disconnect and change the instrument to 'SparkFun RTK' to enable the NTRIP Connection option.</p> <p></p> <p>NTRIP Connection - Not there? Be sure to select 'SparkFun RTK' was selected as the instrument</p> <p></p> <p>Connecting to an NTRIP Caster</p> <p>Enter your NTRIP Caster credentials and click connect. You will see bytes begin to transfer from your phone to the RTK device. Within a few seconds, the RTK device will go from ~300mm accuracy to 14mm. Pretty nifty, no?</p> <p>Once you have a full RTK fix you'll notice the location bubble in SW Maps turns green. Just for fun, rock your rover monopole back and forth on a fixed point. You'll see your location accurately reflected in SW Maps. Millimeter location precision is a truly staggering thing.</p>"},{"location":"gis_software_android/#vespucci","title":"Vespucci","text":"<p>Vespucci is an Open Street Map editor for Android.</p> <p>This software requires the RTK device to connect over TCP. Be sure you have a local WiFi network entered into the WiFi Config menu, have a TCP Client or Server enabled, and have noted the TCP port (it's 2947 by default).</p> <p></p> <p>With a map open, select the gear icon on the bottom bar.</p> <p></p> <p>From the Preferences menu, scroll to the bottom and select 'Advanced Preferences'.</p> <p></p> <p>Select Location settings.</p> <p></p> <p>Select GPS/GNSS source. Select NMEA from TCP client. TCP server is also supported.</p> <p></p> <p>Select NMEA network source. Enter the IP address and TCP port of the RTK device. The IP address can be found by opening a serial terminal while connected to WiFi (it is reported every few seconds). The TCP port is entered into the WiFi Config menu.</p> <p></p> <p>Close all menus and you should see your location within Vespucci.</p>"},{"location":"gis_software_android/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software_android/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p>"},{"location":"gis_software_android/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources.</p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base.</p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station.</p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"gis_software_ios/","title":"iOS","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>There are a variety of 3rd party apps available for GIS and surveying for Android, iOS, and Windows. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data into the software of your choice.</p> <p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK products support additional connection options including TCP and Bluetooth Low Energy (BLE).</p>"},{"location":"gis_software_ios/#arcgis-field-maps","title":"ArcGIS Field Maps","text":"<p>For reasons unknown, Esri removed TCP support from Field Maps for iOS and is therefore not usable by SparkFun RTK devices at this time.</p> <p>If you must use iOS, checkout SW Maps, ArcGIS QuickCapture, or ArcGIS Survey123.</p> <p>Field Maps for Android is supported.</p>"},{"location":"gis_software_ios/#arcgis-quickcapture","title":"ArcGIS QuickCapture","text":"<p>ArcGIS QuickCapture is a popular offering from Esri that works well with SparkFun RTK products.</p> <p>ArcGIS QuickCapture connects to the RTK device over TCP. In other words, the RTK device needs to be connected to the same WiFi network as the device running QuickCapture. Generally, this is an iPhone or iPad operating as a hotspot.</p> <p>Note</p> <p>The iOS hotspot defaults to 5.5GHz. This must be changed to 2.4GHz. Please see Hotspot Settings.</p> <p></p> <p></p> <p>The RTK device must use WiFi to connect to the iPhone or iPad. In the above image, the device will attempt to connect to iPhone (a cell phone hotspot) when WiFi is needed.</p> <p></p> <p>Next, the RTK device must be configured as a TCP Server. The default port of 2948 works well. See TCP/UDP Menu for more information.</p> <p></p> <p>Once the RTK device connects to the WiFi hotspot, its IP address can be found in the System Menu. This is the number that needs to be entered into QuickCapture. You can now proceed to the QuickCapture app to set up the software connection.</p> <p></p> <p>From the main screen, press the hamburger icon in the top left corner.</p> <p></p> <p>Press the Settings button.</p> <p></p> <p>Select the Location Provider option.</p> <p>Select Via Network.</p> <p></p> <p>Enter the IP address and port previously obtained from the RTK device and click ADD.</p> <p></p> <p>That provider should now be shown connected.</p> <p></p> <p>From the main screen, click on the plus in the lower left corner and then BROWSE PROJECTS.</p> <p></p> <p>For this example, add the BioBlitz project.</p> <p></p> <p>Above, we can see the GPS accuracy is better than 1ft. Click on the map icon in the top right corner.</p> <p></p> <p>From the map view, we can see our location with very high accuracy. We can now begin gathering point information with millimeter accuracy.</p>"},{"location":"gis_software_ios/#arcgis-survey123","title":"ArcGIS Survey123","text":"<p>ArcGIS Survey123 Home Screen</p> <p>ArcGIS Survey123 is a popular offering from Esri that works well with SparkFun RTK products.</p> <p>ArcGIS Survey123 connects to the RTK device over TCP. In other words, the RTK device needs to be connected to the same WiFi network as the device running ArcGIS. Generally, this is an iPhone or iPad.</p> <p>Note</p> <p>The iOS hotspot defaults to 5.5GHz. This must be changed to 2.4GHz. Please see Hotspot Settings.</p> <p></p> <p></p> <p>Adding WiFi network to settings</p> <p>The RTK device must use WiFi to connect to the data collector. Using a cellular hotspot or cellphone is recommended. In the above image, the device will attempt to connect to iPhone (a cell phone hotspot) when WiFi is needed.</p> <p></p> <p>TCP Server Enabled on port 2948</p> <p>Next, the RTK device must be configured as a TCP Server. The default port of 2948 works well. See TCP/UDP Menu for more information.</p> <p></p> <p>RTK device showing IP address</p> <p>Once the RTK device connects to the WiFi hotspot, its IP address can be found in the System Menu. This is the number that needs to be entered into ArcGIS Survey123. You can now proceed to the ArcGIS Survey123 app to set up the software connection.</p> <p></p> <p>ArcGIS Survey123 Home Screen</p> <p>From the home screen, click on the 'hamburger' icon in the upper right corner.</p> <p></p> <p>ArcGIS Survey123 Settings Menu</p> <p>From the settings menu, click on the Settings gear.</p> <p></p> <p>ArcGIS Survey123 Settings List</p> <p>From the settings list, click on Location.</p> <p></p> <p>ArcGIS Survey123 List of Location Providers</p> <p>Click on the Add location provider.</p> <p></p> <p>ArcGIS Survey123 Network Connection Type</p> <p>Select Network.</p> <p></p> <p>ArcGIS Survey123 TCP Connection Information</p> <p>Enter the IP address previously found along with the TCP port. Once complete, click Add.</p> <p></p> <p>ArcGIS Survey123 Sensor Settings</p> <p>You may enter various sensor-specific settings including antenna height, if desired. To view real-time sensor information, click on the satellite icon in the upper right corner.</p> <p></p> <p>ArcGIS Survey123 Sensor Data</p> <p>The SparkFun RTK device's data should now be seen. Click on the Map icon to return to the mapping interface.</p> <p></p> <p>ArcGIS Survey123 Map Interface</p> <p>Returning to the map view, we can now begin gathering point information with millimeter accuracy.</p>"},{"location":"gis_software_ios/#hotspot-settings","title":"Hotspot Settings","text":"<p>Apple released an iOS update in mid 2024 that changed the default hotspot frequency to 5.5GHz. The RTK product line uses 2.4GHz for WiFi and will not be able to communicate at this frequency. This can be fix by opening Settings then Personal Hotspot.</p> <p></p> <p>Be sure to enable Maximize Compatibility. This will force the hotspot to use 2.4GHz.</p>"},{"location":"gis_software_ios/#qfield","title":"QField","text":"<p>QField is a free iOS app that runs QGIS.</p> <p></p> <p>Modified NMEA messages on RTK Torch</p> <p>First, configure the RTK device to output only the following NMEA messages:</p> <ul> <li>GPGGA</li> <li>GPGSA</li> <li>GPGST</li> <li>GPGSV</li> </ul> <p>QField currently does not correctly parse other messages such as GPRMC, or RTCM. These messages will prevent communication if they are enabled.</p> <p>These NMEA message settings can be found under the Messages menu, using the web config page or the serial config interface.</p> <p></p> <p></p> <p>Adding WiFi network to settings</p> <p>QField connects to the RTK device over TCP. In other words, the RTK device needs to be connected to the same WiFi network as the device running ArcGIS. Generally, this is an iPhone or iPad. In the above image, the device will attempt to connect to iPhone (a cell phone hotspot) when WiFi is needed.</p> <p>Note</p> <p>The iOS hotspot defaults to 5.5GHz. This must be changed to 2.4GHz. Please see Hotspot Settings.</p> <p></p> <p>TCP Server Enabled on port 9000</p> <p>Next, the RTK device must be configured as a TCP Server. QField uses a default port of 9000 so that is what we recommend using. See TCP/UDP Menu for more information.</p> <p></p> <p>RTK device showing IP address</p> <p>Once the RTK device connects to the WiFi hotspot, its IP address can be found in the System Menu. This is the number that needs to be entered into QField. You can now proceed to the QField app to set up the software connection.</p> <p></p> <p>QField Opening Screen</p> <p>Click on QFieldCloud projects to open your project that was previously created on the QField Cloud or skip this step by using one of the default projects (Bee Farming, Wastewater, etc).</p> <p></p> <p>QField Main Map</p> <p>From the main map, click on the 'hamburger' icon in the upper left corner.</p> <p></p> <p>QField Settings Gear</p> <p>Click on the gear to open settings.</p> <p></p> <p>Click on the Settings menu.</p> <p></p> <p>QField Positioning Menu</p> <p>From the Positioning menu, click Add.</p> <p></p> <p>QField Entering TCP Information</p> <p>Select TCP as the connection type. Enter the IP address of the RTK device and the port number. Finally, hit the small check box in the upper left corner (shown in pink above) to close the window.</p> <p>Once this information is entered, QField will automatically attempt to connect to that IP and port.</p> <p></p> <p>QField TCP Connected</p> <p>Above, we see the port is successfully connected. Exit out of all menus.</p> <p></p> <p>QField Connected via TCP with RTK Fix</p> <p>Returning to the map view, we see an RTK Fix with 11mm positional accuracy.</p>"},{"location":"gis_software_ios/#sw-maps","title":"SW Maps","text":"<p>SWMaps is available for iOS here.</p> <p>Make sure your RTK device is switched on and operating in Rover mode.</p> <p>Make sure Bluetooth is enabled on your iOS device Settings.</p> <p>The RTK device will not appear in the OTHER DEVICES list. That is OK.</p> <p></p> <p>iOS Settings Bluetooth</p> <p>Open SWMaps.</p> <p>Open or continue a Project if desired.</p> <p>SWMaps will show your approximate location based on your iOS device's location.</p> <p></p> <p>iOS SWMaps Initial Location</p> <p>Press the 'SWMaps' icon at the top left of the screen to open the menu.</p> <p></p> <p>iOS SWMaps Menu</p> <p>Select Bluetooth GNSS.</p> <p></p> <p>iOS SWMaps Bluetooth Connection</p> <p>Set the Instrument Model to Generic NMEA (Bluetooth LE).</p> <p></p> <p>iOS SWMaps Instrument Model</p> <p>Press 'Scan' and your RTK device should appear.</p> <p></p> <p>iOS SWMaps Bluetooth Scan</p> <p>Select (tick) the RTK device and press 'Connect'.</p> <p></p> <p>iOS SWMaps Bluetooth Connected</p> <p>Close the menu and your RTK location will be displayed on the map.</p> <p>You can now use the other features of SWMaps, including the built-in NTRIP Client.</p> <p>Re-open the menu and select 'NTRIP Client'.</p> <p>Enter the details for your NTRIP Caster - as shown in the SWMaps section above.</p> <p></p> <p>iOS SWMaps NTRIP Client</p> <p>Click 'Connect'</p> <p>At this point, you should see a Bluetooth Pairing Request. Select 'Pair' to pair your RTK with your iOS device.</p> <p></p> <p>iOS Bluetooth Pairing</p> <p>SWMaps will now receive NTRIP correction data from the caster and push it to your RTK over Bluetooth BLE.</p> <p>From the SWMaps menu, open 'GNSS Status' to see your position, fix type and accuracy.</p> <p></p> <p>iOS SWMaps GNSS Status</p> <p>If you return to the iOS Bluetooth Settings, you will see that your iOS and RTK devices are now paired.</p> <p></p> <p>iOS Settings Bluetooth - Paired</p>"},{"location":"gis_software_ios/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software_ios/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p>"},{"location":"gis_software_ios/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources.</p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base.</p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station.</p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"gis_software_windows/","title":"Windows","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>There are a variety of 3rd party apps available for GIS and surveying for Android, iOS, and Windows. We will cover a few examples below that should give you an idea of how to get the incoming NMEA data into the software of your choice.</p>"},{"location":"gis_software_windows/#qgis","title":"QGIS","text":"<p>QGIS is a free and open-source geographic information system software for desktops. It's available here.</p> <p>Once the software is installed open QGIS Desktop.</p> <p></p> <p>Open the View Menu, then look for the 'Panels' submenu.</p> <p></p> <p>From the Panels submenu, enable 'GPS Information'. This will show a new panel on the left side.</p> <p>At this point, you will need to enable TCP Server mode on your RTK device from the WiFi Config menu. Once the RTK device is connected to local WiFi QGIS will be able to connect to the given IP address and TCP port.</p> <p></p> <p>Above: From the subpanel, select 'gpsd'.</p> <p></p> <p>Enter the IP address of your RTK device. This can be found by opening a serial connection to the device. The IP address will be displayed every few seconds. Enter the TCP port to use. By default an RTK device uses 2947.</p> <p>Press 'Connect'.</p> <p></p> <p>The device location will be shown on the map. To see a map, be sure to enable OpenStreetMap under the XYZ Tiles on the Browser.</p> <p></p> <p>Alternatively, a direct serial connection to the RTK device can be obtained. Use a USB cable to connect to the RTK device. See Output GNSS Data over USB for more information.</p>"},{"location":"gis_software_windows/#other-gis-packages","title":"Other GIS Packages","text":"<p>Hopefully, these examples give you an idea of how to connect the RTK product line to most any GIS software. If there is other GIS software that you'd like to see configuration information about, please open an issue on the RTK Firmware repo and we'll add it.</p>"},{"location":"gis_software_windows/#whats-an-ntrip-caster","title":"What's an NTRIP Caster?","text":"<p>In a nutshell, it's a server that is sending out correction data every second. There are thousands of sites around the globe that calculate the perturbations in the ionosphere and troposphere that decrease the accuracy of GNSS accuracy. Once the inaccuracies are known, correction values are encoded into data packets in the RTCM format. You, the user, don't need to know how to decode or deal with RTCM, you simply need to get RTCM from a source within 10km of your location into the RTK device. The NTRIP client logs into the server (also known as the NTRIP caster) and grabs that data, every second, and sends it over Bluetooth to the RTK device.</p>"},{"location":"gis_software_windows/#where-do-i-get-rtk-corrections","title":"Where do I get RTK Corrections?","text":"<p>Be sure to see Correction Sources.</p> <p>Don't have access to an NTRIP Caster or other RTCM correction source? There are a few options.</p> <p>The SparkFun RTK Facet L-Band gets corrections via an encrypted signal from geosynchronous satellites. This device gets RTK Fix without the need for a WiFi or cellular connection.</p> <p>Also, you can use a 2nd RTK product operating in Base mode to provide the correction data. Check out Creating a Permanent Base.</p> <p>If you're the DIY sort, you can create your own low-cost base station using an ESP32 and a ZED-F9P breakout board. Check out How to Build a DIY GNSS Reference Station.</p> <p>There are services available as well. Syklark provides RTCM coverage for $49 a month (as of writing) and is extremely easy to set up and use. Point One also offers RTK NTRIP service with a free 14 day trial and easy to use front end.</p>"},{"location":"intro/","title":"Quick Start","text":"<p>This quick start guide will get you started in 10 minutes or less. For the full product manual, please proceed to the Introduction.</p> <p>Which device are you using?</p> <p></p> <ul> <li>RTK EVK Quick Start</li> <li>RTK EVK Hookup Guide</li> </ul> <p></p> <ul> <li>RTK Postcard Quick Start</li> <li>RTK Postcard Hookup Guide</li> </ul> <p></p> <ul> <li>RTK Torch Quick Start</li> <li>RTK Torch Hookup Guide</li> </ul>"},{"location":"introduction/","title":"Introduction","text":"<p>The SparkFun RTK Everywhere products are exceptional GNSS receivers out-of-box and can be used with little or no configuration. This RTK Everywhere Product Manual provides detailed descriptions of all the available features of the RTK products.</p> <p>The line of RTK Everywhere products offered by SparkFun all run identical firmware. The RTK Everywhere firmware and this guide cover the following products:</p> <ul> <li> <p> SparkFun RTK EVK (GPS-24342) </p> <p> Hookup Guide </p> </li> <li> <p> SparkFun RTK Postcard (GPS-26916) </p> <p> Hookup Guide </p> </li> <li> <p> SparkFun RTK Torch (GPS-25662) </p> <p> Quickstart Guide Hookup Guide </p> </li> </ul> <p>Depending on the hardware platform different features may or may not be supported. We will denote each product in each section so that you know what is supported.</p> <p>There are multiple ways to configure an RTK product:</p> <ul> <li>Bluetooth - Good for in-field changes</li> <li>WiFi - Good for in-field changes</li> <li>Serial Terminal - Requires a computer but allows for all configuration settings</li> <li>Settings File - Used for configuring multiple RTK devices identically</li> <li>Ethernet - RTK EVK only</li> </ul> <p>The Bluetooth or Serial Terminal methods are recommended for most advanced configurations. Most, but not all settings are also available over WiFi but can be tricky to input via mobile phone.</p> <p>If you have an issue, feature request, bug report, or a general question about the RTK firmware specifically we encourage you to post your comments on the firmware's repository. If you feel like bragging or showing off what you did with your RTK product, we'd be thrilled to hear about it on the issues list as well!</p> <p>Things like how to attach an antenna or other hardware-specific topics are best read on the Hookup Guides for the individual products.</p>"},{"location":"menu_base/","title":"Base Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>In addition to providing accurate local location fixes, SparkFun RTK devices can also serve as a correction source, also called a Base. The Base doesn't move and 'knows' where it is so it can calculate the discrepancies between the signals it is receiving and what it should be receiving. Said differently, the Base is told where it is, and that it's not moving. If the GPS signals say otherwise, the Base knows there was a disturbance in the Force ionosphere. These differences are the correction values passed to the Rover so that the Rover can have millimeter-level accuracy.</p> <p>There are two types of bases: Surveyed and Fixed. A Surveyed Base is often a temporary base set up in the field. Called a Survey-In, this is less accurate but requires only 60 seconds to complete. A Fixed Base is much more accurate but the precise location at which the antenna is located must be known. A Fixed Base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours and then processed using Precision Point Position. We have a variety of tutorials that go into depth on these subjects but all you need to know is that all our RTK devices support both Survey-In and Fixed Base techniques.</p> <p>Please see the following tutorials for more information:</p> <ul> <li> <p> <p>What is GPS RTK?</p> <li> <p> <p>Getting Started with u-center for u-blox</p> <li> <p> <p>Setting up a Rover Base RTK System</p> <li> <p> <p>How to Build a DIY GNSS Reference Station</p>"},{"location":"menu_base/#mode","title":"Mode","text":"<p>The Base Menu allows the user to select between Survey-In or Fixed Base setups.</p> <p></p> <p>Base Menu showing Survey-In Mode</p> <p>In Survey-In mode, the minimum observation time can be set. The default is 60 seconds. The device will wait for the position accuracy to be better than 1 meter before a Survey-In is started. Don't be fooled; setting the observation time to 4 hours is not going to significantly improve the accuracy of the survey - use PPP instead.</p> <p></p> <p>Base Menu showing Fixed Base Mode with ECEF Coordinates</p> <p>In Fixed mode, the coordinates of the antenna need to be set. These can be entered in ECEF or Geographic coordinates.</p> <p>Once the device has been configured, a user enters Base mode by changing the mode in the System Menu.</p> <p>If the device is configured for Survey-In base mode, the survey will begin. The mean standard deviation will be printed as well as the time elapsed. For most Survey-In setups, the survey will complete in around 60 seconds.</p> <p>In Fixed Base mode the GNSS receiver will go into Base mode with the defined coordinates and immediately begin outputting RTCM correction data.</p>"},{"location":"menu_base/#ntrip-server","title":"NTRIP Server","text":"<p>NTRIP is where the real fun begins. The Base needs a method for getting the correction data to the Rover. This can be done using radios but that's limited to a few kilometers at best. If you've got WiFi reception, use the internet!</p> <p>Enabling NTRIP will present a handful of new options seen below:</p> <p></p> <p>Settings for the NTRIP Servers</p> <p>This is a powerful feature of the RTK line of products. The RTK device can be configured to transmit its RTCM directly over WiFi to up to 4 Casters. This eliminates the need for a radio link between one Base and one Rover. Providing more than one caster is a unique RTK Everywhere feature that allows a single base installation to push corrections to a public Caster (such as RTK2Go) as well as payment-generating casters (such as Onocoy or Geodnet).</p> <p>Once the NTRIP server is enabled you will need a handful of credentials:</p> <ul> <li>Local WiFi SSID and password</li> <li>A casting service such as RTK2Go or Emlid (the port is almost always 2101)</li> <li>A mount point (required) and password (required)</li> </ul> <p>If the NTRIP server is enabled the device will first attempt to connect to WiFi. Once WiFi connects the device will attempt to connect to the NTRIP mount point. Once connected, every second a few hundred bytes, up to ~2k, will be transmitted to your mount point.</p> <p>The RTK device will monitor each NTRIP Server connection and automatically attempt to restart it if WiFi or if the Caster is disconnected.</p>"},{"location":"menu_base/#commonly-use-coordinates","title":"Commonly Use Coordinates","text":"<p>A list of common coordinates</p> <p>For users who return to the same base position or monument, the coordinates can be saved to a 'Commonly Used Coordinates' list. A nickname and the X/Y/Z positions are saved to the list. Any record on the list can be loaded from the list into the X/Y/Z fields allowing quick switching without the need to hand record or re-enter coordinates from day-to-day repositioning of the base.</p>"},{"location":"menu_base/#rtcm-message-rates","title":"RTCM Message Rates","text":"<p>When the device is in Base mode, the fix rate is set to 1Hz. This will override any Rover setting.</p> <p></p> <p>Additionally, RTCM messages are generated at a rate of 1Hz. If lower RTCM rates are desired the RTCM Rates menu can be used to modify the rates of any supported RTCM message. This can be helpful when using longer-range radios that have lower bandwidth.</p>"},{"location":"menu_base/#supported-latlong-coordinate-formats","title":"Supported Lat/Long Coordinate Formats","text":"<p>When entering coordinates for a fixed Base in Geodetic format, the following formats are supported:</p> <ul> <li>DD.ddddddddd (ie -105.184774720, 40.090335429)</li> <li>DDMM.mmmmmmm (ie -10511.0864832)</li> <li>DD MM.mmmmmmm (ie 40 05.42013)</li> <li>DD-MM.mmmmmmm (40-05.42013)</li> <li>DDMMSS.ssssss (-1051105.188992)</li> <li>DD MM SS.ssssss (-105 11 05.188992)</li> <li>DD-MM-SS.ssssss (40-05-25.2075)</li> </ul> <p></p> <p>Coordinates shown in DD MM SS.ssssss format</p> <p>These coordinate formats are automatically detected and converted as needed. The coordinates are displayed in the format they are entered. If a different format is desired, the coordinate display format can be changed via the serial Base menu.</p> <p>For more information about coordinate formats, check out this online converter.</p>"},{"location":"menu_base/#assisted-base","title":"Assisted Base","text":"<p>An Assisted Base is where a temporary base is set up to Survey-In its location but is simultaneously provided RTCM corrections so that its Survey-In is done with very precise readings. An assisted base running a Survey-In removes much of the relative inaccuracies from a Rover-Base system. We've found an Assisted Base varies as little as 50mm RMS between intra-day tests, with accuracy within 65mm of a PPP of the same location, same day.</p> <p>To set up an assisted base the RTK device should be located in a good reception area and provided with RTCM corrections. Let it obtain RTK Fix from a fixed position (on a tripod, for example) in Rover mode. Once an RTK fix is achieved, change the device to temporary Base mode (also called Survey-In). The device will take 60 seconds of positional readings, at which point the fixed position of the base will be set using RTK augmented coordinates. At this point, corrections provided to the base can be discontinued. The Base will begin outputting very accurate RTCM corrections that can be relayed to a rover that is in a less optimal reception setting.</p> <p>Similarly, the RTK Facet L-Band can be set up as a relay: the L-Band device can be located in a good reception area, and then transmit very accurate corrections to a rover via Radio or internet link. Because the RTK Facet L-Band can generate its own corrections, you do not need to provide them during Survey-In. To set up an assisted base, set up an RTK Facet L-Band unit with a clear view of the sky, and let it obtain RTK Fix from a fixed position in Rover mode. Once an RTK fix is achieved, change the device to temporary Base mode. The device will take 60 seconds of positional readings, at which point the fixed position will be set using RTK fixed coordinates. The RTK Facet L-Band will then output very accurate RTCM corrections that can be relayed to a rover that is in a less optimal reception setting.</p>"},{"location":"menu_corrections_priorities/","title":"Corrections Priorities","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>RTK Corrections Priorities Menu</p> <p>To achieve an RTK Fix, SparkFun RTK products must be provided with a correction source. An RTK device can obtain corrections from a variety of sources. Below is the list of possible sources (not all platforms support all sources) and their default priorities. These defaults generally follow the rule that a shorter baseline between Rover and Base leads to more accurate, and therefore more valuable, correction data:</p> <ul> <li>External Radio (100m OSR Baseline) - Two packet radios communicating directly between a Rover and Base</li> <li>ESP-Now (100m OSR Baseline) - Two RTK devices communicating directly between a Rover and Base over the built-in 2.4GHz radios</li> <li>LoRa Radio (1km OSR Baseline) - Two RTK devices communicating directly between a Rover and Base over the built-in LoRa radios (RTK Torch only)</li> <li>Bluetooth (10+km OSR/SSR Baseline) - A Rover obtaining corrections over Bluetooth to a phone/tablet that has an NTRIP Client</li> <li>USB (10+km OSR/SSR Baseline) - A Rover obtaining corrections over USB to a phone/tablet that has an NTRIP Client</li> <li>TCP (NTRIP) (10+km OSR/SSR Baseline) - A Rover obtaining corrections over WiFi to a NTRIP Caster</li> <li>L-Band (100km SSR Baseline) - A Rover obtaining corrections from a geosynchronous satellite</li> <li>IP (PointPerfect/MQTT) (100+km SSR Baseline) - A Rover obtaining corrections from an SSR type correction service over WiFi or cellular</li> </ul> <p>The Corrections Priorities menu allows a user to specify which correction source should be given priority. For example, if corrections are provided through ESP-NOW and IP PointPerfect simultaneously, the corrections from IP PointPerfect will be discarded because the ESP-NOW source has a higher priority. This prevents the RTK engine from receiving potentially mixed correction signals.</p> <p></p> <p>In the serial terminal menu, pressing a letter will increase or decrease the position of a priority. For example, in the image above, pressing G will raise the <code>L-Band</code> priority above <code>TCP (NTRIP)</code>.</p> <p>Additionally, this menu gives visibility into which corrections are currently being received and utilized (marked with the *) by the RTK engine.</p> <p>The Correction source lifetime in seconds setting dictates how many seconds an active source must be silent before it is marked as inactive.</p> <p>In the web config page:</p> <ul> <li>Clicking a source increases its priority</li> <li>Clicking the highest priority source makes it the lowest priority</li> <li>Clicking 'Reset to Defaults' will restore the priorities to their default setting</li> <li>Click 'Save Configuration', then 'Exit and Reset' to save the changes</li> </ul> <p></p> <p>Please see Correction Sources for a description of where to obtain corrections.</p>"},{"location":"menu_data_logging/","title":"Data Logging Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Note</p> <p>Not all devices support external SD (ie, RTK Torch). This section applies only to devices that support an external SD card, and have one inserted.</p> <p></p> <p>RTK Data Logging Configuration Menu</p> <p>From the Main Menu, pressing 5 will enter the Logging Menu. This menu will report the status of the microSD card. While you can enable logging, you cannot begin logging until a microSD card is inserted. Any FAT16 or FAT32 formatted microSD card up to 128GB will work. We regularly use the SparkX brand 1GB cards but note that these log files can get very large (&gt;500MB) so plan accordingly.</p> <ul> <li>Option 1 will enable/disable logging. If logging is enabled, all messages from the ZED-F9P will be recorded to microSD. A log file is created at power on with the format SFE_[DeviceName]_YYMMDD_HHMMSS.txt based on current GPS data/time. The <code>[DeviceName]</code> is 'EVK', etc.</li> <li>Option 2 allows a user to set the max logging time. This is convenient to determine the location of a fixed antenna or a receiver on a repeatable landmark. Set the RTK Facet to log RAWX data for 10 hours, convert to RINEX, run through an observation processing station and you\u2019ll get the corrected position with &lt;10mm accuracy. Please see the How to Build a DIY GNSS Reference Station tutorial for more information.</li> <li>Option 3 allows a user to set the max logging length in minutes. Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached.</li> <li>Option 4 will close the current log and start a new log.</li> <li>Option 5 will record the coordinates of the base antenna to a custom NMEA message within the log if the RTCM1005 or RTCM1006 message is received. This can be helpful when doing field work and the location of the base is needed; the log on the roving device will contain the location of the base preventing the user from needing to record the base location separately. The ARP is logged in a custom GNTXT,01,01,10 message as ECEF-X, ECEF-Y, ECEF-Z, Antenna Height. The Antenna Height will be zero if the data was extracted from RTCM1005.</li> <li>Option 7 will enable/disable creating a comma-separated file (Marks_date.csv) that is written each time the mark state is selected with the setup button on the RTK Surveyor, RTK Express or RTK Express Plus, or the power button on the RTK Facet.</li> <li>Option 8 will enable/disable the resetting of the system if an SD card is detected but fails to initialize. This can be helpful to harden a system that may be deployed for long periods of time. Without intervention, if an SD card is detected but fails to respond, the system will reset in an attempt to re-mount the faulty SD card interface.</li> </ul> <p>Note</p> <p>If you want to log RAWX sentences to create RINEX files useful for post-processing the position of the receiver please see the GNSS Configuration Menu. For more information on how to use a RAWX GNSS log to get a higher accuracy base location please see the How to Build a DIY GNSS Reference Station tutorial.</p>"},{"location":"menu_debug_hardware/","title":"Debug Hardware Menu","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>TODO</p>"},{"location":"menu_debug_network/","title":"Debug Network Menu","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>TODO</p>"},{"location":"menu_debug_periodic_print/","title":"Configure Periodic Print Menu","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>TODO</p>"},{"location":"menu_debug_rtk_operation/","title":"Configure RTK Operation Menu","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>TODO</p>"},{"location":"menu_debug_software/","title":"Debug Software Menu","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>TODO</p>"},{"location":"menu_ethernet/","title":"Ethernet Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>An Ethernet-equipped RTK device sends and receives NTRIP correction data via Ethernet. It can also send NMEA and RTCM navigation messages to an external TCP Server via Ethernet. It also has a dedicated Configure-Via-Ethernet (Cfg Eth) mode which is accessed via the MODE button and OLED display.</p> <p>By default, the RTK device will use DHCP to request an IP Address from the network Gateway. But you can optionally configure it with a fixed IP Address.</p> <p>When enabled, the \"Ethernet / WiFi Failover\" option allows the firmware to automatically switch from Ethernet to WiFi should Ethernet become unavailable. Should WiFi become unavailable, the firmware will reconnect to Ethernet if it is now available.</p> <p></p> <p>The RTK EVK Ethernet menu - with DHCP selected</p> <p></p> <p>The RTK EVK Ethernet menu - with a fixed IP address selected</p> <p></p> <p>The RTK EVK Web Config page - Ethernet configuration with fixed IP address</p>"},{"location":"menu_firmware/","title":"Firmware Update Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Firmware Update menu</p> <p></p> <p>The RTK EVK Web Config page - firmware update</p> <p>From time to time SparkFun will release new firmware for the RTK product line to add and improve functionality. For most users, firmware can be upgraded over WiFi using the OTA method. For RTK EVU users, updates via Ethernet are also possible.</p> <p>The Firmware Update menu allows users to check for and install updates. Turning on Automatic firmware updates will cause the device to periodically check and install updates when they become available. This can be helpful for remote stations that cannot have manual interventions.</p> <p>For more details, see Update Firmware</p>"},{"location":"menu_gnss/","title":"GNSS Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>The SparkFun RTK product line is immensely configurable. The RTK device will, by default, put the GNSS receiver into the most common configuration for rover/base RTK for use with SW Maps and other GIS applications.</p> <p>The GNSS Configuration menu allows a user to change the report rate, dynamic model, and select which constellations should be used for fix calculations.</p> <p></p> <p>RTK Everywhere main menu</p> <p>Pressing any key will show the Main Menu. From the main menu, pressing 1 will bring up the GNSS Receiver configuration menu.</p> <p></p> <p>GNSS menu showing measurement rates and dynamic model</p>"},{"location":"menu_gnss/#measurement-frequency","title":"Measurement Frequency","text":"<p>Measurement Frequency can be set by either Hz or by seconds between measurements. Some users need many measurements per second; RTK devices support up to 20Hz with RTK enabled. Some users are doing very long static surveys that require many seconds between measurements; the GNSS receiver supports up to 65 seconds between readings.</p> <p>Note</p> <p>When in Base mode, the measurement frequency is set to 1Hz. This is because RTK transmission does not benefit from faster updates, nor does logging of RAWX for PPP.</p>"},{"location":"menu_gnss/#dynamic-model","title":"Dynamic Model","text":"<p>The Dynamic Model can be changed but it is recommended to leave it as Survey. For more information, please see the list of reference documents for your platform.</p>"},{"location":"menu_gnss/#min-sv-elevation-and-cn0","title":"Min SV Elevation and C/N0","text":"<p>GNSS menu showing Minimum SV Elevation and C/N0</p> <p>A minimum elevation is set in degrees. If a satellite is detected that is below this elevation, it will be excluded from any GNSS position calculation.</p> <p>A minimum C/N0 is set in dB. If a satellite is detected that is below this signal strength, it will be excluded from any GNSS position calculation.</p>"},{"location":"menu_gnss/#constellations-menu","title":"Constellations Menu","text":"<p>Enable or disable the constellations used for fixes</p> <p>The GNSS receiver is capable of tracking multiple channels across four constellations, each producing their own GNSS signals (ie, L1C/A, L1C, L2P, L2C, L5, E1, E5a, E5b, E6, B1I, B2I, B3I, B1C, B2a, B2b, etc). The supported constellations include GPS (USA), Galileo (EU), BeiDou (China), and GLONASS (Russia). SBAS (satellite-based augmentation system) is also supported. By default, all constellations are used. Some users may want to study, log, or monitor a subset. Disabling a constellation will cause the GNSS receiver to ignore those signals when calculating a location fix.</p>"},{"location":"menu_gnss/#galileo-e6-corrections","title":"Galileo E6 Corrections","text":"<p>If supported by hardware, Galileo E6 corrections are enabled by default to support High Accuracy Service. They can be disabled if desired. For detailed information see High Accuracy Service corrections.</p>"},{"location":"menu_gnss/#ntrip-client","title":"NTRIP Client","text":"<p>NTRIP Client enabled showing settings</p> <p>The SparkFun RTK Everywhere devices can obtain their correction data over a few different methods.</p> <ul> <li>Bluetooth - This is the most common. An app running on a tablet or phone has an NTRIP client built into it. Once the phone is connected over Bluetooth SPP, the RTCM is pushed from the phone to the RTK device. No NTRIP Client needs to be setup on the RTK device.</li> <li>WiFi - The rover uses WiFi to be an NTRIP Client and connect to an NTRIP Caster. WiFi and Bluetooth can run simultaneously. This is helpful in situations where a GIS software does not have an NTRIP Client; a cellular hotspot can be used to provide WiFi to the RTK device setup to use NTRIP Client an obtain RTK Fix, while Bluetooth is used to connect to the GIS software for data mapping and collection.</li> </ul> <p>Once the NTRIP Client is enabled you will need a handful of credentials:</p> <ul> <li>Local WiFi SSID and password (WPA2)</li> <li>A casting service and port such as RTK2Go or Emlid (the port is almost always 2101)</li> <li>A mount point (required) and password (optional)</li> </ul> <p>With these credentials set, the RTK device will attempt to connect to WiFi, then connect to your caster of choice, and then begin downloading the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be downloaded from the mount point you've entered. Remember, the rover must be in WiFi range to connect in this mode.</p> <p>Once the device connects to WiFi, it will attempt to connect to the user's chosen NTRIP Caster. If WiFi or the NTRIP connection fails, the rover will return to normal operation.</p>"},{"location":"menu_gnss/#multipath-mitigation","title":"Multipath Mitigation","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>Menu for controlling Multipath Mitigation</p> <p>On devices that support it, Multipath Mitigation can be enabled (default) or disabled. Multipath Mitigation allows the GNSS receiver to filter signals more rigorously, which aids accuracy in urban or high multipath environments, but may increase processing times in an open environment.</p>"},{"location":"menu_messages/","title":"Messages Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>The messages configuration menu</p> <p>From this menu, a user can control the output of various NMEA, RTCM, and other messages. Any enabled message will be broadcast over Bluetooth and recorded to SD (if available).</p> <p>Because of the large number of configurations possible, we provide a few common settings:</p> <ul> <li>Reset to Defaults</li> </ul> <p>RTCM can also be enabled in both Rover and Base modes.</p>"},{"location":"menu_messages/#reset-to-defaults","title":"Reset to Defaults","text":"<p>This will turn off all messages and enable the following messages:</p> <ul> <li>NMEA-GGA, NMEA-GSA, NMEA-GST, NMEA-GSV, NMEA-RMC</li> </ul> <p>These five NMEA sentences are commonly used with SW Maps for general surveying.</p>"},{"location":"menu_messages/#individual-messages","title":"Individual Messages","text":"<p>Configuring the NMEA messages</p> <p>There are a large number of messages supported (listed below). Each message sub-menu will present the user with the ability to set the message report rate.</p> <p>Each message rate input controls which messages are disabled (0) and how often the message is reported (1 = one message reported per 1 fix, 5 = one report every 5 fixes). The message rate range is 0 to 20.</p> <p>Note</p> <p>The message report rate is the number of fixes between message reports. In the image above, with GSV set to 4, the NMEA GSV message will be produced once every 4 fixes. Because the device defaults to a 4Hz fix rate, the GSV message will appear once per second.</p> <p>The following messages are supported for Bluetooth output and logging (if available):</p> <ul> <li>NMEA-DTM</li> <li>NMEA-GBS</li> <li>NMEA-GGA</li> <li>NMEA-GLL</li> <li>NMEA-GNS</li> <li>NMEA-GRS</li> <li>NMEA-GSA</li> <li>NMEA-GST</li> <li>NMEA-GSV</li> <li>NMEA-RMC</li> <li>NMEA-ROT</li> <li>NMEA-THS</li> <li>NMEA-VTG</li> <li>NMEA-ZDA</li> </ul> <ul> <li>RTCM3x-1001</li> <li>RTCM3x-1002</li> <li>RTCM3x-1003</li> <li>RTCM3x-1004</li> <li>RTCM3x-1005</li> <li>RTCM3x-1006</li> <li>RTCM3x-1007</li> <li>RTCM3x-1009</li> <li>RTCM3x-1010</li> <li>RTCM3x-1011</li> <li>RTCM3x-1012</li> <li>RTCM3x-1013</li> <li>RTCM3x-1019</li> <li>RTCM3x-1020</li> <li>RTCM3x-1033</li> <li>RTCM3x-1042</li> <li>RTCM3x-1044</li> <li>RTCM3x-1045</li> <li>RTCM3x-1046</li> </ul> <ul> <li>RTCM3x-1071</li> <li>RTCM3x-1072</li> <li>RTCM3x-1073</li> <li>RTCM3x-1074</li> <li>RTCM3x-1075</li> <li>RTCM3x-1076</li> <li>RTCM3x-1077</li> <li>RTCM3x-1081</li> <li>RTCM3x-1082</li> <li>RTCM3x-1083</li> <li>RTCM3x-1084</li> <li>RTCM3x-1085</li> <li>RTCM3x-1086</li> <li>RTCM3x-1087</li> <li>RTCM3x-1091</li> <li>RTCM3x-1092</li> <li>RTCM3x-1093</li> <li>RTCM3x-1094</li> </ul> <ul> <li>RTCM3x-1095</li> <li>RTCM3x-1096</li> <li>RTCM3x-1097</li> <li>RTCM3x-1104</li> <li>RTCM3x-1111</li> <li>RTCM3x-1112</li> <li>RTCM3x-1113</li> <li>RTCM3x-1114</li> <li>RTCM3x-1115</li> <li>RTCM3x-1116</li> <li>RTCM3x-1117</li> <li>RTCM3x-1121</li> <li>RTCM3x-1122</li> <li>RTCM3x-1123</li> <li>RTCM3x-1124</li> <li>RTCM3x-1125</li> <li>RTCM3x-1126</li> <li>RTCM3x-1127</li> </ul>"},{"location":"menu_ntp/","title":"Network Time Protocol Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Ethernet-equipped RTK devices can act as an Ethernet Network Time Protocol (NTP) server.</p> <p>Network Time Protocol has been around since 1985. It is a simple way for computers to synchronize their clocks with each other, allowing the network latency (delay) to be subtracted:</p> <ul> <li>A client sends an NTP request (packet) to the chosen or designated server<ul> <li>The request contains the client's current clock time - for identification</li> </ul> </li> <li>The server logs the time the client's request arrived and then sends a reply containing:<ul> <li>The client's clock time - for identification</li> <li>The server's clock time - when the request arrived at the server</li> <li>The server's clock time - when the reply is sent</li> <li>The time the server's clock was last synchronized - providing the age of the synchronization</li> </ul> </li> <li>The client logs the time the reply is received - using its own clock</li> </ul> <p>When the client receives the reply, it can deduce the total round-trip delay which is the sum of:</p> <ul> <li>How long the request took to reach the server</li> <li>How long the server took to construct the reply</li> <li>How long the reply took to reach the client</li> </ul> <p>This exchange is repeated typically five times, before the client synchronizes its clock to the server's clock, subtracting the latency (delay) introduced by the network.</p> <p>Having your own NTP server on your network allows tighter clock synchronization as the network latency is minimized.</p> <p>Ethernet-equipped RTK devices can be placed into dedicated NTP mode, by clicking the MODE button until NTP is highlighted in the display and double-clicking there.</p> <p></p> <p>Selecting NTP mode</p> <p>An Ethernet-equipped RTK device will first synchronize its Real Time Clock (RTC) using the very accurate time provided by the u-blox GNSS module. The module's Time Pulse (Pulse-Per-Second) signal is connected to the ESP32 as an interrupt. The ESP32's RTC is synchronized to Universal Time Coordinate (UTC) on the rising edge of the TP signal using the time contained in the UBX-TIM-TP message.</p> <p>When an Ethernet-equipped RTK device is in Network Time Protocol (NTP) mode, the display also shows a clock symbol - as shown above. The value next to the clock symbol is the Time Accuracy Estimate (tAcc) from the UBX-NAV-PVT message.</p> <p>Note</p> <p>tAcc is the time accuracy estimate for the navigation position solution. The timing accuracy of the TP pulse is significantly better than this. We show the tAcc as we believe it is more meaningful than the TIM-TP time pulse quantization error (qErr) - which is generally zero.</p> <p>The RTK device will respond to each NTP request within a few 10s of milliseconds.</p> <p>If desired, you can log all NTP requests to a file on the microSD card, and/or print them as diagnostic messages. The log and messages contain the NTP timing information and the IP Address and port of the Client.</p> <p> <p>System Debug Menu - NTP Diagnostics (Click for a closer look)</p> <p> <p>Logging Menu - Log NTP Requests</p>"},{"location":"menu_ntp/#logged-ntp-requests","title":"Logged NTP Requests","text":"<p>NTP uses its own epoch - midnight January 1st, 1900. This is different than the standard Unix epoch - midnight January 1st, 1970 - and the GPS epoch - midnight January 6th, 1980. The times shown in the log and diagnostic messages use the NTP epoch. You can use online calculators to convert between the different epochs:</p> <ul> <li>https://weirdo.cloud/</li> <li>https://www.unixtimestamp.com/</li> <li>https://www.labsat.co.uk/index.php/en/gps-time-calculator</li> </ul>"},{"location":"menu_ntp/#ntp-on-windows","title":"NTP on Windows","text":"<p>If you want to synchronize your Windows PC to a RTK device running as an NTP Server, here's how to do it:</p> <ul> <li> <p>Install Meinberg NTP - this replaces the Windows built-in Time Service</p> <p> </p> </li> <li> <p>During the installation, select \"Create an initial configuration file\" and select the NTP Pool server for your location</p> </li> <li> <p>Select \"Use fast initial sync mode\" for faster first synchronization</p> <p> </p> </li> <li> <p>The next step is to edit the NTP Configuration File</p> <ul> <li>Editing the file requires Administrator privileges</li> <li> <p>Open the Start menu, navigate to Meinberg, right-click on Edit NTP Configuration and select Run as administrator</p> <p> <li> <p>Comment the lines in ntp.conf which name the pool.ntp servers</p> </li> <li>Add an extra server line and include the IP Address for your RTK device. It helps to give your RTK device a fixed IP Address first - see Menu Ethernet</li> <li> <p>Save the file</p> <p> <li> <p>Finally, restart the NTP Service</p> <ul> <li>Again this needs to be performed with Administrator privileges</li> <li> <p>Open the Start menu, navigate to Meinberg, right-click on Restart NTP Service and select Open file loctaion</p> <p> <li> <p>Right-click on the Restart NTP Service and select Run as administrator</p> <p> </p> </li> <li> <p>You can check if your PC clock synchronized successfully by opening a Command Prompt (cmd) and running ntpq -pd</p> <p> </p> </li> <p>If enabled, your Windows PC NTP requests will be printed and logged by the RTK device. See above.</p>"},{"location":"menu_pointperfect/","title":"PointPerfect Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Configuring PointPerfect settings over serial</p> <p></p> <p>PointPerfect Configuration Menu</p>"},{"location":"menu_pointperfect/#coverage","title":"Coverage","text":"<p> <p>PointPerfect Coverage map including L-Band and IP delivery methods</p> <p>SparkFun RTK devices are equipped to get corrections from a service called PointPerfect.</p> <p>PointPerfect has the following benefits and challenges:</p> <ul> <li>Most SparkFun RTK devices come with either a pre-paid subscription or one month of free access to PointPerfect. Please see the product details for your device. Go here for RTK Torch to enable or renew your subscription. Go here for RTK EVK subscriptions.</li> <li> <p>A SparkFun RTK device can obtain RTK Fix anywhere there is coverage. This includes the US contiguous 48 states, the EU, Korea, as well as parts of Australia, Brazil, and Canada.</p> <p>Note</p> <p>L-Band coverage is not available in some of these areas.</p> </li> <li> <p>You don't need to be near a base station - the PPP-RTK model covers entire continents.</p> </li> <li>Because PointPerfect uses a model instead of a dedicated base station, it is cheaper. However, the RTK Fix is not as accurate (3-6cm) as compared to getting corrections from a dedicated base station (2cm or better but depends on the baseline distance).</li> <li>Because PointPerfect uses a model instead of a dedicated base station, convergence times (the time to get to RTK Fix) can vary widely. Expect to wait multiple minutes for an RTK Fix, as opposed to corrections from a dedicated that can provide an RTK Fix in seconds.</li> </ul> <p>PointPerfect corrections are obtained by two methods:</p> <ul> <li>L-Band: Corrections are transmitted from a geosynchronous satellite. Coverage areas are limited to the US contiguous 48 states and the EU. This delivery method requires special equipment (see the RTK EVK for more information). No cellular or internet connection is required.</li> <li>IP: Corrections are transmitted over the internet. The RTK device will need access to a WiFi or Ethernet network. For WiFi, this is most commonly a hotspot on a cell phone so this delivery method is generally confined to areas with cellular and/or other WiFi coverage.</li> </ul> <p>Note</p> <p>It is important that you set your Geographic Region correctly, via the menu or web config page, as this determines both the IP correction distribution topic and the L-Band frequency (on L-Band-capable products).</p>"},{"location":"menu_pointperfect/#localized-corrections","title":"Localized Corrections","text":"<p>The u-blox PointPerfect Localized correction service via MQTT (IP) offers quick delivery of high precision accuracy by providing your device only the SPARTN corrections applicable to your location. This feature offers several advantages over the traditional continental streams, including significantly reduced bandwidth requirements and seamless transition between regions.</p> <ul> <li>Reduced bandwidth requirements: PointPerfect Localized can reduce bandwidth requirements by up to 80%. This is a significant advantage for applications sensitive to bandwidth constraints, such as those that operate in remote areas or use low-power devices.</li> <li>Retained Privacy: PointPerfect Localized retains user privacy by not sending the device's precise location to the service to receive correction data. This is done by using a general node-based location system.</li> </ul> <p>PointPerfect Localized works by dividing the coverage area into a grid of tiles. Each tile contains a set of nodes that are relevant to a user located within that tile. Unlike the continental level approach where a device subscribes to the continental level topic, in the localized approach a device subscribes to the localized node topic based on its location. This ensures that the device receives only the correction data that is relevant to its location, greatly reducing the required bandwidth.</p> <p></p> <p>Comparison of PointPerfect Localized node density</p> <p>The above image shows the Localized tiles for Level 2 (250 x 250km sparse, ~90-100km separation) vs. Level 5 (250 x 250km high density, ~30km separation).</p> <p>Localized distribution can be enabled via the serial menu (PointPerfect menu - option 'p'), or the web config page. On serial, option '4' will enable or disable localized distribution; option '5' selects the tile level.</p> <p></p> <p>Configuring PointPerfect settings over serial</p>"},{"location":"menu_pointperfect/#registration","title":"Registration","text":"<p>Three stickers showing Device ID and QR code to registration page</p> <p>All SparkFun RTK products must be registered before they are allowed on the PointPerfect network. To facilitate this, most products ship with a printed Device ID sticker and registration QR code included with the product. The QR code will prefill the registration page with the device's unique ID. If you do not have these materials, don't worry!</p> <ul> <li>RTK EVK: please visit the RTK EVK registration page and obtain your device ID through the software interface.</li> <li>RTK Postcard: please visit the RTK Postcard registration page and obtain your device ID through the software interface.</li> <li>RTK Torch: please visit the RTK Torch registration page and obtain your device ID through the software interface.</li> </ul>"},{"location":"menu_pointperfect/#keys","title":"Keys","text":"<p>To gain access to the PointPerfect system, the device must be given WiFi. Once provided, the RTK device will automatically obtain keys. These keys allow the decryption of corrections.</p> <p>PointPerfect keys are valid for a maximum of 56 days. During that time, the RTK device can operate normally without the need to update keys. However, when the keys are set to expire in 28 days or less, the RTK device will attempt to log in to WiFi at each power on. If WiFi is not available, it will continue normal operation.</p> <p>On RTK L-Band equipped devices, if the keys fully expire, the device will continue to receive the L-Band signal but will be unable to decrypt the signal. The RTK EVK will continue to have extraordinary accuracy (we've seen better than 0.15m HPA) but not the centimeter-level accuracy that comes with RTK.</p> <p>Note</p> <p>All RTK devices (including those equipped with L-Band) are capable of receiving RTCM corrections over traditional means including NTRIP data over Bluetooth or a serial radio, WiFi or Ethernet (depending on model).</p> <p></p> <p>Display showing 14 days until keys expire</p> <p>On devices that have a display, the unit will display various prompts to aid the user in obtaining keys as needed.</p>"},{"location":"menu_pointperfect/#pointperfect-serial-menu","title":"PointPerfect Serial Menu","text":"<p>PointPerfect Menu</p> <p>The Days until keys expire inform the user how many days the unit has until it needs to connect to WiFi or Ethernet to obtain new keys.</p> <ul> <li>1 - Enable / disable the use of PointPerfect corrections.</li> <li>2 - Enable / disable the automatic attempts at WiFi / Ethernet connections when key expiry is in less than 28 days.</li> <li>3 - Trigger an immediate attempt to connect over WiFi / Ethernet and provision the device (if no keys are available) or update the keys (if provisioning has already been completed). Depending on which RTK product you have and which interfaces are connected, it may be necessary to exit the menus for the provisioning / update to take place.</li> <li>4 - Enable / disable localized distribution</li> <li>5 - When localized distribution is enabled, option 5 can be used to select the tile level. The default is Level 5 - 250 x 250km tiles, high density.</li> <li>c - Clear the current keys.</li> <li>i - Display the Device ID. This is needed when a SparkFun RTK device needs to be added to the PointPerfect system. This is needed when first registering the device, or modifying a subscription. Go here for RTK Torch to enable or renew your subscription. Go here for RTK EVK subscriptions.</li> <li>k - Bring up the Manual Key Entry menu.</li> <li>g - Set the Geographic Region. The default is US; but EU, Australia, Korea and Japan can also be selected. This is an important setting since it sets both the IP correction distribution topic (MQTT, IP) and the L-Band frequency (on L-Band-capable models (RTK EVK)).</li> </ul>"},{"location":"menu_pointperfect/#obtaining-the-device-id","title":"Obtaining the Device ID","text":"<p>The device ID is unique to each RTK device and must be entered by SparkFun into the PointPerfect network.</p> <p></p> <p>Device ID within the serial menu</p> <p></p> <p>Device ID within the WiFi Config page</p> <p>This ID can be obtained by using option i from the PointPerfect menu or by opening the PointPerfect section within the WiFi Config interface in the PointPerfect Configuration section.</p>"},{"location":"menu_pointperfect/#manual-key-entry","title":"Manual Key Entry","text":"<p>Manual Key Entry Menu</p> <p>Because of the length and complexity of the keys, we do not recommend you manually enter them. This menu is most helpful for displaying the current keys.</p> <p>Option '1' will allow a user to enter their Device Profile Token. This is the token that is used to provision a device on a PointPerfect account. By default, users may use the SparkFun token but must pay SparkFun for the annual service fee. If an organization would like to administer its own devices, the token can be changed here.</p>"},{"location":"menu_pointperfect/#l-band-decryption-icon","title":"L-Band Decryption Icon","text":"<p>Three-pronged satellite dish indicating L-Band reception</p> <p></p> <p>Three-pronged satellite dish indicating L-Band reception on EVK</p> <p>On devices that have a display, upon successful reception and decryption of PointPerfect corrections delivered over L-Band, the satellite dish icon will increase to a three-pronged icon. As the unit's fix increases the cross-hair will indicate a basic 3D solution, a double blinking cross-hair will indicate a floating RTK solution, and a solid double cross-hair will indicate a fixed RTK solution.</p>"},{"location":"menu_pointperfect/#error-messages","title":"Error Messages","text":"<p>There are various messages that may be reported by the device. Here is a list of explanations and resolutions.</p>"},{"location":"menu_pointperfect/#no-ssids","title":"No SSIDs","text":"<pre><code>Error: Please enter at least one SSID before getting keys\n</code></pre> <p>This message is seen when no WiFi network credentials (SSID and password) have been entered. The device needs WiFi to obtain the keys to decrypt the packets provided by PointPerfect. Enter your home/office/cellular hotspot WiFi SSID and password and try again.</p>"},{"location":"menu_pointperfect/#not-whitelisted","title":"Not Whitelisted","text":"<pre><code>This device is not whitelisted. Please contact support@sparkfun.com to get your subscription activated. Please reference device ID: [device ID]\n</code></pre> <p>This message is seen whenever the PointPerfect service is not aware of the given device. Please use the subscription form or contact support@sparkfun.com with your device ID (see Obtaining the Device ID above). Go here for RTK Torch subscriptions. Go here for RTK EVK subscriptions.</p>"},{"location":"menu_pointperfect/#device-deactivated","title":"Device Deactivated","text":"<pre><code>This device has been deactivated. Please contact support@sparkfun.com to renew the PointPerfect subscription. Please reference device ID: [device ID]\n</code></pre> <p>This message is seen whenever the device's subscription has lapsed. Go here for RTK Torch subscriptions. Go here for RTK EVK subscriptions. Alternatively contact support@sparkfun.com with your device ID (see Obtaining the Device ID above).</p>"},{"location":"menu_pointperfect/#http-response-error-11-read-timeout","title":"HTTP response error -11 - Read Timeout","text":"<p>The connection to PointPerfect did not respond. Please try again or try a different WiFi network or access point (AP).</p>"},{"location":"menu_ports/","title":"Ports Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Setting the baud rates of the two available external ports</p> <p></p> <p>Baud rate configuration of Radio and Data ports</p>"},{"location":"menu_ports/#output-gnss-data-over-usb","title":"Output GNSS Data over USB","text":"<p>Set output to GNSS data over USB Serial</p> <p>Enabling Output GNSS data to USB serial will pipe all GNSS output (generally NMEA but also RTCM) to the USB serial connection. This permits a wired connection to be made on devices, such as the RTK Torch, that have only one external port (USB).</p> <p>Note</p> <p>To exit this mode, press +++ to open the configuration menu.</p> <p>Additionally, correction may be sent to the device over USB. RTCM corrections received over USB will follow the Corrections Priority table.</p> <p></p> <p>Example NMEA output over USB</p>"},{"location":"menu_ports/#radio-port","title":"Radio Port","text":"<p>Available on devices that have an external RADIO port.</p> <p>By default, the Radio port is set to 57600bps to match the Serial Telemetry Radios that are recommended to be used with the RTK Facet (it is a plug-and-play solution). This can be set from 4800bps to 921600bps.</p>"},{"location":"menu_ports/#mux-channel","title":"Mux Channel","text":"<p>Available on devices that have a built-in multiplexer on the DATA port.</p> <p>The Data port on the RTK Facet, Express, and Express Plus is very flexible. Internally the Data connector is connected to a digital mux allowing one of four software-selectable setups. By default, the Data port will be connected to the UART1 of the ZED-F9P and output any messages via serial.</p> <ul> <li>NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired.</li> <li>PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. This pin can be configured as an extremely accurate time base. The pulse length and time between pulses are configurable down to 1us. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the External Event Logging section below and the Timemark section of the ZED-F9P Integration Manual for more information.</li> <li>I2C - (On Express, Facet, and Facet L-Band) The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus.</li> <li>Wheel/Dir Encoder - (On Express Plus) Connect the DATA port to the wheel tick inputs on the ZED-F9R. This aids the Sensor Fusion engine for IMU based location fixes when installed in an automobile. Signals must be limited to 3.3V.</li> <li>GPIO - The TX pin operates as a DAC-capable GPIO on the ESP32. The RX pin operates as an ADC-capable input on the ESP32. This is useful for custom applications.</li> </ul>"},{"location":"menu_ports/#data-port","title":"Data Port","text":"<p>By default, the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. The 460800bps baud rate was chosen to support applications where a large number of messages are enabled and a large amount of data is sent. If you need to decrease the baud rate to 115200bps or other, be sure to monitor the MON-COMM message within u-center for buffer overruns. A baud rate of 115200bps and the NMEA+RXM default configuration at 4Hz will cause buffer overruns.</p> <p></p> <p>Monitoring the COM ports on the ZED-F9P</p> <p>If you must run the data port at lower than 460800bps, and you need to enable a large number of messages and/or increase the fix frequency beyond 4Hz, be sure to verify that UART1 usage stays below 99%. The image above shows the UART1 becoming overwhelmed because the ZED cannot transmit at 115200bps fast enough.</p> <p>Most applications do not need to plug anything into the Data port. Most users will get their NMEA position data over Bluetooth. However, this port can be useful for sending position data to an embedded microcontroller or single-board computer. The pinout is 3.3V / TX / RX / GND. 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.</p>"},{"location":"menu_ports/#pulse-per-second","title":"Pulse Per Second","text":"<p>Configuring the External Pulse and External Events over WiFi</p> <p></p> <p>Port menu showing mux data port connections</p> <p>When PPS/Event Trigger is selected, the Pulse-Per-Second output from the ZED-F9x is sent out of the TX pin of the DATA port. Once the RTK device has GNSS reception, this can be used as a very accurate time base.</p> <p>The time between pulses can be configured down to 100ns (10MHz) with an accuracy of 30ns RMS and 60ns 99%. The pulse width and polarity are also configurable.</p> <p></p> <p>For PPS, only the Black and Green wires are needed. If you need to provide 3.3V to your system, the red wire can supply up to 600mA but we do not recommend sourcing more than 300mA.</p> <ul> <li>Red - 3.3V</li> <li>Green - TX (output from the RTK device)</li> <li>Orange - RX (input into the RTK device)</li> <li>Black - GND</li> </ul> <p>Similarly, the RX pin of the DATA port can be used for event logging. See External Event Logging for more information.</p>"},{"location":"menu_radios/","title":"Radios Menu","text":"<p>Pressing 'r' from the main menu will open the Configure Radios menu. This allows a user to configure various radios that are available on a given RTK platform.</p>"},{"location":"menu_radios/#esp-now","title":"ESP-NOW","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Note</p> <p>All SparkFun RTK devices contain a radio capable of direct Rover-Base communication over 2.4GHz. The RTK Torch is currently the only RTK device with a built-in LoRa radio. </p> <p></p> <p>Radio menu showing ESP-NOW</p> <p>ESP-NOW is a 2.4GHz protocol that is built into the internal ESP32 microcontroller; the same microcontroller that provides Bluetooth and WiFi. ESP-NOW does not require WiFi or an Access Point. This is most useful for connecting a Base to Rover (or multiple Rovers) without the need for an external radio. Simply turn two SparkFun RTK products on, enable their radios, and data will be passed between units. Additionally, ESP-NOW supports point-to-multipoint transmissions. This means a Base can transmit to multiple Rovers simultaneously.</p> <p>ESP-NOW is a free radio included in every RTK product and works well, but it has a few limitations:</p> <p></p> <ol> <li>Limited range. You can expect two RTK devices to be able to communicate approximately 250m (845 ft) line of sight but any trees, buildings, or objects between the Base and Rover will degrade reception. This range is useful for many applications but may not be acceptable for some applications. We recommend using ESP-NOW as a quick, free, and easy way to get started with Base/Rover setups. If your application needs longer RF distances consider cellular NTRIP, WiFi NTRIP, or an external serial telemetry radio plugged into the RADIO port.</li> <li>ESP-NOW can co-exist with WiFi, but both the receiver and transmitter must be on the same WiFi channel.</li> </ol>"},{"location":"menu_radios/#pairing","title":"Pairing","text":"<p>For most setups, pairing is not needed. By default, any device that has ESP-NOW enabled will receive communication from any other device that has ESP-NOW enabled. This allows a Base to communicate with dozens of Rovers without further configuration, simply enable ESP-NOW and enter Base mode. However, if you are in an environment where other Base units may be setup and broadcasting using the ESP-NOW radios, then devices can be paired to each other to limit communication to only paired devices.</p> <p>Note</p> <p>A Base can be paired with multiple Rovers. This allows multipoint or multicasting of corrections to multiple Rovers.</p> <p>On devices that have a display, clicking the Mode button will display the various submenus. Double-clicking on E-Pair will put the unit into ESP-NOW pairing mode. If another RTK device is detected nearby in pairing mode, they will exchange MAC addresses and pair with each other. Multiple Rover units can be paired to a Base in the same fashion.</p> <p></p> <p>Radio configuration through WiFi</p> <p>The radio system can be configured over WiFi. The radio subsystem is disabled by default. Enabling the radio to ESP-NOW will expose the above options. The unit's radio MAC can be seen as well as a button to forget all paired radios. This button is disabled until the 'Enable Forget All Radios' checkbox is checked. If a Base device has no paired radios, it will broadcast its correction data to any listening Rover by default.</p> <p></p> <p>Radio menu showing ESP-NOW</p> <p>A serial menu is also available. This menu allows users to enter pairing mode, change the channel (ie, set of frequencies) used for communication, view the unit's current Radio MAC, the MAC addresses of any paired radios, as well as the ability to remove all paired radios from memory.</p>"},{"location":"menu_radios/#setting-the-wifi-channel","title":"Setting the WiFi Channel","text":"<p>Radio menu showing channel 11</p> <p>All devices must be on the same WiFi channel to communicate over ESP-NOW. Option 4 - Current channel shows the current channel and allows a user to select a new one. Allowable channel numbers are 1 to 14. By default, devices will communicate on Channel 1. A user may select any channel they prefer.</p> <p>Note</p> <p>ESP-NOW can operate at the same time as WiFi but the user should be aware of the channel numbers of the devices. When a device connects to a WiFi network, the ESP-NOW channel number may be altered by the WiFi radio so that the RTK device can communicate with the WiFi Access Point.</p> <p>Using a single device to communicate corrections to multiple devices (no WiFi involved) is the most common use case for ESP-NOW.</p> <p>Using WiFi on one of the devices in an ESP-NOW network is possible. Take the example of a Base that needs to communicate corrections over ESP-NOW and will also be pushing the corrections to a Caster over NTRIP using WiFi: The Base is started, WiFi is activated, and the channel is overwritten to 9 (for example) when the device connects to the Access Point. All Rovers in the area who wish to obtain corrections over ESP-NOW also need to have their channels set to 9.</p> <p>Using multiple devices on different WiFi networks, while attempting to use them in an ESP-NOW network, is likely impossible because the device's channel numbers will be modified to match the different channels of the Access Points.</p>"},{"location":"menu_radios/#lora","title":"LoRa","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>RTK Torch's combination GNSS, 2.4GHz, and 915MHz antenna</p> <p>The RTK Torch has a built-in 1W LoRa radio that allows Base to Rover communication. This radio is based on the STM32WLE5CC which contains a microcontroller and a LoRa radio. Attached to this radio is a 1W power amplifier. The radio transmits in the ISM band from 902 to 928MHz and is legal to use in North America and South America. The radio implements frequency hopping spread spectrum (FHSS) techniques as well as LoRa modulation to maximize transmission distance while switching frequencies to abide by FCC requirements. Additionally, the LoRa system supports multipoint allowing one Base to communicate with dozens of Rovers.</p> <p>Note</p> <p>RTK Torch LoRa radio uses a different frequency hopping algorithm from other radios that SparkFun sells. Therefore, RTK Torches are currently only compatible with each other and cannot be used interoperably with other LoRa or 915MHz radios.</p> <p></p> <p>1500ft (450m) range between Base and Rover using LoRa radios</p> <p>The RTK Torch has an internal planar 915MHz antenna allowing good reception in harsh environments. Above is shown a non-line-of-sight test between a Base setup on a tripod on the ground transmitting to a Rover that was able to achieve RTK Fix using corrections over the LoRa radio. This test included multiple large commercial buildings blocking or partially blocking the transmission as well as multiple trees and berms.</p> <p></p> <p>1.83 mile (2.95km) range between Base and Rover using LoRa radios</p> <p>The 1 Watt power output of the radio allows for long range transmissions when obstacles are fewer. Above is a line-of-sight test using a Base unit with line-of-sight to a near by hill-top measuring approximately (ok, with great accuracy) 1.83 miles (2.95km) away.</p>"},{"location":"menu_radios/#configuration","title":"Configuration","text":"<p>Configuring the LoRa radio</p> <p>From the radios menu, the LoRa radio can be enabled and configured.</p> <p>Don't see a LoRa menu?</p> <p>Support was added starting in version v1.4. Please upgrade the ESP32 firmware on your device. Additionally, you may need to update the firmware on the LoRa radio firmware.</p> <p>The LoRa Coordination Frequency must be the same between all Base and Rovers. The default is usually sufficient but if other RTK Torches are operating LoRa radios in the area, switching frequencies will allow multiple networks to operate simultaneously.</p> <p>The Seconds without user serial that must elapse before LoRa radio goes into dedicated listening mode is our longest user setting name to date! Because of hardware limitations, the device cannot communicate over USB at the same time it communicates with the LoRa radio. For normal Rover operation in the field where a device is usually connected over Bluetooth or other wireless protocols, LoRa operation happens seamlessly and this setting can be ignored. But if a device is connected over USB, and no serial input is received over USB for 30 seconds (default), the USB connection will be severed and LoRa communication will be prioritized. A user may want to increase this timeout if a system is communicating with the device over USB, or decrease it if a device is connected to USB (ie, for charging) and LoRa communication should initiate as quickly as possible.</p> <p>Note</p> <p>If a timeout has occurred, USB communication can be restored by unplugging and plugging the cable back in.</p>"},{"location":"menu_system/","title":"System Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>System Menu accessed over serial</p> <p>The System Menu shows a variety of system information including a full system check to verify what is and what is not online. For example, if an SD card is detected it will be shown as online. Not all RTK devices have all hardware options. For example, the RTK Torch does not have an SD slot so its status and configuration will not be shown.</p> <p>This menu is helpful when reporting technical issues or requesting support as it displays helpful information about the current GNSS firmware version, and which parts of the unit are online.</p>"},{"location":"menu_system/#wifi-interface","title":"WiFi Interface","text":"<p>Because of the nature of these controls, the WiFi Config page shows different information than the Serial configuration.</p> <p></p> <p>System Config Menu on WiFi Config Page</p>"},{"location":"menu_system/#system-information","title":"System Information","text":"<p>System Menu Header Information</p> <p>The header of the system menu contains various system metrics.</p> <p>In order of appearance:</p> <ul> <li>System Date/time</li> <li>Device Mode</li> <li>GNSS status including receiver type and firmware version</li> <li>Unique ID assigned to the GNSS receiver</li> <li>GNSS information including SIV, HPA, Lat/Lon/Alt</li> <li>Battery information (if supported)</li> <li>Bluetooth MAC (ending) and radio status</li> <li>WiFi MAC (full)</li> <li>System Uptime</li> <li>NTRIP Client/Server uptime (if enabled)</li> <li>MQTT Client uptime (if enabled)</li> <li>Parser statistics</li> </ul>"},{"location":"menu_system/#mode-switch","title":"Mode Switch","text":"<p>System Menu Options serial menu</p> <p>The device can be in Rover, Base, or WiFi Config mode. The selected mode will be entered once the user exits the menu system.</p> <ul> <li> <p>B, R, W, or S - Change the mode the device is in.</p> <ul> <li>Rover - This is the default mode. The device transmits its NMEA and other messages (if enabled) over Bluetooth. It can receive corrections over Bluetooth (or other transport methods such as NTRIP Client) to achieve RTK Fix.</li> <li>Base - The device will reconfigure for base mode. It will begin transmitting corrections over Bluetooth, WiFi (NTRIP Server, TCP, etc), or other (ESP-Now, external radio if compatible, etc).</li> <li>WiFi Config - The device will shut down GNSS operations and begin broadcasting as a WiFi Access Point (or will attempt to connect to local WiFi). Once started, the device can be connected to over WiFi for configuration.</li> <li>Shut Down - If supported, the device will immediately shut down.</li> </ul> </li> </ul>"},{"location":"menu_system/#settings","title":"Settings","text":"<p>System Menu Options serial menu</p> <ul> <li>a - On devices that support it, a beeper is used to indicate various system states (system power on/off, tilt compensation in use, etc). This can be disabled if desired.</li> <li>b - Change the Bluetooth protocol. By default, the RTK device begins dual broadcasting over Bluetooth Classic SPP (Serial Port Profile) and Bluetooth Low-Energy (BLE). The following options are available: Dual, Classic, BLE, or Off. Bluetooth v2.0 SPP (Serial Port Profile) is supported by nearly all data collectors and Android tablets. BLE is used for configuration and to be compatible with Apple iOS-based devices. Additionally, the Bluetooth radio can be turned off.</li> <li>c - On devices that support it, a device will continue to operate until the battery is exhausted. If desired, a timeout can be entered: If no charging is detected, the device will power off once this amount of time has expired.</li> <li>d - Enters the Debug Software menu that is for advanced users.</li> <li>e - Controls the printing of local characters (also known as 'echoing').</li> <li>f - On devices that support it, show any files on the microSD card (if present).</li> <li>h - Enters the Debug Hardware menu that is for advanced users.</li> <li>n - Enters the Debug Network menu that is for advanced users.</li> <li>o - Enters the Configure RTK operation menu that is for advanced users.</li> <li>p - Enters the Configure periodic print menu that is for advanced users.</li> <li>r - Reset all settings to default including a factory reset of the GNSS receiver. This can be helpful if the unit has been configured into an unknown or problematic state. See Factory Reset.</li> <li>u - Change between metric and Imperial units. This only modifies the units shown on serial status messages and on the display (if available), it does not change NMEA output.</li> <li>z - A local timezone in hours, minutes and seconds may be set by pressing 'z'. The timezone values change the RTC clock setting and the file system's timestamps for new files.</li> <li>~ - If desired, the external button(s) can be disabled to prevent accidental mode changes.</li> </ul> <p>Note</p> <p>Bluetooth SPP cannot operate concurrently with ESP-Now radio transmissions. Therefore, if you plan to use the ESP-Now radio system to connect RTK products, the BLE protocol must be used to communicate over Bluetooth to data collectors. Alternatively, ESP-Now works concurrently with WiFi so connecting to a data collector over WiFi can be used.</p>"},{"location":"menu_system/#factory-reset","title":"Factory Reset","text":"<p>If a device gets into an unknown state it can be returned to default settings using the WiFi or Serial interfaces.</p> <p>Note</p> <p>On devices that support an SD card, a factory reset can also be accomplished by editing the settings files. See Force a Factory Reset for more information.</p> <p>Note</p> <p>Log files and any other files on the SD card are not removed or modified.</p> <p></p> <p>Issuing and confirming a Factory Reset</p> <p>If a device gets into an unknown state it can be returned to default settings. Press 'r' then 'y' to confirm. Factory Default will erase any user settings and reset the internal receiver to stock settings. If SD is supported, any settings file and commonly used coordinate files on the SD card associated with the current profile will be removed.</p> <p></p> <p>Enabling and Starting a Factory Reset</p> <p>Factory Defaults will erase any user settings and reset the internal receiver to stock settings. To prevent accidental reset the checkbox must first be checked before the button is pressed. Any logs on SD are maintained. Any settings file and commonly used coordinate files on the SD card associated with the current profile will be removed.</p>"},{"location":"menu_tcp_udp/","title":"TCP/UDP Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>NMEA data is generally consumed by a GIS application or Data Collector. These messages can be transmitted over a variety of transport methods. This section focuses on the delivery of NMEA messages via TCP and UDP.</p> <p></p> <p>TCP/UDP Menu showing various Client and Server options</p>"},{"location":"menu_tcp_udp/#tcp-client-and-server","title":"TCP Client and Server","text":"<p>The RTK device supports connection over TCP. The TCP Client sits on top of the network layer (WiFi or Ethernet) and sends position data to one or more computers or cell phones for display. Some Data Collector software (such as Vespucci) requires that the SparkFun RTK device connect as a TCP Client. Other software (such as QGIS) requires that the SparkFun RTK device acts as a TCP Server. Both are supported.</p> <p>Note</p> <p>Currently for WiFi: TCP is only supported while connected to local WiFi, not AP mode. This means the device will need to be connected to a WiFi network, such as a mobile hotspot, before TCP connections can occur.</p> <p></p> <p>If either Client or Server is enabled, a port can be designated. By default, the port is 2947 (registered as GPS Daemon request/response) but any port 0 to 65535 is supported.</p> <p></p> <p>The above animation was generated using TCP_Server.py.</p>"},{"location":"menu_tcp_udp/#udp-server","title":"UDP Server","text":"<p>NMEA messages can also be broadcast via UDP on Ethernet and WiFi, rather than TCP. If enabled, the UDP Server will begin broadcasting NMEA data over the specific port (default 10110).</p>"},{"location":"menu_tilt/","title":"Tilt Compensation Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>Tilt Compensation menu</p> <p>The Tilt Compensation menu controls how the tilt sensor is configured.</p> <ul> <li>1 - By default, tilt compensation is enabled but can be disabled if desired.</li> <li>2 - The pole length must be set accurately to enter tilt compensation mode. The default is 1.8 meters.</li> </ul>"},{"location":"menu_tilt/#entering-tilt-compensation-mode","title":"Entering Tilt Compensation Mode","text":"<p>To use Tilt Compensation, the user must indicate to the IMU to begin calibration by shaking the device. Then, once the IMU has calculated its position on the end of the pole, Tilt Compensation will be active.</p> <p>During Tilt Compensation, all outgoing NMEA messages are modified to output the location of the tip of the pole. The Data Collector software will not be aware that the position of the GNSS receiver position is being modified. Moving the tip of the pole is allowed. Tilt up to 30 degrees will introduce less than 10mm of inaccuracy. Tilt up to 60 degrees will introduce less than 20mm of inaccuracy.</p> <p>If the audible beeper is enabled, a long beep will be heard when the IMU starts calibration (by shaking). A short beep will be heard when the IMU completes calibration and Tilt Compensation is active. A short beep will continue every 10 seconds to let the user know Tilt Compensation is being applied.</p> <p>Tilt Compensation mode will be exited when the user short presses the power button, and a long beep will be heard. Additionally, Tilt Compensation mode will be exited if RTK Fix is lost. When this happens, the IMU will attempt to re-enter Tilt Compensation mode if RTK Fix is re-achieved.</p> <p>Tilt compensation mode can be entered using the following steps:</p> <ol> <li>The device must be in Rover mode.</li> <li>The device must achieve an RTK Fix.</li> <li>The pole length must be accurately configured. By default, this is 1.8 meters.</li> <li>Once the above requirements are met, the device must be shaken. This is normally a strong up/down vertical motion. However, if it is more comfortable, the device can be positioned horizontally over the shoulder and shaken with a strong forward/backward motion.</li> <li>On devices that support it, the device will emit a chirp once Tilt Mode is started.</li> <li>Place the tip of the device on the ground. Move the head of the device back and forth up to ~30 degrees of tilt. Repeat on the opposite axis.</li> <li>On devices that support it, the device will emit a long chirp once Tilt Compensation Mode is active. The device is now outputting the location of the tip of the pole.</li> <li>Exit Tilt Compensation Mode by short pressing the power button.</li> </ol>"},{"location":"menu_userprofiles/","title":"User Profiles Menu","text":"<ul> <li>EVK: </li> <li>Postcard: </li> <li>Torch: </li> </ul> <p>User Profiles Menu</p> <p>Profiles are a very powerful feature. A profile is a complete copy of all the settings on the RTK product. Switching profiles changes all the settings in one step. This is handy for creating a complex setup for surveying, and a different setup for an NTRIP-enabled base station. Rather than changing the variety of parameters, a user can simply switch profiles.</p> <p>Profiles can be selected, renamed, reset to defaults, and completely erased from the User Profiles menu.</p>"},{"location":"menu_userprofiles/#user-profile-selection-via-display","title":"User Profile Selection via Display","text":"<p>Multiple Profiles on Menu</p> <p>On devices that have a display, if more than one profile is defined, the profiles will be displayed and selectable by using the Power/Setup button. Only the first 7 characters of a profile's name will be shown on the menu. Once a profile has been selected, the device will reboot using that profile.</p>"},{"location":"menu_wifi/","title":"WiFi Menu","text":"<ul> <li>Postcard: </li> <li>Torch: </li> </ul> <p>WiFi Menu containing one network</p> <p>The WiFi menu allows a user to input credentials of up to four WiFi networks. WiFi is used for a variety of features on the RTK device. When WiFi is needed, the RTK device will attempt to connect to any network on the list of WiFi networks. For example, if you enter your home WiFi, work WiFi, and the WiFi for a mobile hotspot, the RTK device will automatically detect and connect to the network with the strongest signal.</p> <p>Additionally, the device will continue to try to connect to WiFi if a connection is not made. The connection timeout starts at 15 seconds and increases by 15 seconds with each failed attempt. For example, 15, 30, 45, etc seconds are delayed between each new WiFi connection attempt. Once a successful connection is made, the timeout is reset.</p> <p>WiFi is used for the following features:</p> <ul> <li>NTRIP Client or Server</li> <li>TCP Client or Server</li> <li>Firmware Updates</li> <li>Device Configuration (WiFi mode only)</li> <li>PointPerfect (Access keys and IP-based corrections)</li> </ul>"},{"location":"menu_wifi/#configure-device-via-wifi-access-point-of-connect-to-wifi","title":"Configure device via WiFi Access Point of connect to WiFi","text":"<p>By default, when a user enters the WiFi config mode (either by using the external button or with the System Mode Switch), the device will stop what it is doing and enter WiFi Config mode. If this setting is set to <code>AP</code> then the RTK device will broadcast as an access point with the name RTK Config. If this setting is set to <code>WiFi</code>, then the device will attempt to connect to that WiFi network. The <code>AP</code> setting is best for in-field configuration, and the <code>WiFi</code> setting is handy for configuration from a laptop or desktop on the same WiFi network.</p> <p></p> <p>Configuring over WiFi allows the device to be configured from any desktop computer that has access to the same WiFi network. This method allows for greater control from a full-size keyboard and mouse.</p> <p></p> <p>On devices that have a display, when the device enters WiFi config mode it will display the WiFi network it is connected to as well as its assigned IP address.</p>"},{"location":"menu_wifi/#captive-portal","title":"Captive Portal","text":"<p>If Captive Portal is enabled, when a user connects to the Access Point the user will automatically be directed towards the correct page. This works with most, but not all phones.</p>"},{"location":"menu_wifi/#mdns","title":"MDNS","text":"<p>Multicast DNS or MDNS allows the RTK device to be discovered over wireless networks without needing to know the IP. For example, when MDNS is enabled, simply type 'rtk.local' into a browser to connect to the RTK Config page. This feature works both for 'WiFi Access Point' or direct WiFi config.</p> <p>Note</p> <p>When using WiFi config, you must be on the same subdomain (in other words, the same WiFi or Ethernet network) as the RTK device.</p>"},{"location":"permanent_base/","title":"Creating a Permanent Base","text":"<p>This section show various options to create your own base station. This is ideal if your Rover will stay within ~20km (12 miles) of the base station.</p>"},{"location":"permanent_base/#rtk-mosaic","title":"RTK mosaic","text":"<p> <p>SparkFun RTK mosaic base station kit</p> <p>This is the gold standard for RTK base station kits. The RTK mosaic is multi-band/multi-signal/multi-constellation capable, includes all the bits you need (minus the antenna mounting hardware) to have a fully fledged CORS (continuously operating reference station). Additionally, the RTK mosaic is capable of transmitting to up to four Casters so you can push correction data simultaneously to your own caster (say RTK2Go) and to casters that may generate some income (ie, Onocoy or Geodnet).</p> <p> <p>Magnetic antenna mount</p> <p>If you've got a metal roof or parapet, the magentic mount makes installation even easier.</p>"},{"location":"permanent_base/#rtk-reference-station","title":"RTK Reference Station","text":"<p> <p>SparkFun RTK Reference Station kit</p> <p>The RTK Reference Station is similar to the RTK mosaic; it has all the parts you need and is a very capable CORS. While being slightly cheaper in price, it is only dual band (L1/L2) capable so the corrections are quite as good as the tri-band RTK mosaic. Additionally, the RTK Reference Station is only capable of transmitting to a single Caster so you can't push correction data simultaneously to say RTK2Go and Onocoy at the same time.</p> <p> <p>Magnetic antenna mount</p> <p>If you've got a metal roof or parapet, the magentic mount makes installation even easier.</p>"},{"location":"permanent_base/#diy-base-station","title":"DIY Base Station","text":"<p>The base station at SparkFun</p> <p>If you're looking to build a base station on the cheap, or if you're more of a DIYer, checkout our How to Build a DIY GNSS Reference Station. This will go into depth about how to bring various pieces together to build your own continously operating GNSS reference station (CORS).</p>"},{"location":"quickstart-evk/","title":"Quick Start - RTK EVK","text":"<p>This quick start guide will get you started in 10 minutes or less. For the full product manual, please proceed to the Introduction.</p> <p>Are you using Android or iOS?</p>"},{"location":"quickstart-evk/#android","title":"Android","text":"<ol> <li> <p>Download SW Maps. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p>  Download SW Maps for Android  </p> </li> <li> <p>Connect the antennas.</p> <ul> <li>The RTK EVK has its own hookup guide which has a dedicated section on hardware hookup. As a minimum:</li> <li>Position the L1/L2/L5 GNSS antenna outside, with a clear view of the sky</li> <li>Connect the GNSS antenna to the EVK using the supplied TNC-SMA cable</li> <li>Attach the combined WiFi and Bluetooth\u00ae antenna</li> </ul> <p>  Figure 1  </p> </li> <li> <p>Provide power.</p> <ul> <li>Connect a power source. The EVK can be powered by: either of the two USB-C ports on the front panel; Power-over-Ethernet; or a DC voltage source (9V-36V) via the VIN screw terminals on the rear.</li> <li>The simplest way is to connect the provided USB power supply to one of the USB-C ports using the provided cable.</li> <li> <p>The EVK will power on and begin to acquire satellites.</p> <p>  Figure 2  </p> </li> </ul> </li> <li> <p>From your cell phone, open Bluetooth settings and pair it with a new device. You will see a list of available Bluetooth devices. Select the \u2018EVK Rover-3AF1\u2019. The '3AF1' is the last four digits of the device's MAC address and will vary depending on the device (Figure 3).</p> <p>  Figure 3  </p> </li> <li> <p>Once paired, open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019.</p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You should see the \u2018EVK Rover-3AF1\u2019 in the list. Select it. Confirm that the Instrument Model is SparkFun RTK, then press the \u2018Connect\u2019 button in the bottom right corner (Figure 4). SW Maps will show a warning that the instrument height is 0m. That\u2019s ok.</p> <p>  Figure 4  </p> </li> <li> <p>Make sure the GNSS antenna is outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Press the SW Maps icon in the top left corner of the home screen and select GNSS Status. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 5). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will decrease as more satellites are acquired. The lower the HPA the more accurate your position.</p> <p>  Figure 5  </p> </li> </ol> <p>To improve the accuracy (down to 1.4cm), you now need to enable the PointPerfect corrections. Continue reading the RTK Crash Course.</p>"},{"location":"quickstart-evk/#ios","title":"iOS","text":"<p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK products support Bluetooth Low Energy (BLE) which does work with iOS.</p> <ol> <li> <p>Download SW Maps for iOS. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p>  Download SW Maps for iOS  </p> </li> <li> <p>Connect the antennas.</p> <ul> <li>The RTK EVK has its own hookup guide which has a dedicated section on hardware hookup. As a minimum:</li> <li>Position the L1/L2/L5 GNSS antenna outside, with a clear view of the sky</li> <li>Connect the GNSS antenna to the EVK using the supplied TNC-SMA cable</li> <li> <p>Attach the combined WiFi and Bluetooth\u00ae antenna</p> <p>  Figure 1  </p> </li> </ul> </li> <li> <p>Provide power.</p> <ul> <li>Connect a power source. The EVK can be powered by: either of the two USB-C ports on the front panel; Power-over-Ethernet; or a DC voltage source (9V-36V) via the VIN screw terminals on the rear.</li> <li>The simplest way is to connect the provided USB power supply to one of the USB-C ports using the provided cable.</li> <li> <p>The EVK will power on and begin to acquire satellites.</p> <p>  Figure 2  </p> </li> </ul> </li> <li> <p>Open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019.</p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You will need to agree to allow a Bluetooth connection. Set the Instrument Model to Generic NMEA (Bluetooth LE). Press 'Scan' and your RTK device should appear.</p> <p>  Figure 3  </p> </li> <li> <p>Select it then press the \u2018Connect\u2019 button in the bottom right corner.</p> <p>  Figure 4  </p> </li> <li> <p>Make sure the GNSS antenna is outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Press the SW Maps icon in the top left corner of the home screen and select GNSS Status. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 5). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will decrease as more satellites are acquired. The lower the HPA the more accurate your position.</p> <p>  Figure 5  </p> </li> </ol> <p>To improve the accuracy (down to 1.4cm), you now need to enable the PointPerfect corrections. Continue reading the RTK Crash Course.</p>"},{"location":"quickstart-evk/#rtk-crash-course","title":"RTK Crash Course","text":"<p>To get centimeter accuracy we need to provide the RTK unit with correction values. Corrections, often called RTCM, help the RTK unit refine its position calculations. RTCM (Radio Technical Commission for Maritime Services) can be obtained from a variety of sources but they fall into three buckets: Commercial, Public, and Civilian Reference Stations.</p> <p>See Corrections Sources for a breakdown of the options and the pros and cons of each. For this quickstart, we'll be showing you how to enable PointPerfect corrections using your one month free subscription to the L-Band + IP service.</p>"},{"location":"quickstart-evk/#pointperfect-corrections","title":"PointPerfect Corrections","text":"<p>One of the great features of the RTK EVK is that it has the ability to get corrections from PointPerfect over Ethernet or WiFi. No need for NTRIP credentials! Contact SparkFun with your device ID, pay a monthly fee of $60 per month (as of this writing) and your device will obtain credentials and start receiving corrections anywhere there is coverage. $60 per month sounds like a lot, but this is a subscription to the premium PointPerfect L-Band + IP service. The subscription allows you to use IP-based corrections over Ethernet or WiFi, and L-Band corrections using the built-in NEO-D9S L-Band receiver. We really like u-blox's new Localized Distribution service where IP corrections are generated for your exact location, improving performance and minimising your network traffic.</p> <p> <p>PointPerfect Coverage map including L-Band and IP delivery methods</p> <p>The PointPerfect IP service is available for various areas of the globe including the contiguous US, EU, South Korea, as well as parts of Brazil, Australia, and Canada. See the coverage map for specifics; the RTK EVK is compatible with all areas as it supports both L-Band and IP coverage.</p> <p>Steps to use PointPerfect:</p> <ol> <li> <p>Register the device with SparkFun by entering the device ID (this is the ID seen on the printed stickers included in the kit). It can take up to two business days for registration to complete.</p> </li> <li> <p>Put the RTK EVK into WiFi config mode by clicking the Mode button on the front panel. The first click opens the mode menu, successive clicks select the next menu option. Keep clicking until Cfg WiFi is highlighted, then do a quick double-click to select it.</p> <p>  SparkFun RTK EVK Mode Menu  </p> </li> <li> <p>From your phone, connect to the WiFi network RTK Config. You should be redirected to the WiFi Config page. If you are not, open a browser (Chrome is preferred) and type rtk.local into the address bar. The IP Address will be 192.168.4.1.</p> <p>  SparkFun RTK WiFi Configuration Interface  </p> </li> <li> <p>Under the WiFi Configuration menu, give the device WiFi credentials for your local WiFi. This can be the cellphone hotspot if local WiFi is not available. If you will be using Ethernet, you can skip this step.</p> <p>  WiFi Menu containing one network  </p> </li> <li> <p>Under the PointPerfect Configuration menu, Enable PointPefect Corrections and select your Geographic Region. If desired, enable Localized Corrections and AssistNow.</p> <p>  PointPerfect Configuration Menu  </p> <p>Note</p> <p>It is important that you set your Geographic Region correctly, via the menu or web config page, as this determines both the IP correction distribution topic and the L-Band frequency (on L-Band-capable products).</p> </li> <li> <p>Click Save Configuration. The device will record all settings in a few seconds. Then press Exit and Reset. The unit will now reboot.</p> <p>  Saving... then All Saved  </p> </li> </ol> <p>After the reboot, the device will connect to WiFi using your credentials. If you are using Ethernet instead, ensure the Ethernet cable is connected. The RTK will connect to PointPerfect, obtain keys, and begin applying corrections. Assuming your antenna is outside, after a few minutes of receiving PointPerfect corrections the device will enter RTK Float, then RTK Fix (usually under 3 minutes). Connect to the RTK EVK over SW Maps (or other) and view your position with millimeter accuracy!</p> <p></p> <p>SW Maps showing positional accuracy</p>"},{"location":"quickstart-evk/#common-gotchas","title":"Common Gotchas","text":"<ul> <li>High-precision GNSS works best with a clear view of the sky; it does not work indoors or near a window. GNSS performance is generally not affected by clouds or storms. Trees and buildings can degrade performance but usually only in very thick canopies or very near tall building walls. GNSS reception is very possible in dense urban centers with skyscrapers but high-precision RTK may be impossible.</li> <li>The location reported by the RTK device is the location of the antenna element. Lat and Long are fairly easy to obtain but if you're capturing altitude be sure to do additional reading on ARPs (antenna reference points) and how to account for the antenna height in your data collection software.</li> <li>An internet connection is required for most types of RTK. RTCM corrections can be transmitted over other types of connections (such as serial telemetry radios). The RTK EVK also supports PointPerfect L-Band geostationary satellite corrections through the built-in NEO-D9S corrections receiver. The L-Band corrections are encrypted and keys are required but, once your unit has them, corrections will be available for up to eight weeks. See Correction Transport for more details.</li> </ul>"},{"location":"quickstart-postcard/","title":"Quick Start - RTK Postcard","text":"<p>This quick start guide will get you started in 10 minutes or less. For the full product manual, please proceed to the Introduction.</p> <p>Are you using Android or iOS?</p>"},{"location":"quickstart-postcard/#android","title":"Android","text":"<ol> <li> <p>Download SW Maps. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p>  Download SW Maps for Android  </p> </li> <li> <p>Connect the antenna.</p> <ul> <li>The RTK Postcard has its own hookup guide. At a minimum you will need to attach a L1/L2/L5 GNSS antenna. The screw on helical antenna works very well or UFO with a TNC cable for greater reception but with greater weight will work. Then head outside with a clear view of the sky.</li> </ul> </li> <li> <p>Provide power.</p> <ul> <li> <p>Power the Postcard with USB or (optionally) the Portability Shield with an attached battery.</p> <p>  Figure 2  </p> </li> </ul> </li> <li> <p>From your cell phone, open Bluetooth settings and pair it with a new device. You will see a list of available Bluetooth devices. Select the \u2018Postcard Rover-3AF1\u2019. The '3AF1' is the last four digits of the device's MAC address and will vary depending on the device (Figure 3).</p> <p>  Figure 3  </p> </li> <li> <p>Once paired, open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019.</p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You should see the \u2018Postcard Rover-3AF1\u2019 in the list. Select it. Confirm that the Instrument Model is SparkFun RTK, then press the \u2018Connect\u2019 button in the bottom right corner (Figure 4). SW Maps will show a warning that the instrument height is 0m. That\u2019s ok.</p> <p>  Figure 4  </p> </li> <li> <p>Make sure the GNSS antenna is outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Press the SW Maps icon in the top left corner of the home screen and select GNSS Status. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 5). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will decrease as more satellites are acquired. The lower the HPA the more accurate your position.</p> <p>  Figure 5  </p> </li> </ol> <p>To improve the accuracy (down to 10mm), you now need to provide the device with corrections. Continue reading the RTK Crash Course.</p>"},{"location":"quickstart-postcard/#ios","title":"iOS","text":"<p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK products support Bluetooth Low Energy (BLE) which does work with iOS.</p> <ol> <li> <p>Download SW Maps for iOS. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p>  Download SW Maps for iOS  </p> </li> <li> <p>Connect the antenna.</p> <ul> <li>The RTK Postcard has its own hookup guide. At a minimum you will need to attach a L1/L2/L5 GNSS antenna. The screw on helical antenna works very well or UFO with a TNC cable for greater reception but with greater weight will work. Then head outside with a clear view of the sky.</li> </ul> </li> <li> <p>Provide power.</p> <ul> <li> <p>Power the Postcard with USB or (optionally) the Portability Shield with an attached battery.</p> <p>  Figure 2  </p> </li> </ul> </li> <li> <p>Open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019.</p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You will need to agree to allow a Bluetooth connection. Set the Instrument Model to Generic NMEA (Bluetooth LE). Press 'Scan' and your RTK device should appear.</p> <p>  Figure 3  </p> </li> <li> <p>Select it then press the \u2018Connect\u2019 button in the bottom right corner.</p> <p>  Figure 4  </p> </li> <li> <p>Make sure the GNSS antenna is outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Press the SW Maps icon in the top left corner of the home screen and select GNSS Status. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 5). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will decrease as more satellites are acquired. The lower the HPA the more accurate your position.</p> <p>  Figure 5  </p> </li> </ol> <p>To improve the accuracy (down to 10mm), you now need to provide the device with corrections. Continue reading the RTK Crash Course.</p>"},{"location":"quickstart-postcard/#rtk-crash-course","title":"RTK Crash Course","text":"<p>To get millimeter accuracy we need to provide the RTK unit with correction values. Corrections, often called RTCM, help the RTK unit refine its position calculations. RTCM (Radio Technical Commission for Maritime Services) can be obtained from a variety of sources but they fall into three buckets: Commercial, Public, and Civilian Reference Stations.</p> <p>See Corrections Sources for a breakdown of the options and the pros and cons of each. For this quickstart, we'll be showing you how to enable corrections using a monthly service called PointOneNav.</p>"},{"location":"quickstart-postcard/#ntrip-example","title":"NTRIP Example","text":"<ol> <li> <p>Create an account on PointOneNav.</p> <p>Note</p> <p>This service costs $50 per month at the time of writing.</p> </li> <li> <p>Open SW Maps and connect to the RTK device over Bluetooth.</p> </li> <li> <p>Once connected, open the SW Maps menu again (top left corner) and you will see a new option; click on \u2018NTRIP Client'.</p> </li> <li> <p>Enter the credentials provided by PointOneNav and click Connect (Figure 1). Verify that Send NMEA GGA is checked.</p> <p>  Figure 1  </p> </li> <li> <p>Corrections will be downloaded every second from PointOneNav using your phone\u2019s cellular connection and then sent down to the RTK device over Bluetooth. You don't need a very fast internet connection or a lot of data; it's only about 530 bytes per second.</p> </li> </ol> <p>Assuming you are outside, as soon as corrections are sent to the device, the bubble in SW Maps will turn Orange (RTK Float). Once RTK Fix is achieved (usually under 30 seconds) the bubble will turn Green and the HPA will be below 20mm (Figure 2). You can now take positional readings with millimeter accuracy!</p> <p></p> <p>Figure 2</p> <p>In SW Maps, the position bubble will turn from Blue (regular GNSS fix), then to Orange (RTK Float), then to Green (RTK Fix) (Figure 3).</p> <p></p> <p>Figure 3</p> <p>RTK Fix will be maintained as long as there is a clear view of the sky and corrections are delivered to the device every few seconds.</p>"},{"location":"quickstart-postcard/#common-gotchas","title":"Common Gotchas","text":"<ul> <li>High-precision GNSS works best with a clear view of the sky; it does not work indoors or near a window. GNSS performance is generally not affected by clouds or storms. Trees and buildings can degrade performance but usually only in very thick canopies or very near tall building walls. GNSS reception is very possible in dense urban centers with skyscrapers but high-precision RTK may be impossible.</li> <li>The location reported by the RTK device is the location of the antenna element. Lat and Long are fairly easy to obtain but if you're capturing altitude be sure to do additional reading on ARPs (antenna reference points) and how to account for the antenna height in your data collection software.</li> <li>An internet connection is required for most types of RTK. RTCM corrections can be transmitted over other types of connections (such as serial telemetry radios). The RTK EVK also supports PointPerfect L-Band geostationary satellite corrections through the built-in NEO-D9S corrections receiver. The L-Band corrections are encrypted and keys are required but, once your unit has them, corrections will be available for up to eight weeks. See Correction Transport for more details.</li> </ul>"},{"location":"quickstart-torch/","title":"Quick Start - RTK Torch","text":"<p>This quick start guide will get you started in 10 minutes or less. For the full product manual, please proceed to the Introduction.</p> <p>Are you using Android or iOS?</p>"},{"location":"quickstart-torch/#android","title":"Android","text":"<ol> <li> <p>Download SW Maps. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p>  Download SW Maps for Android  </p> </li> <li> <p>Mount the hardware:</p> <ul> <li>For RTK Torch: Attach the Torch to a 5/8\" 11-TPI standard surveying pole or to a monopole using the included thread adapter (Figure 1).</li> </ul> <p>  Figure 1  </p> </li> <li> <p>Turn on the RTK Torch device by pressing the Power button for 3 to 4 seconds until a beep is heard and the two front LEDs illuminate (Figure 2).</p> <p>  Figure 2  <li> <p>From your cell phone, open Bluetooth settings and pair it with a new device. You will see a list of available Bluetooth devices. Select the \u2018Torch Rover-3AF1\u2019. The '3AF1' is the last four digits of the device's MAC address and will vary depending on the device (Figure 3).</p> <p>  Figure 3  </p> </li> <li> <p>Once paired, open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019.</p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You should see the \u2018Torch Rover-3AF1\u2019 in the list. Select it. Confirm that the Instrument Model is SparkFun RTK, then press the \u2018Connect\u2019 button in the bottom right corner (Figure 4). SW Maps will show a warning that the instrument height is 0m. That\u2019s ok.</p> <p>  Figure 4  </p> </li> <li> <p>Once connected, have a look at the Bluetooth LED on the RTK device. You should see the LED turn solid. You\u2019re connected!</p> </li> <li> <p>Now put the device outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Press the SW Maps icon in the top left corner of the home screen and select GNSS Status. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 5). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will start at around 10 meters and begin to decrease. The lower the HPA the more accurate your position. This accuracy is around 2m in normal mode.</p> <p>  Figure 5  </p> </li> <p>You can now use your RTK device to measure points with good (meter) accuracy. If you need extreme accuracy (down to 8mm) continue reading the RTK Crash Course.</p>"},{"location":"quickstart-torch/#ios","title":"iOS","text":"<p>The software options for Apple iOS are much more limited because Apple products do not support Bluetooth SPP. That's ok! The SparkFun RTK products support Bluetooth Low Energy (BLE) which does work with iOS.</p> <ol> <li> <p>Download SW Maps for iOS. This may not be the GIS software you intend to do your data collection, but SW Maps is free and makes sure everything is working correctly out of the box.</p> <p>  Download SW Maps for iOS  </p> </li> <li> <p>Mount the hardware:</p> <ul> <li>For RTK Torch: Attach the Torch to a 5/8\" 11-TPI standard surveying pole or to a monopole using the included thread adapter (Figure 1).</li> </ul> <p>  Figure 1  </p> </li> <li> <p>Turn on the RTK Torch device by pressing the Power button for 3 to 4 seconds until a beep is heard and the two front LEDs illuminate (Figure 2).</p> <p>  Figure 2  <li> <p>Open SW Maps. Select \u2018New Project\u2019 and give your project a name like \u2018RTK Project\u2019.</p> </li> <li> <p>Press the SW Maps icon in the top left corner of the home screen and select Bluetooth GNSS. You will need to agree to allow a Bluetooth connection. Set the Instrument Model to Generic NMEA (Bluetooth LE). Press 'Scan' and your RTK device should appear. Select it then press the \u2018Connect\u2019 button in the bottom left corner.</p> </li> <li> <p>Once connected, have a look at the Bluetooth LED on the RTK device. You should see the LED turn solid. You\u2019re connected!</p> </li> <li> <p>Now put the device outside with a clear view of the sky. GNSS doesn\u2019t work indoors or near windows. Press the SW Maps icon in the top left corner of the home screen and select GNSS Status. Within about 30 seconds you should see 10 or more satellites in view (SIV) (Figure 3). More SIV is better. We regularly see 30 or more SIV. The horizontal positional accuracy (HPA) will start at around 10 meters and begin to decrease. The lower the HPA the more accurate your position. This accuracy is around 2m in normal mode.</p> <p>  Figure 3  </p> </li> <p>You can now use your RTK device to measure points with good (meter) accuracy. If you need extreme accuracy (down to 8mm) continue reading the RTK Crash Course.</p>"},{"location":"quickstart-torch/#rtk-crash-course","title":"RTK Crash Course","text":"<p>To get millimeter accuracy we need to provide the RTK unit with correction values. Corrections, often called RTCM, help the RTK unit refine its position calculations. RTCM (Radio Technical Commission for Maritime Services) can be obtained from a variety of sources but they fall into three buckets: Commercial, Public, and Civilian Reference Stations.</p> <p>See Corrections Sources for a breakdown of the options and the pros and cons of each. For this quickstart, we'll be showing two examples: using PointPerfect for $8 a month (a little less accurate but nation-wide coverage) and PointOne Nav for $50 a month (maximum accuracy, gaps in the coverage area).</p>"},{"location":"quickstart-torch/#pointperfect-corrections","title":"PointPerfect Corrections","text":"<p>One of the great features of the RTK Torch is that it has the ability to get corrections from PointPerfect over WiFi. No need for NTRIP credentials! Contact SparkFun with your device ID, pay a small monthly fee of $8 per month (as of this writing) and your device will obtain credentials and start receiving corrections anywhere there is coverage.</p> <p> <p>PointPerfect Coverage map including L-Band and IP delivery methods</p> <p>The PointPerfect IP service is available for various areas of the globe including the contiguous US, EU, South Korea, as well as parts of Brazil, Australia, and Canada. See the coverage map for specifics; the RTK Torch is compatible with any area that has IP Coverage (it is not compatible with L-Band coverage).</p> <p>Steps to use PointPerfect:</p> <ol> <li> <p>Register the device with SparkFun by entering the device ID (this is the ID seen on the printed stickers included in the kit). It can take up to two business days for registration to complete.</p> </li> <li> <p>Power on the RTK Torch by pressing and holding the power button for around 4 seconds. The device will emit a short beep and illuminate the LEDs.</p> </li> <li> <p>Put the RTK Torch into WiFi config mode by double-tapping the power button. You will hear two beeps indicating it is ready to connect to.</p> </li> <li> <p>From your phone, connect to the WiFi network RTK Config. You should be redirected to the WiFi Config page. If you are not, open a browser (Chrome is preferred) and type rtk.local into the address bar.</p> <p>  SparkFun RTK WiFi Configuration Interface  </p> </li> <li> <p>Under the WiFi Configuration menu, give the device WiFi credentials for your local WiFi. This can be the cellphone hotspot if local WiFi is not available.</p> <p>  WiFi Menu containing one network  </p> </li> <li> <p>Under the PointPerfect Configuration menu, Enable PointPefect Corrections and select your Geographic Region. If desired, enable Localized Corrections and AssistNow.</p> <p>  PointPerfect Configuration Menu  </p> <p>Note</p> <p>It is important that you set your Geographic Region correctly, via the menu or web config page, as this determines both the IP correction distribution topic and the L-Band frequency (on L-Band-capable products).</p> </li> <li> <p>Click Save Configuration. The device will record all settings in a few seconds. Then press Exit and Reset. The unit will now reboot.</p> <p>  Saving... then All Saved  </p> </li> </ol> <p>After the reboot, the device will connect to WiFi, obtain keys, and begin applying corrections. Assuming you are outside, after a few minutes of receiving PointPerfect corrections to the device, connect to the RTK Torch over SW Maps (or other) and the device will enter RTK Float, then RTK Fix (usually under 3 minutes). You can now take positional readings with millimeter accuracy!</p> <p></p> <p>SW Maps showing positional accuracy</p>"},{"location":"quickstart-torch/#ntrip-example","title":"NTRIP Example","text":"<p>If you decide to use a service that provides NTRIP (as opposed to PointPerfect) we need to feed that data into your SparkFun RTK device. In this example, we will use PointOneNav and SW Maps.</p> <ol> <li> <p>Create an account on PointOneNav.</p> <p>Note</p> <p>This service costs $50 per month at the time of writing.</p> </li> <li> <p>Open SW Maps and connect to the RTK device over Bluetooth.</p> </li> <li> <p>Once connected, open the SW Maps menu again (top left corner) and you will see a new option; click on \u2018NTRIP Client'.</p> </li> <li> <p>Enter the credentials provided by PointOneNav and click Connect (Figure 1). Verify that Send NMEA GGA is checked.</p> <p>  Figure 1  </p> </li> <li> <p>Corrections will be downloaded every second from PointOneNav using your phone\u2019s cellular connection and then sent down to the RTK device over Bluetooth. You don't need a very fast internet connection or a lot of data; it's only about 530 bytes per second.</p> </li> </ol> <p>Assuming you are outside, as soon as corrections are sent to the device, the bubble in SW Maps will turn Orange (RTK Float). Once RTK Fix is achieved (usually under 30 seconds) the bubble will turn Green and the HPA will be below 20mm (Figure 2). You can now take positional readings with millimeter accuracy!</p> <p></p> <p>Figure 2</p> <p>In SW Maps, the position bubble will turn from Blue (regular GNSS fix), then to Orange (RTK Float), then to Green (RTK Fix) (Figure 3).</p> <p></p> <p>Figure 3</p> <p>RTK Fix will be maintained as long as there is a clear view of the sky and corrections are delivered to the device every few seconds.</p>"},{"location":"quickstart-torch/#common-gotchas","title":"Common Gotchas","text":"<ul> <li>High-precision GNSS works best with a clear view of the sky; it does not work indoors or near a window. GNSS performance is generally not affected by clouds or storms. Trees and buildings can degrade performance but usually only in very thick canopies or very near tall building walls. GNSS reception is very possible in dense urban centers with skyscrapers but high-precision RTK may be impossible.</li> <li> <p>The location reported by the RTK device is the location of the antenna element; it's not the location of the pointy end of the stick. Lat and Long are fairly easy to obtain but if you're capturing altitude be sure to do additional reading on ARPs (antenna reference points) and how to account for the antenna height in your data collection software. The Torch ARP is here.</p> <p>Note</p> <p>This rule does not apply when tilt compensation is activated. See the Tilt Compensation Menu for more information.</p> </li> <li> <p>An internet connection is required for most types of RTK. RTCM corrections can be transmitted over other types of connections (such as serial telemetry radios). See Correction Transport for more details.</p> </li> </ul>"},{"location":"readme/","title":"Readme","text":"<p>This folder contains the markdown files for the RTK Product Manual that are rendered by mkdocs.</p>"},{"location":"reference_documents/","title":"Reference Documents","text":"<p>This is a list of technical documents pertaining to each RTK Everywhere based product.</p> <ul> <li>RTK Torch<ul> <li>Datasheets</li> <li>Hookup Guide</li> </ul> </li> <li>RTK EVK<ul> <li>Datasheets</li> <li>Hookup Guide</li> </ul> </li> </ul>"},{"location":"repair/","title":"Disassembly / Repair","text":"<ul> <li>Torch: </li> <li>EVK: </li> </ul> <p>The RTK product line is fully open-source hardware. This allows users to view schematics, code, and repair manuals. This section documents how to safely disassemble the RTK Facet and Torch.</p> <p>Repair Parts:</p> <ul> <li> <p> <p>SparkFun RTK Replacement Parts - Facet Main Board v13 SPX-24064</p> <li> <p> <p>SparkFun RTK Replacement Parts - Facet Housing SPX-24673</p> <li> <p> <p>SparkFun RTK Replacement Parts - Facet L-Band Housing SPX-24674</p> <li> <p> <p>SparkFun RTK Replacement Parts - Facet L-Band Main Board v14 SPX-24675</p> <li> <p> <p>SparkFun RTK Replacement Parts - Facet Display/Button SPX-24705</p> <li> <p> <p>SparkFun RTK Replacement Parts - Facet Connector Assembly v12 SPX-24706</p> <li> <p> <p>SparkFun RTK Replacement Parts - Facet Rubber Sock SPX-24707</p> <p>Tools Needed:</p> <ul> <li>Small Philips Head Screwdriver</li> <li>Curved Tweezers</li> <li>U.FL Puller - Recommended</li> <li>Wire Cutters - Recommended</li> </ul>"},{"location":"repair/#facet","title":"Facet","text":""},{"location":"repair/#opening-enclosure","title":"Opening Enclosure","text":"<p>Starting from the back of the unit, remove the protective silicone boot. If your boot has gotten particularly dirty from field use, rinse it with warm water and soap to clean it up.</p> <p></p> <p>Remove the four Philips head screws. They may not come all the way out of the lower enclosure.</p> <p></p> <p>The top lid should then come off. The front overlay is adhesive and may adhere slightly to the 'tooth' on the lid. You will not damage anything by gently prying it loose from the lid as you lift the lid.</p> <p>Tip</p> <p>The lid makes a great screw bin.</p> <p></p> <p>Attention</p> <p>Please, note the antenna orientation so that it can be re-mounted in the same way. A sharpie dot towards the display is a handy method.</p> <p>Remove the four screws holding the antenna in place.</p> <p>Be aware that the antenna material is susceptible to fingerprints. You won't likely damage the reception but it's best to just avoid touching the elements.</p> <p></p> <p>The antenna will be attached to the main board and must stay that way for the next few steps. Without pulling on the thin RF cable, gently set the antenna to the side.</p> <p></p> <p>The battery and vertical PCBs are held in place using a retention PCB. Remove the four screws holding the PCB in place and lift off the foam top of the battery holder.</p> <p>Note</p> <p>v1.0 of the retention plate is not symmetrical. Meaning, if the plate is installed in reverse, the retention PCB will be just short of the connector board and will not properly hold it in place. Reinstall the retention plate as shown in the picture.</p> <p>Note</p> <p>The foam is held to the PCB using an adhesive. Some of that adhesive is exposed to catch material that may enter into the enclosure. Try to avoid getting stuck.</p> <p></p> <p>Set the retention PCB to the side.</p>"},{"location":"repair/#removing-antenna-connection","title":"Removing Antenna Connection","text":"<p>This is the most dangerous step. The cable connecting the antenna to the main board uses something called a U.FL or IPEX connector. These tend to be fragile. You can damage the connector rendering the unit inoperable. Just be sure to take your time.</p> <p>Using the U.FL removal tool, slide the tool onto the U.FL connector and gently pull away from the main board. If it won't give, you may need to angle the tool slightly while pulling.</p> <p>Note</p> <p>If you do not have a U.FL tool this tutorial on U.FL connectors has three alternative methods using tweezers, wire cutters, and a skinny PCB that may also work.</p> <p></p> <p>The U.FL connector will disconnect. The antenna can now be set to the side.</p>"},{"location":"repair/#opening-backflip-connectors","title":"Opening Backflip Connectors","text":"<p>Many of the connections made within the RTK product line use this 'back flip' style of FPC connector. To open the connector and release the flex printed circuit (FPC) cable, use a curved pair of tweezers to gently flip up the arm. The arm in the connector above has been flipped, the FPC can now be removed.</p> <p>As shown above, remove the FPC connecting to the 4th connector on the main board. The connector is labeled 'SD Display'. Leave all other FPCs in place.</p> <p></p> <p>The main board is attached to the battery and the connector board. Lift the mainboard and connector board together, bringing the battery with the assembly.</p>"},{"location":"repair/#removing-the-battery","title":"Removing the Battery","text":"<p>Note</p> <p>This step is not needed for general repair. Only disconnect the battery if you are replacing the battery.</p> <p>The battery is plugged into the mainboard using a JST connector. These are very strong connectors. Do not pull on the wires. We recommend using the mouth of wire cutters (also known as diagonal cutters) to pry the connector sideways.</p> <p>Once removed, the battery can be set aside.</p>"},{"location":"repair/#removing-the-front-overlay","title":"Removing the Front Overlay","text":"<p>The front overlay (the sticker with the Power button) is connected to the display board using the same style 'back flip' FPC connector. Flip up the arm and disconnect the overlay.</p> <p></p> <p>Gently peel off the adhesive overlay from the front face. This cannot be saved.</p>"},{"location":"repair/#inserting-new-display-board","title":"Inserting New Display Board","text":"<p>Slide the old display board out. Remove the brown FPC from the old display board and move over to the new display board. Insert the new display board into the slot.</p> <p></p> <p>With the new display board in place, remove the protective film from the display.</p> <p></p> <p>Remove the backing from the new overlay. Stick the overlay into the center of the front face area.</p> <p></p> <p>Be sure to flip up the arm on the overlay connector before trying to insert the new overlay FPC.</p> <p>Using tweezers, and holding the FPC by the cable stiffener, insert the overlay FPC into the display board.</p>"},{"location":"repair/#closing-the-backflip-connector","title":"Closing The Backflip Connector","text":"<p>Use the nose of the tweezers to press the arm down, securing the FPC in place.</p> <p></p> <p>If you haven't already done so, move the brown FPC from the original display board over to the new display board. Be sure to open the connector before inserting the FPC, and then press down on the arm to secure it in place.</p>"},{"location":"repair/#reinstalling-main-board","title":"Reinstalling Main Board","text":"<p>Slide the main board and connector boards back into place along with the battery. We find it easier to partially insert the connector board, then the main board, and then adjust them down together.</p> <p></p> <p>Reconnect the display board to the main board. Be sure to close the arm on the main board to secure the FPC in place.</p>"},{"location":"repair/#testing-the-overlay","title":"Testing the Overlay","text":"<p>The RTK Facet has two power buttons: the external button on the overlay and an internal button on the back of the display board (shown above). Pressing and holding the internal button will verify the connection between the display board and the main board.</p> <p>If the internal button is not working, remove and reinsert the FPC connecting the display board to the main board.</p> <p>Press and hold the internal power button to power down the unit.</p> <p></p> <p>Repeat the process using the overlay button to verify the external power button is working.</p> <p>If the external overlay button is not working, but the internal button is, remove and reinsert the FPC connecting the overlay to the display board.</p> <p>If the external button is working, proceed with re-assembling the unit.</p>"},{"location":"repair/#reassembly","title":"Reassembly","text":"<p>Confirm that all FPC armatures are in the down and locked position.</p> <p></p> <p>Carefully line the U.FL connector up with the main board and gently press the connector in place. A tool is useful in this step but an index finger works just as reliably.</p> <p></p> <p>Place the retention plate and foam over the battery. The battery may need to be nudged slightly to align with the upper cavity.</p> <p>Note</p> <p>v1.0 of the retention plate is not symmetrical. Meaning, if the plate is installed in reverse, the retention PCB will be just short of the connector board and will not properly hold it in place. Reinstall the retention plate as shown in the picture above.</p> <p>Secure the retention plate with the four small screws.</p> <p></p> <p>Place the antenna over top of the retention plate in the same orientation as it was removed. Secure in place with the four large screws.</p> <p></p> <p>Plate the dome over the antenna with the front 'tooth' aligning over the display.</p> <p></p> <p>Secure the dome in place using four small screws.</p> <p>Replace the silicone boot around the device.</p> <p>Power on the RTK Facet and take outside to confirm SIV reaches above ~20 satellites and HPA is below ~1.0m.</p>"},{"location":"repair/#torch","title":"Torch","text":""},{"location":"repair/#opening-enclosure_1","title":"Opening Enclosure","text":"<p>The RTK Torch can be opened by removing four Phillips head screws located on the bottom of the enclosure.</p> <p></p> <p>Antenna covered removed from the RTK Torch</p>"},{"location":"repair/#removing-antenna-stackup","title":"Removing Antenna Stackup","text":"<p>Once the antenna cover is removed, remove the three Phillips holding the antenna in place.</p> <p>With the screws removed, gently and very carefully pull up on the upper PCB antenna. There is an MMCX connector that will pop loose, along with a U.FL connection. Pulling too hard may damage the connectors, the PCB antennas, or both.</p>"},{"location":"repair/#removing-mainboard","title":"Removing Mainboard","text":"<p>The RTK Torch mainboard</p> <p>With the mainboard removed, three Phillips head screws hold the mainboard in place. Remove these screws and the mainboard will be released. Remove the battery connector from the bottom side of the mainboard to free it.</p>"},{"location":"repair/#remoing-battery","title":"Remoing Battery","text":"<p>The lower 7.2V LiPo battery pack is held in place by a metal retaining plate. Remove the Phillips head screws to release the battery.</p>"}]}